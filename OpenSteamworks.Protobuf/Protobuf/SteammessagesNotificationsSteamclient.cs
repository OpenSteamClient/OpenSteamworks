// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_notifications.steamclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf {

  /// <summary>Holder for reflection information generated from steammessages_notifications.steamclient.proto</summary>
  public static partial class SteammessagesNotificationsSteamclientReflection {

    #region Descriptor
    /// <summary>File descriptor for steammessages_notifications.steamclient.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SteammessagesNotificationsSteamclientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1zdGVhbW1lc3NhZ2VzX25vdGlmaWNhdGlvbnMuc3RlYW1jbGllbnQucHJv",
            "dG8aIGdvb2dsZS9wcm90b2J1Zi9kZXNjcmlwdG9yLnByb3RvGhhzdGVhbW1l",
            "c3NhZ2VzX2Jhc2UucHJvdG8aLHN0ZWFtbWVzc2FnZXNfdW5pZmllZF9iYXNl",
            "LnN0ZWFtY2xpZW50LnByb3RvIoYCChVTdGVhbU5vdGlmaWNhdGlvbkRhdGES",
            "FwoPbm90aWZpY2F0aW9uX2lkGAEgASgEEhwKFG5vdGlmaWNhdGlvbl90YXJn",
            "ZXRzGAIgASgNElIKEW5vdGlmaWNhdGlvbl90eXBlGAMgASgOMhcuRVN0ZWFt",
            "Tm90aWZpY2F0aW9uVHlwZToeRVN0ZWFtTm90aWZpY2F0aW9uVHlwZV9JbnZh",
            "bGlkEhEKCWJvZHlfZGF0YRgEIAEoCRIMCgRyZWFkGAcgASgIEhEKCXRpbWVz",
            "dGFtcBgIIAEoDRIOCgZoaWRkZW4YCSABKAgSDgoGZXhwaXJ5GAogASgNEg4K",
            "BnZpZXdlZBgLIAEoDSLFAQo1Q1N0ZWFtTm90aWZpY2F0aW9uX05vdGlmaWNh",
            "dGlvbnNSZWNlaXZlZF9Ob3RpZmljYXRpb24SLQoNbm90aWZpY2F0aW9ucxgB",
            "IAMoCzIWLlN0ZWFtTm90aWZpY2F0aW9uRGF0YRIaChJwZW5kaW5nX2dpZnRf",
            "Y291bnQYAiABKA0SHAoUcGVuZGluZ19mcmllbmRfY291bnQYAyABKA0SIwob",
            "cGVuZGluZ19mYW1pbHlfaW52aXRlX2NvdW50GAQgASgNIo8BChtTdGVhbU5v",
            "dGlmaWNhdGlvblByZWZlcmVuY2USUgoRbm90aWZpY2F0aW9uX3R5cGUYASAB",
            "KA4yFy5FU3RlYW1Ob3RpZmljYXRpb25UeXBlOh5FU3RlYW1Ob3RpZmljYXRp",
            "b25UeXBlX0ludmFsaWQSHAoUbm90aWZpY2F0aW9uX3RhcmdldHMYAiABKA0i",
            "ZwoyQ1N0ZWFtTm90aWZpY2F0aW9uX1ByZWZlcmVuY2VzVXBkYXRlZF9Ob3Rp",
            "ZmljYXRpb24SMQoLcHJlZmVyZW5jZXMYASADKAsyHC5TdGVhbU5vdGlmaWNh",
            "dGlvblByZWZlcmVuY2UquwkKFkVTdGVhbU5vdGlmaWNhdGlvblR5cGUSIgoe",
            "RVN0ZWFtTm90aWZpY2F0aW9uVHlwZV9JbnZhbGlkEAASHwobRVN0ZWFtTm90",
            "aWZpY2F0aW9uVHlwZV9UZXN0EAESHwobRVN0ZWFtTm90aWZpY2F0aW9uVHlw",
            "ZV9HaWZ0EAISIgoeRVN0ZWFtTm90aWZpY2F0aW9uVHlwZV9Db21tZW50EAMS",
            "HwobRVN0ZWFtTm90aWZpY2F0aW9uVHlwZV9JdGVtEAQSJwojRVN0ZWFtTm90",
            "aWZpY2F0aW9uVHlwZV9GcmllbmRJbnZpdGUQBRIkCiBFU3RlYW1Ob3RpZmlj",
            "YXRpb25UeXBlX01ham9yU2FsZRAGEisKJ0VTdGVhbU5vdGlmaWNhdGlvblR5",
            "cGVfUHJlbG9hZEF2YWlsYWJsZRAHEiMKH0VTdGVhbU5vdGlmaWNhdGlvblR5",
            "cGVfV2lzaGxpc3QQCBIlCiFFU3RlYW1Ob3RpZmljYXRpb25UeXBlX1RyYWRl",
            "T2ZmZXIQCRIiCh5FU3RlYW1Ob3RpZmljYXRpb25UeXBlX0dlbmVyYWwQChIm",
            "CiJFU3RlYW1Ob3RpZmljYXRpb25UeXBlX0hlbHBSZXF1ZXN0EAsSJAogRVN0",
            "ZWFtTm90aWZpY2F0aW9uVHlwZV9Bc3luY0dhbWUQDBIiCh5FU3RlYW1Ob3Rp",
            "ZmljYXRpb25UeXBlX0NoYXRNc2cQDRInCiNFU3RlYW1Ob3RpZmljYXRpb25U",
            "eXBlX01vZGVyYXRvck1zZxAOEjcKM0VTdGVhbU5vdGlmaWNhdGlvblR5cGVf",
            "UGFyZW50YWxGZWF0dXJlQWNjZXNzUmVxdWVzdBAPEicKI0VTdGVhbU5vdGlm",
            "aWNhdGlvblR5cGVfRmFtaWx5SW52aXRlEBASMAosRVN0ZWFtTm90aWZpY2F0",
            "aW9uVHlwZV9GYW1pbHlQdXJjaGFzZVJlcXVlc3QQERIyCi5FU3RlYW1Ob3Rp",
            "ZmljYXRpb25UeXBlX1BhcmVudGFsUGxheXRpbWVSZXF1ZXN0EBISOAo0RVN0",
            "ZWFtTm90aWZpY2F0aW9uVHlwZV9GYW1pbHlQdXJjaGFzZVJlcXVlc3RSZXNw",
            "b25zZRATEjgKNEVTdGVhbU5vdGlmaWNhdGlvblR5cGVfUGFyZW50YWxGZWF0",
            "dXJlQWNjZXNzUmVzcG9uc2UQFBIzCi9FU3RlYW1Ob3RpZmljYXRpb25UeXBl",
            "X1BhcmVudGFsUGxheXRpbWVSZXNwb25zZRAVEi0KKUVTdGVhbU5vdGlmaWNh",
            "dGlvblR5cGVfUmVxdWVzdGVkR2FtZUFkZGVkEBYSJgoiRVN0ZWFtTm90aWZp",
            "Y2F0aW9uVHlwZV9TZW5kVG9QaG9uZRAXEikKJUVTdGVhbU5vdGlmaWNhdGlv",
            "blR5cGVfQ2xpcERvd25sb2FkZWQQGBIkCiBFU3RlYW1Ob3RpZmljYXRpb25U",
            "eXBlXzJGQVByb21wdBAZEi0KKUVTdGVhbU5vdGlmaWNhdGlvblR5cGVfTW9i",
            "aWxlQ29uZmlybWF0aW9uEBoSJwojRVN0ZWFtTm90aWZpY2F0aW9uVHlwZV9Q",
            "YXJ0bmVyRXZlbnQQGzLVAQoXU3RlYW1Ob3RpZmljYXRpb25DbGllbnQSXAoV",
            "Tm90aWZpY2F0aW9uc1JlY2VpdmVkEjYuQ1N0ZWFtTm90aWZpY2F0aW9uX05v",
            "dGlmaWNhdGlvbnNSZWNlaXZlZF9Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNl",
            "ElYKElByZWZlcmVuY2VzVXBkYXRlZBIzLkNTdGVhbU5vdGlmaWNhdGlvbl9Q",
            "cmVmZXJlbmNlc1VwZGF0ZWRfTm90aWZpY2F0aW9uGgsuTm9SZXNwb25zZRoE",
            "wLUYAkIdgAEBqgIXT3BlblN0ZWFtd29ya3MuUHJvdG9idWY="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::OpenSteamworks.Protobuf.SteammessagesBaseReflection.Descriptor, global::OpenSteamworks.Protobuf.SteammessagesUnifiedBaseSteamclientReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::OpenSteamworks.Protobuf.ESteamNotificationType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.SteamNotificationData), global::OpenSteamworks.Protobuf.SteamNotificationData.Parser, new[]{ "NotificationId", "NotificationTargets", "NotificationType", "BodyData", "Read", "Timestamp", "Hidden", "Expiry", "Viewed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSteamNotification_NotificationsReceived_Notification), global::OpenSteamworks.Protobuf.CSteamNotification_NotificationsReceived_Notification.Parser, new[]{ "Notifications", "PendingGiftCount", "PendingFriendCount", "PendingFamilyInviteCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.SteamNotificationPreference), global::OpenSteamworks.Protobuf.SteamNotificationPreference.Parser, new[]{ "NotificationType", "NotificationTargets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CSteamNotification_PreferencesUpdated_Notification), global::OpenSteamworks.Protobuf.CSteamNotification_PreferencesUpdated_Notification.Parser, new[]{ "Preferences" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ESteamNotificationType {
    [pbr::OriginalName("ESteamNotificationType_Invalid")] Invalid = 0,
    [pbr::OriginalName("ESteamNotificationType_Test")] Test = 1,
    [pbr::OriginalName("ESteamNotificationType_Gift")] Gift = 2,
    [pbr::OriginalName("ESteamNotificationType_Comment")] Comment = 3,
    [pbr::OriginalName("ESteamNotificationType_Item")] Item = 4,
    [pbr::OriginalName("ESteamNotificationType_FriendInvite")] FriendInvite = 5,
    [pbr::OriginalName("ESteamNotificationType_MajorSale")] MajorSale = 6,
    [pbr::OriginalName("ESteamNotificationType_PreloadAvailable")] PreloadAvailable = 7,
    [pbr::OriginalName("ESteamNotificationType_Wishlist")] Wishlist = 8,
    [pbr::OriginalName("ESteamNotificationType_TradeOffer")] TradeOffer = 9,
    [pbr::OriginalName("ESteamNotificationType_General")] General = 10,
    [pbr::OriginalName("ESteamNotificationType_HelpRequest")] HelpRequest = 11,
    [pbr::OriginalName("ESteamNotificationType_AsyncGame")] AsyncGame = 12,
    [pbr::OriginalName("ESteamNotificationType_ChatMsg")] ChatMsg = 13,
    [pbr::OriginalName("ESteamNotificationType_ModeratorMsg")] ModeratorMsg = 14,
    [pbr::OriginalName("ESteamNotificationType_ParentalFeatureAccessRequest")] ParentalFeatureAccessRequest = 15,
    [pbr::OriginalName("ESteamNotificationType_FamilyInvite")] FamilyInvite = 16,
    [pbr::OriginalName("ESteamNotificationType_FamilyPurchaseRequest")] FamilyPurchaseRequest = 17,
    [pbr::OriginalName("ESteamNotificationType_ParentalPlaytimeRequest")] ParentalPlaytimeRequest = 18,
    [pbr::OriginalName("ESteamNotificationType_FamilyPurchaseRequestResponse")] FamilyPurchaseRequestResponse = 19,
    [pbr::OriginalName("ESteamNotificationType_ParentalFeatureAccessResponse")] ParentalFeatureAccessResponse = 20,
    [pbr::OriginalName("ESteamNotificationType_ParentalPlaytimeResponse")] ParentalPlaytimeResponse = 21,
    [pbr::OriginalName("ESteamNotificationType_RequestedGameAdded")] RequestedGameAdded = 22,
    [pbr::OriginalName("ESteamNotificationType_SendToPhone")] SendToPhone = 23,
    [pbr::OriginalName("ESteamNotificationType_ClipDownloaded")] ClipDownloaded = 24,
    [pbr::OriginalName("ESteamNotificationType_2FAPrompt")] _2Faprompt = 25,
    [pbr::OriginalName("ESteamNotificationType_MobileConfirmation")] MobileConfirmation = 26,
    [pbr::OriginalName("ESteamNotificationType_PartnerEvent")] PartnerEvent = 27,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SteamNotificationData : pb::IMessage<SteamNotificationData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SteamNotificationData> _parser = new pb::MessageParser<SteamNotificationData>(() => new SteamNotificationData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SteamNotificationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesNotificationsSteamclientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SteamNotificationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SteamNotificationData(SteamNotificationData other) : this() {
      _hasBits0 = other._hasBits0;
      notificationId_ = other.notificationId_;
      notificationTargets_ = other.notificationTargets_;
      notificationType_ = other.notificationType_;
      bodyData_ = other.bodyData_;
      read_ = other.read_;
      timestamp_ = other.timestamp_;
      hidden_ = other.hidden_;
      expiry_ = other.expiry_;
      viewed_ = other.viewed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SteamNotificationData Clone() {
      return new SteamNotificationData(this);
    }

    /// <summary>Field number for the "notification_id" field.</summary>
    public const int NotificationIdFieldNumber = 1;
    private readonly static ulong NotificationIdDefaultValue = 0UL;

    private ulong notificationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong NotificationId {
      get { if ((_hasBits0 & 1) != 0) { return notificationId_; } else { return NotificationIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        notificationId_ = value;
      }
    }
    /// <summary>Gets whether the "notification_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "notification_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "notification_targets" field.</summary>
    public const int NotificationTargetsFieldNumber = 2;
    private readonly static uint NotificationTargetsDefaultValue = 0;

    private uint notificationTargets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NotificationTargets {
      get { if ((_hasBits0 & 2) != 0) { return notificationTargets_; } else { return NotificationTargetsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        notificationTargets_ = value;
      }
    }
    /// <summary>Gets whether the "notification_targets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationTargets {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "notification_targets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationTargets() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "notification_type" field.</summary>
    public const int NotificationTypeFieldNumber = 3;
    private readonly static global::OpenSteamworks.Protobuf.ESteamNotificationType NotificationTypeDefaultValue = global::OpenSteamworks.Protobuf.ESteamNotificationType.Invalid;

    private global::OpenSteamworks.Protobuf.ESteamNotificationType notificationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ESteamNotificationType NotificationType {
      get { if ((_hasBits0 & 4) != 0) { return notificationType_; } else { return NotificationTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        notificationType_ = value;
      }
    }
    /// <summary>Gets whether the "notification_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "notification_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "body_data" field.</summary>
    public const int BodyDataFieldNumber = 4;
    private readonly static string BodyDataDefaultValue = "";

    private string bodyData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BodyData {
      get { return bodyData_ ?? BodyDataDefaultValue; }
      set {
        bodyData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "body_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBodyData {
      get { return bodyData_ != null; }
    }
    /// <summary>Clears the value of the "body_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBodyData() {
      bodyData_ = null;
    }

    /// <summary>Field number for the "read" field.</summary>
    public const int ReadFieldNumber = 7;
    private readonly static bool ReadDefaultValue = false;

    private bool read_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Read {
      get { if ((_hasBits0 & 8) != 0) { return read_; } else { return ReadDefaultValue; } }
      set {
        _hasBits0 |= 8;
        read_ = value;
      }
    }
    /// <summary>Gets whether the "read" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRead {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "read" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRead() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 8;
    private readonly static uint TimestampDefaultValue = 0;

    private uint timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Timestamp {
      get { if ((_hasBits0 & 16) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 16;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestamp {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestamp() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "hidden" field.</summary>
    public const int HiddenFieldNumber = 9;
    private readonly static bool HiddenDefaultValue = false;

    private bool hidden_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Hidden {
      get { if ((_hasBits0 & 32) != 0) { return hidden_; } else { return HiddenDefaultValue; } }
      set {
        _hasBits0 |= 32;
        hidden_ = value;
      }
    }
    /// <summary>Gets whether the "hidden" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHidden {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "hidden" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHidden() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "expiry" field.</summary>
    public const int ExpiryFieldNumber = 10;
    private readonly static uint ExpiryDefaultValue = 0;

    private uint expiry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Expiry {
      get { if ((_hasBits0 & 64) != 0) { return expiry_; } else { return ExpiryDefaultValue; } }
      set {
        _hasBits0 |= 64;
        expiry_ = value;
      }
    }
    /// <summary>Gets whether the "expiry" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpiry {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "expiry" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpiry() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "viewed" field.</summary>
    public const int ViewedFieldNumber = 11;
    private readonly static uint ViewedDefaultValue = 0;

    private uint viewed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Viewed {
      get { if ((_hasBits0 & 128) != 0) { return viewed_; } else { return ViewedDefaultValue; } }
      set {
        _hasBits0 |= 128;
        viewed_ = value;
      }
    }
    /// <summary>Gets whether the "viewed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewed {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "viewed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewed() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SteamNotificationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SteamNotificationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NotificationId != other.NotificationId) return false;
      if (NotificationTargets != other.NotificationTargets) return false;
      if (NotificationType != other.NotificationType) return false;
      if (BodyData != other.BodyData) return false;
      if (Read != other.Read) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Hidden != other.Hidden) return false;
      if (Expiry != other.Expiry) return false;
      if (Viewed != other.Viewed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNotificationId) hash ^= NotificationId.GetHashCode();
      if (HasNotificationTargets) hash ^= NotificationTargets.GetHashCode();
      if (HasNotificationType) hash ^= NotificationType.GetHashCode();
      if (HasBodyData) hash ^= BodyData.GetHashCode();
      if (HasRead) hash ^= Read.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (HasHidden) hash ^= Hidden.GetHashCode();
      if (HasExpiry) hash ^= Expiry.GetHashCode();
      if (HasViewed) hash ^= Viewed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNotificationId) {
        output.WriteRawTag(8);
        output.WriteUInt64(NotificationId);
      }
      if (HasNotificationTargets) {
        output.WriteRawTag(16);
        output.WriteUInt32(NotificationTargets);
      }
      if (HasNotificationType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) NotificationType);
      }
      if (HasBodyData) {
        output.WriteRawTag(34);
        output.WriteString(BodyData);
      }
      if (HasRead) {
        output.WriteRawTag(56);
        output.WriteBool(Read);
      }
      if (HasTimestamp) {
        output.WriteRawTag(64);
        output.WriteUInt32(Timestamp);
      }
      if (HasHidden) {
        output.WriteRawTag(72);
        output.WriteBool(Hidden);
      }
      if (HasExpiry) {
        output.WriteRawTag(80);
        output.WriteUInt32(Expiry);
      }
      if (HasViewed) {
        output.WriteRawTag(88);
        output.WriteUInt32(Viewed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNotificationId) {
        output.WriteRawTag(8);
        output.WriteUInt64(NotificationId);
      }
      if (HasNotificationTargets) {
        output.WriteRawTag(16);
        output.WriteUInt32(NotificationTargets);
      }
      if (HasNotificationType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) NotificationType);
      }
      if (HasBodyData) {
        output.WriteRawTag(34);
        output.WriteString(BodyData);
      }
      if (HasRead) {
        output.WriteRawTag(56);
        output.WriteBool(Read);
      }
      if (HasTimestamp) {
        output.WriteRawTag(64);
        output.WriteUInt32(Timestamp);
      }
      if (HasHidden) {
        output.WriteRawTag(72);
        output.WriteBool(Hidden);
      }
      if (HasExpiry) {
        output.WriteRawTag(80);
        output.WriteUInt32(Expiry);
      }
      if (HasViewed) {
        output.WriteRawTag(88);
        output.WriteUInt32(Viewed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNotificationId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NotificationId);
      }
      if (HasNotificationTargets) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NotificationTargets);
      }
      if (HasNotificationType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NotificationType);
      }
      if (HasBodyData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BodyData);
      }
      if (HasRead) {
        size += 1 + 1;
      }
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
      }
      if (HasHidden) {
        size += 1 + 1;
      }
      if (HasExpiry) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Expiry);
      }
      if (HasViewed) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Viewed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SteamNotificationData other) {
      if (other == null) {
        return;
      }
      if (other.HasNotificationId) {
        NotificationId = other.NotificationId;
      }
      if (other.HasNotificationTargets) {
        NotificationTargets = other.NotificationTargets;
      }
      if (other.HasNotificationType) {
        NotificationType = other.NotificationType;
      }
      if (other.HasBodyData) {
        BodyData = other.BodyData;
      }
      if (other.HasRead) {
        Read = other.Read;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.HasHidden) {
        Hidden = other.Hidden;
      }
      if (other.HasExpiry) {
        Expiry = other.Expiry;
      }
      if (other.HasViewed) {
        Viewed = other.Viewed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NotificationId = input.ReadUInt64();
            break;
          }
          case 16: {
            NotificationTargets = input.ReadUInt32();
            break;
          }
          case 24: {
            NotificationType = (global::OpenSteamworks.Protobuf.ESteamNotificationType) input.ReadEnum();
            break;
          }
          case 34: {
            BodyData = input.ReadString();
            break;
          }
          case 56: {
            Read = input.ReadBool();
            break;
          }
          case 64: {
            Timestamp = input.ReadUInt32();
            break;
          }
          case 72: {
            Hidden = input.ReadBool();
            break;
          }
          case 80: {
            Expiry = input.ReadUInt32();
            break;
          }
          case 88: {
            Viewed = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NotificationId = input.ReadUInt64();
            break;
          }
          case 16: {
            NotificationTargets = input.ReadUInt32();
            break;
          }
          case 24: {
            NotificationType = (global::OpenSteamworks.Protobuf.ESteamNotificationType) input.ReadEnum();
            break;
          }
          case 34: {
            BodyData = input.ReadString();
            break;
          }
          case 56: {
            Read = input.ReadBool();
            break;
          }
          case 64: {
            Timestamp = input.ReadUInt32();
            break;
          }
          case 72: {
            Hidden = input.ReadBool();
            break;
          }
          case 80: {
            Expiry = input.ReadUInt32();
            break;
          }
          case 88: {
            Viewed = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSteamNotification_NotificationsReceived_Notification : pb::IMessage<CSteamNotification_NotificationsReceived_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSteamNotification_NotificationsReceived_Notification> _parser = new pb::MessageParser<CSteamNotification_NotificationsReceived_Notification>(() => new CSteamNotification_NotificationsReceived_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSteamNotification_NotificationsReceived_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesNotificationsSteamclientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSteamNotification_NotificationsReceived_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSteamNotification_NotificationsReceived_Notification(CSteamNotification_NotificationsReceived_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      notifications_ = other.notifications_.Clone();
      pendingGiftCount_ = other.pendingGiftCount_;
      pendingFriendCount_ = other.pendingFriendCount_;
      pendingFamilyInviteCount_ = other.pendingFamilyInviteCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSteamNotification_NotificationsReceived_Notification Clone() {
      return new CSteamNotification_NotificationsReceived_Notification(this);
    }

    /// <summary>Field number for the "notifications" field.</summary>
    public const int NotificationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.SteamNotificationData> _repeated_notifications_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.SteamNotificationData.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.SteamNotificationData> notifications_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.SteamNotificationData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.SteamNotificationData> Notifications {
      get { return notifications_; }
    }

    /// <summary>Field number for the "pending_gift_count" field.</summary>
    public const int PendingGiftCountFieldNumber = 2;
    private readonly static uint PendingGiftCountDefaultValue = 0;

    private uint pendingGiftCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PendingGiftCount {
      get { if ((_hasBits0 & 1) != 0) { return pendingGiftCount_; } else { return PendingGiftCountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        pendingGiftCount_ = value;
      }
    }
    /// <summary>Gets whether the "pending_gift_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPendingGiftCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "pending_gift_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPendingGiftCount() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pending_friend_count" field.</summary>
    public const int PendingFriendCountFieldNumber = 3;
    private readonly static uint PendingFriendCountDefaultValue = 0;

    private uint pendingFriendCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PendingFriendCount {
      get { if ((_hasBits0 & 2) != 0) { return pendingFriendCount_; } else { return PendingFriendCountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        pendingFriendCount_ = value;
      }
    }
    /// <summary>Gets whether the "pending_friend_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPendingFriendCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pending_friend_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPendingFriendCount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pending_family_invite_count" field.</summary>
    public const int PendingFamilyInviteCountFieldNumber = 4;
    private readonly static uint PendingFamilyInviteCountDefaultValue = 0;

    private uint pendingFamilyInviteCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PendingFamilyInviteCount {
      get { if ((_hasBits0 & 4) != 0) { return pendingFamilyInviteCount_; } else { return PendingFamilyInviteCountDefaultValue; } }
      set {
        _hasBits0 |= 4;
        pendingFamilyInviteCount_ = value;
      }
    }
    /// <summary>Gets whether the "pending_family_invite_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPendingFamilyInviteCount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pending_family_invite_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPendingFamilyInviteCount() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSteamNotification_NotificationsReceived_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSteamNotification_NotificationsReceived_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!notifications_.Equals(other.notifications_)) return false;
      if (PendingGiftCount != other.PendingGiftCount) return false;
      if (PendingFriendCount != other.PendingFriendCount) return false;
      if (PendingFamilyInviteCount != other.PendingFamilyInviteCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= notifications_.GetHashCode();
      if (HasPendingGiftCount) hash ^= PendingGiftCount.GetHashCode();
      if (HasPendingFriendCount) hash ^= PendingFriendCount.GetHashCode();
      if (HasPendingFamilyInviteCount) hash ^= PendingFamilyInviteCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      notifications_.WriteTo(output, _repeated_notifications_codec);
      if (HasPendingGiftCount) {
        output.WriteRawTag(16);
        output.WriteUInt32(PendingGiftCount);
      }
      if (HasPendingFriendCount) {
        output.WriteRawTag(24);
        output.WriteUInt32(PendingFriendCount);
      }
      if (HasPendingFamilyInviteCount) {
        output.WriteRawTag(32);
        output.WriteUInt32(PendingFamilyInviteCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      notifications_.WriteTo(ref output, _repeated_notifications_codec);
      if (HasPendingGiftCount) {
        output.WriteRawTag(16);
        output.WriteUInt32(PendingGiftCount);
      }
      if (HasPendingFriendCount) {
        output.WriteRawTag(24);
        output.WriteUInt32(PendingFriendCount);
      }
      if (HasPendingFamilyInviteCount) {
        output.WriteRawTag(32);
        output.WriteUInt32(PendingFamilyInviteCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += notifications_.CalculateSize(_repeated_notifications_codec);
      if (HasPendingGiftCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PendingGiftCount);
      }
      if (HasPendingFriendCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PendingFriendCount);
      }
      if (HasPendingFamilyInviteCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PendingFamilyInviteCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSteamNotification_NotificationsReceived_Notification other) {
      if (other == null) {
        return;
      }
      notifications_.Add(other.notifications_);
      if (other.HasPendingGiftCount) {
        PendingGiftCount = other.PendingGiftCount;
      }
      if (other.HasPendingFriendCount) {
        PendingFriendCount = other.PendingFriendCount;
      }
      if (other.HasPendingFamilyInviteCount) {
        PendingFamilyInviteCount = other.PendingFamilyInviteCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            notifications_.AddEntriesFrom(input, _repeated_notifications_codec);
            break;
          }
          case 16: {
            PendingGiftCount = input.ReadUInt32();
            break;
          }
          case 24: {
            PendingFriendCount = input.ReadUInt32();
            break;
          }
          case 32: {
            PendingFamilyInviteCount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            notifications_.AddEntriesFrom(ref input, _repeated_notifications_codec);
            break;
          }
          case 16: {
            PendingGiftCount = input.ReadUInt32();
            break;
          }
          case 24: {
            PendingFriendCount = input.ReadUInt32();
            break;
          }
          case 32: {
            PendingFamilyInviteCount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SteamNotificationPreference : pb::IMessage<SteamNotificationPreference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SteamNotificationPreference> _parser = new pb::MessageParser<SteamNotificationPreference>(() => new SteamNotificationPreference());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SteamNotificationPreference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesNotificationsSteamclientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SteamNotificationPreference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SteamNotificationPreference(SteamNotificationPreference other) : this() {
      _hasBits0 = other._hasBits0;
      notificationType_ = other.notificationType_;
      notificationTargets_ = other.notificationTargets_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SteamNotificationPreference Clone() {
      return new SteamNotificationPreference(this);
    }

    /// <summary>Field number for the "notification_type" field.</summary>
    public const int NotificationTypeFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.ESteamNotificationType NotificationTypeDefaultValue = global::OpenSteamworks.Protobuf.ESteamNotificationType.Invalid;

    private global::OpenSteamworks.Protobuf.ESteamNotificationType notificationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ESteamNotificationType NotificationType {
      get { if ((_hasBits0 & 1) != 0) { return notificationType_; } else { return NotificationTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        notificationType_ = value;
      }
    }
    /// <summary>Gets whether the "notification_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "notification_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "notification_targets" field.</summary>
    public const int NotificationTargetsFieldNumber = 2;
    private readonly static uint NotificationTargetsDefaultValue = 0;

    private uint notificationTargets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NotificationTargets {
      get { if ((_hasBits0 & 2) != 0) { return notificationTargets_; } else { return NotificationTargetsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        notificationTargets_ = value;
      }
    }
    /// <summary>Gets whether the "notification_targets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotificationTargets {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "notification_targets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotificationTargets() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SteamNotificationPreference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SteamNotificationPreference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NotificationType != other.NotificationType) return false;
      if (NotificationTargets != other.NotificationTargets) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNotificationType) hash ^= NotificationType.GetHashCode();
      if (HasNotificationTargets) hash ^= NotificationTargets.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNotificationType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) NotificationType);
      }
      if (HasNotificationTargets) {
        output.WriteRawTag(16);
        output.WriteUInt32(NotificationTargets);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNotificationType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) NotificationType);
      }
      if (HasNotificationTargets) {
        output.WriteRawTag(16);
        output.WriteUInt32(NotificationTargets);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNotificationType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NotificationType);
      }
      if (HasNotificationTargets) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NotificationTargets);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SteamNotificationPreference other) {
      if (other == null) {
        return;
      }
      if (other.HasNotificationType) {
        NotificationType = other.NotificationType;
      }
      if (other.HasNotificationTargets) {
        NotificationTargets = other.NotificationTargets;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NotificationType = (global::OpenSteamworks.Protobuf.ESteamNotificationType) input.ReadEnum();
            break;
          }
          case 16: {
            NotificationTargets = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NotificationType = (global::OpenSteamworks.Protobuf.ESteamNotificationType) input.ReadEnum();
            break;
          }
          case 16: {
            NotificationTargets = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CSteamNotification_PreferencesUpdated_Notification : pb::IMessage<CSteamNotification_PreferencesUpdated_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSteamNotification_PreferencesUpdated_Notification> _parser = new pb::MessageParser<CSteamNotification_PreferencesUpdated_Notification>(() => new CSteamNotification_PreferencesUpdated_Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CSteamNotification_PreferencesUpdated_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesNotificationsSteamclientReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSteamNotification_PreferencesUpdated_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSteamNotification_PreferencesUpdated_Notification(CSteamNotification_PreferencesUpdated_Notification other) : this() {
      preferences_ = other.preferences_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CSteamNotification_PreferencesUpdated_Notification Clone() {
      return new CSteamNotification_PreferencesUpdated_Notification(this);
    }

    /// <summary>Field number for the "preferences" field.</summary>
    public const int PreferencesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.SteamNotificationPreference> _repeated_preferences_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.SteamNotificationPreference.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.SteamNotificationPreference> preferences_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.SteamNotificationPreference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.SteamNotificationPreference> Preferences {
      get { return preferences_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CSteamNotification_PreferencesUpdated_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CSteamNotification_PreferencesUpdated_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!preferences_.Equals(other.preferences_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= preferences_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      preferences_.WriteTo(output, _repeated_preferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      preferences_.WriteTo(ref output, _repeated_preferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += preferences_.CalculateSize(_repeated_preferences_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CSteamNotification_PreferencesUpdated_Notification other) {
      if (other == null) {
        return;
      }
      preferences_.Add(other.preferences_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            preferences_.AddEntriesFrom(input, _repeated_preferences_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            preferences_.AddEntriesFrom(ref input, _repeated_preferences_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code

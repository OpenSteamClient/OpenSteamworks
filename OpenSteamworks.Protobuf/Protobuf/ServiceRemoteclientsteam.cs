// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service_remoteclientsteam.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf.WebUI {

  /// <summary>Holder for reflection information generated from service_remoteclientsteam.proto</summary>
  public static partial class ServiceRemoteclientsteamReflection {

    #region Descriptor
    /// <summary>File descriptor for service_remoteclientsteam.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceRemoteclientsteamReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9zZXJ2aWNlX3JlbW90ZWNsaWVudHN0ZWFtLnByb3RvGiBnb29nbGUvcHJv",
            "dG9idWYvZGVzY3JpcHRvci5wcm90bxoRY29tbW9uX2Jhc2UucHJvdG8iaQov",
            "Q1JlbW90ZUNsaWVudF9SZWdpc3RlclN0YXR1c1VwZGF0ZV9Ob3RpZmljYXRp",
            "b24SEgoKc2Vzc2lvbl9pZBgBIAEoBhIPCgdzdGVhbWlkGAIgASgGEhEKCWRl",
            "dmljZV9pZBgDIAEoBiJfCidDUmVtb3RlQ2xpZW50X1JlbW90ZVBhY2tldF9O",
            "b3RpZmljYXRpb24SEgoKc2Vzc2lvbl9pZBgBIAEoBhIPCgdzdGVhbWlkGAIg",
            "ASgGEg8KB3BheWxvYWQYBCABKAwiXwopQ1JlbW90ZUNsaWVudF9TdGVhbUJy",
            "b2FkY2FzdF9Ob3RpZmljYXRpb24SDwoHc3RlYW1pZBgBIAEoBhIQCghjbGll",
            "bnRpZBgCIAEoBhIPCgdwYXlsb2FkGAMgASgMIpMBCidDUmVtb3RlQ2xpZW50",
            "X1N0ZWFtVG9TdGVhbV9Ob3RpZmljYXRpb24SDwoHc3RlYW1pZBgBIAEoBhIU",
            "CgxzcmNfY2xpZW50aWQYAiABKAYSFAoMZHN0X2NsaWVudGlkGAMgASgGEhAK",
            "CHNlY3JldGlkGAQgASgNEhkKEWVuY3J5cHRlZF9wYXlsb2FkGAUgASgMIlkK",
            "EkNSZW1vdGVDbGllbnRfVGFzaxIWCgR0eXBlGAEgASgFQgiCtRgEZW51bRIN",
            "CgV0YXNpZBgCIAEoBhILCgN1cmwYAyABKAkSDwoHZmlsZV9pZBgEIAEoAyJm",
            "CiNDUmVtb3RlQ2xpZW50X1Rhc2tMaXN0X05vdGlmaWNhdGlvbhIYChByZW1v",
            "dGVfY2xpZW50X2lkGAEgASgGEiUKCHRhc2tsaXN0GAIgAygLMhMuQ1JlbW90",
            "ZUNsaWVudF9UYXNrIlgKMUNSZW1vdGVDbGllbnRfVW5yZWdpc3RlclN0YXR1",
            "c1VwZGF0ZV9Ob3RpZmljYXRpb24SEgoKc2Vzc2lvbl9pZBgBIAEoBhIPCgdz",
            "dGVhbWlkGAIgASgGInoKIENSZW1vdGVQbGF5VG9nZXRoZXJfTm90aWZpY2F0",
            "aW9uEg8KB3N0ZWFtaWQYASABKAYSRQoNZ3JvdXBfdXBkYXRlZBgCIAEoCzIu",
            "LkNSZW1vdGVQbGF5VG9nZXRoZXJfTm90aWZpY2F0aW9uX0dyb3VwVXBkYXRl",
            "ZCKUAQovQ1JlbW90ZVBsYXlUb2dldGhlcl9Ob3RpZmljYXRpb25fQ29udHJv",
            "bGxlclNsb3QSDgoGc2xvdGlkGAEgASgNEjgKBnBsYXllchgCIAEoCzIoLkNS",
            "ZW1vdGVQbGF5VG9nZXRoZXJfTm90aWZpY2F0aW9uX1BsYXllchIXCg9jb250",
            "cm9sbGVyX3R5cGUYAyABKAUiWwo4Q1JlbW90ZVBsYXlUb2dldGhlcl9Ob3Rp",
            "ZmljYXRpb25fQ29udHJvbGxlclNsb3Rfb2Jzb2xldGUSDgoGc2xvdGlkGAEg",
            "ASgNEg8KB3N0ZWFtaWQYAiABKAYijgMKLUNSZW1vdGVQbGF5VG9nZXRoZXJf",
            "Tm90aWZpY2F0aW9uX0dyb3VwVXBkYXRlZBIUCgxob3N0X3N0ZWFtaWQYASAB",
            "KAYSFQoNaG9zdF9jbGllbnRpZBgCIAEoBhIYChBwbGF5ZXJzX29ic29sZXRl",
            "GAMgAygGEhMKC2hvc3RfZ2FtZWlkGAQgASgGElwKGWNvbnRyb2xsZXJfc2xv",
            "dHNfb2Jzb2xldGUYBSADKAsyOS5DUmVtb3RlUGxheVRvZ2V0aGVyX05vdGlm",
            "aWNhdGlvbl9Db250cm9sbGVyU2xvdF9vYnNvbGV0ZRIXCg9oYXNfbmV3X3Bs",
            "YXllcnMYBiABKAgSPgoMcGxheWVyX3Nsb3RzGAcgAygLMiguQ1JlbW90ZVBs",
            "YXlUb2dldGhlcl9Ob3RpZmljYXRpb25fUGxheWVyEkoKEGNvbnRyb2xsZXJf",
            "c2xvdHMYCCADKAsyMC5DUmVtb3RlUGxheVRvZ2V0aGVyX05vdGlmaWNhdGlv",
            "bl9Db250cm9sbGVyU2xvdCKtAQonQ1JlbW90ZVBsYXlUb2dldGhlcl9Ob3Rp",
            "ZmljYXRpb25fUGxheWVyEg8KB3N0ZWFtaWQYASABKAYSDwoHZ3Vlc3RpZBgC",
            "IAEoDRITCgthdmF0YXJfaGFzaBgDIAEoDBIYChBrZXlib2FyZF9lbmFibGVk",
            "GAQgASgIEhUKDW1vdXNlX2VuYWJsZWQYBSABKAgSGgoSY29udHJvbGxlcl9l",
            "bmFibGVkGAYgASgIMuUEChdSZW1vdGVDbGllbnRTdGVhbUNsaWVudBJbChpO",
            "b3RpZnlSZWdpc3RlclN0YXR1c1VwZGF0ZRIwLkNSZW1vdGVDbGllbnRfUmVn",
            "aXN0ZXJTdGF0dXNVcGRhdGVfTm90aWZpY2F0aW9uGgsuTm9SZXNwb25zZRJL",
            "ChJOb3RpZnlSZW1vdGVQYWNrZXQSKC5DUmVtb3RlQ2xpZW50X1JlbW90ZVBh",
            "Y2tldF9Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNlElAKHk5vdGlmeVJlbW90",
            "ZVBsYXlUb2dldGhlclBhY2tldBIhLkNSZW1vdGVQbGF5VG9nZXRoZXJfTm90",
            "aWZpY2F0aW9uGgsuTm9SZXNwb25zZRJVChpOb3RpZnlTdGVhbUJyb2FkY2Fz",
            "dFBhY2tldBIqLkNSZW1vdGVDbGllbnRfU3RlYW1Ccm9hZGNhc3RfTm90aWZp",
            "Y2F0aW9uGgsuTm9SZXNwb25zZRJRChhOb3RpZnlTdGVhbVRvU3RlYW1QYWNr",
            "ZXQSKC5DUmVtb3RlQ2xpZW50X1N0ZWFtVG9TdGVhbV9Ob3RpZmljYXRpb24a",
            "Cy5Ob1Jlc3BvbnNlEkMKDk5vdGlmeVRhc2tMaXN0EiQuQ1JlbW90ZUNsaWVu",
            "dF9UYXNrTGlzdF9Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNlEl8KHE5vdGlm",
            "eVVucmVnaXN0ZXJTdGF0dXNVcGRhdGUSMi5DUmVtb3RlQ2xpZW50X1VucmVn",
            "aXN0ZXJTdGF0dXNVcGRhdGVfTm90aWZpY2F0aW9uGgsuTm9SZXNwb25zZUIg",
            "qgIdT3BlblN0ZWFtd29ya3MuUHJvdG9idWYuV2ViVUk="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::OpenSteamworks.Protobuf.WebUI.CommonBaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_RegisterStatusUpdate_Notification), global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_RegisterStatusUpdate_Notification.Parser, new[]{ "SessionId", "Steamid", "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_RemotePacket_Notification), global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_RemotePacket_Notification.Parser, new[]{ "SessionId", "Steamid", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_SteamBroadcast_Notification), global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_SteamBroadcast_Notification.Parser, new[]{ "Steamid", "Clientid", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_SteamToSteam_Notification), global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_SteamToSteam_Notification.Parser, new[]{ "Steamid", "SrcClientid", "DstClientid", "Secretid", "EncryptedPayload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_Task), global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_Task.Parser, new[]{ "Type", "Tasid", "Url", "FileId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_TaskList_Notification), global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_TaskList_Notification.Parser, new[]{ "RemoteClientId", "Tasklist" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_UnregisterStatusUpdate_Notification), global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_UnregisterStatusUpdate_Notification.Parser, new[]{ "SessionId", "Steamid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification), global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification.Parser, new[]{ "Steamid", "GroupUpdated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot), global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot.Parser, new[]{ "Slotid", "Player", "ControllerType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot_obsolete), global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot_obsolete.Parser, new[]{ "Slotid", "Steamid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_GroupUpdated), global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_GroupUpdated.Parser, new[]{ "HostSteamid", "HostClientid", "PlayersObsolete", "HostGameid", "ControllerSlotsObsolete", "HasNewPlayers", "PlayerSlots", "ControllerSlots" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_Player), global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_Player.Parser, new[]{ "Steamid", "Guestid", "AvatarHash", "KeyboardEnabled", "MouseEnabled", "ControllerEnabled" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemoteClient_RegisterStatusUpdate_Notification : pb::IMessage<CRemoteClient_RegisterStatusUpdate_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemoteClient_RegisterStatusUpdate_Notification> _parser = new pb::MessageParser<CRemoteClient_RegisterStatusUpdate_Notification>(() => new CRemoteClient_RegisterStatusUpdate_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemoteClient_RegisterStatusUpdate_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceRemoteclientsteamReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_RegisterStatusUpdate_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_RegisterStatusUpdate_Notification(CRemoteClient_RegisterStatusUpdate_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      sessionId_ = other.sessionId_;
      steamid_ = other.steamid_;
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_RegisterStatusUpdate_Notification Clone() {
      return new CRemoteClient_RegisterStatusUpdate_Notification(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private readonly static ulong SessionIdDefaultValue = 0UL;

    private ulong sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SessionId {
      get { if ((_hasBits0 & 1) != 0) { return sessionId_; } else { return SessionIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sessionId_ = value;
      }
    }
    /// <summary>Gets whether the "session_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "session_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 2;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 2) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 3;
    private readonly static ulong DeviceIdDefaultValue = 0UL;

    private ulong deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DeviceId {
      get { if ((_hasBits0 & 4) != 0) { return deviceId_; } else { return DeviceIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        deviceId_ = value;
      }
    }
    /// <summary>Gets whether the "device_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "device_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceId() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemoteClient_RegisterStatusUpdate_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemoteClient_RegisterStatusUpdate_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (Steamid != other.Steamid) return false;
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSessionId) hash ^= SessionId.GetHashCode();
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasDeviceId) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSessionId) {
        output.WriteRawTag(9);
        output.WriteFixed64(SessionId);
      }
      if (HasSteamid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Steamid);
      }
      if (HasDeviceId) {
        output.WriteRawTag(25);
        output.WriteFixed64(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSessionId) {
        output.WriteRawTag(9);
        output.WriteFixed64(SessionId);
      }
      if (HasSteamid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Steamid);
      }
      if (HasDeviceId) {
        output.WriteRawTag(25);
        output.WriteFixed64(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSessionId) {
        size += 1 + 8;
      }
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasDeviceId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemoteClient_RegisterStatusUpdate_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasSessionId) {
        SessionId = other.SessionId;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasDeviceId) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SessionId = input.ReadFixed64();
            break;
          }
          case 17: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 25: {
            DeviceId = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            SessionId = input.ReadFixed64();
            break;
          }
          case 17: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 25: {
            DeviceId = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemoteClient_RemotePacket_Notification : pb::IMessage<CRemoteClient_RemotePacket_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemoteClient_RemotePacket_Notification> _parser = new pb::MessageParser<CRemoteClient_RemotePacket_Notification>(() => new CRemoteClient_RemotePacket_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemoteClient_RemotePacket_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceRemoteclientsteamReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_RemotePacket_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_RemotePacket_Notification(CRemoteClient_RemotePacket_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      sessionId_ = other.sessionId_;
      steamid_ = other.steamid_;
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_RemotePacket_Notification Clone() {
      return new CRemoteClient_RemotePacket_Notification(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private readonly static ulong SessionIdDefaultValue = 0UL;

    private ulong sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SessionId {
      get { if ((_hasBits0 & 1) != 0) { return sessionId_; } else { return SessionIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sessionId_ = value;
      }
    }
    /// <summary>Gets whether the "session_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "session_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 2;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 2) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 4;
    private readonly static pb::ByteString PayloadDefaultValue = pb::ByteString.Empty;

    private pb::ByteString payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Payload {
      get { return payload_ ?? PayloadDefaultValue; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "payload" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayload {
      get { return payload_ != null; }
    }
    /// <summary>Clears the value of the "payload" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayload() {
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemoteClient_RemotePacket_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemoteClient_RemotePacket_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (Steamid != other.Steamid) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSessionId) hash ^= SessionId.GetHashCode();
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasPayload) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSessionId) {
        output.WriteRawTag(9);
        output.WriteFixed64(SessionId);
      }
      if (HasSteamid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Steamid);
      }
      if (HasPayload) {
        output.WriteRawTag(34);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSessionId) {
        output.WriteRawTag(9);
        output.WriteFixed64(SessionId);
      }
      if (HasSteamid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Steamid);
      }
      if (HasPayload) {
        output.WriteRawTag(34);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSessionId) {
        size += 1 + 8;
      }
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasPayload) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemoteClient_RemotePacket_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasSessionId) {
        SessionId = other.SessionId;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasPayload) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SessionId = input.ReadFixed64();
            break;
          }
          case 17: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 34: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            SessionId = input.ReadFixed64();
            break;
          }
          case 17: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 34: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemoteClient_SteamBroadcast_Notification : pb::IMessage<CRemoteClient_SteamBroadcast_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemoteClient_SteamBroadcast_Notification> _parser = new pb::MessageParser<CRemoteClient_SteamBroadcast_Notification>(() => new CRemoteClient_SteamBroadcast_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemoteClient_SteamBroadcast_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceRemoteclientsteamReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_SteamBroadcast_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_SteamBroadcast_Notification(CRemoteClient_SteamBroadcast_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      clientid_ = other.clientid_;
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_SteamBroadcast_Notification Clone() {
      return new CRemoteClient_SteamBroadcast_Notification(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clientid" field.</summary>
    public const int ClientidFieldNumber = 2;
    private readonly static ulong ClientidDefaultValue = 0UL;

    private ulong clientid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Clientid {
      get { if ((_hasBits0 & 2) != 0) { return clientid_; } else { return ClientidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clientid_ = value;
      }
    }
    /// <summary>Gets whether the "clientid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "clientid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 3;
    private readonly static pb::ByteString PayloadDefaultValue = pb::ByteString.Empty;

    private pb::ByteString payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Payload {
      get { return payload_ ?? PayloadDefaultValue; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "payload" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPayload {
      get { return payload_ != null; }
    }
    /// <summary>Clears the value of the "payload" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayload() {
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemoteClient_SteamBroadcast_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemoteClient_SteamBroadcast_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Clientid != other.Clientid) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasClientid) hash ^= Clientid.GetHashCode();
      if (HasPayload) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasClientid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Clientid);
      }
      if (HasPayload) {
        output.WriteRawTag(26);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasClientid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Clientid);
      }
      if (HasPayload) {
        output.WriteRawTag(26);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasClientid) {
        size += 1 + 8;
      }
      if (HasPayload) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemoteClient_SteamBroadcast_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasClientid) {
        Clientid = other.Clientid;
      }
      if (other.HasPayload) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 17: {
            Clientid = input.ReadFixed64();
            break;
          }
          case 26: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 17: {
            Clientid = input.ReadFixed64();
            break;
          }
          case 26: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemoteClient_SteamToSteam_Notification : pb::IMessage<CRemoteClient_SteamToSteam_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemoteClient_SteamToSteam_Notification> _parser = new pb::MessageParser<CRemoteClient_SteamToSteam_Notification>(() => new CRemoteClient_SteamToSteam_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemoteClient_SteamToSteam_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceRemoteclientsteamReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_SteamToSteam_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_SteamToSteam_Notification(CRemoteClient_SteamToSteam_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      srcClientid_ = other.srcClientid_;
      dstClientid_ = other.dstClientid_;
      secretid_ = other.secretid_;
      encryptedPayload_ = other.encryptedPayload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_SteamToSteam_Notification Clone() {
      return new CRemoteClient_SteamToSteam_Notification(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "src_clientid" field.</summary>
    public const int SrcClientidFieldNumber = 2;
    private readonly static ulong SrcClientidDefaultValue = 0UL;

    private ulong srcClientid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SrcClientid {
      get { if ((_hasBits0 & 2) != 0) { return srcClientid_; } else { return SrcClientidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        srcClientid_ = value;
      }
    }
    /// <summary>Gets whether the "src_clientid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSrcClientid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "src_clientid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSrcClientid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "dst_clientid" field.</summary>
    public const int DstClientidFieldNumber = 3;
    private readonly static ulong DstClientidDefaultValue = 0UL;

    private ulong dstClientid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DstClientid {
      get { if ((_hasBits0 & 4) != 0) { return dstClientid_; } else { return DstClientidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        dstClientid_ = value;
      }
    }
    /// <summary>Gets whether the "dst_clientid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDstClientid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "dst_clientid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDstClientid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "secretid" field.</summary>
    public const int SecretidFieldNumber = 4;
    private readonly static uint SecretidDefaultValue = 0;

    private uint secretid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Secretid {
      get { if ((_hasBits0 & 8) != 0) { return secretid_; } else { return SecretidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        secretid_ = value;
      }
    }
    /// <summary>Gets whether the "secretid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecretid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "secretid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecretid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "encrypted_payload" field.</summary>
    public const int EncryptedPayloadFieldNumber = 5;
    private readonly static pb::ByteString EncryptedPayloadDefaultValue = pb::ByteString.Empty;

    private pb::ByteString encryptedPayload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString EncryptedPayload {
      get { return encryptedPayload_ ?? EncryptedPayloadDefaultValue; }
      set {
        encryptedPayload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "encrypted_payload" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEncryptedPayload {
      get { return encryptedPayload_ != null; }
    }
    /// <summary>Clears the value of the "encrypted_payload" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEncryptedPayload() {
      encryptedPayload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemoteClient_SteamToSteam_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemoteClient_SteamToSteam_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (SrcClientid != other.SrcClientid) return false;
      if (DstClientid != other.DstClientid) return false;
      if (Secretid != other.Secretid) return false;
      if (EncryptedPayload != other.EncryptedPayload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasSrcClientid) hash ^= SrcClientid.GetHashCode();
      if (HasDstClientid) hash ^= DstClientid.GetHashCode();
      if (HasSecretid) hash ^= Secretid.GetHashCode();
      if (HasEncryptedPayload) hash ^= EncryptedPayload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasSrcClientid) {
        output.WriteRawTag(17);
        output.WriteFixed64(SrcClientid);
      }
      if (HasDstClientid) {
        output.WriteRawTag(25);
        output.WriteFixed64(DstClientid);
      }
      if (HasSecretid) {
        output.WriteRawTag(32);
        output.WriteUInt32(Secretid);
      }
      if (HasEncryptedPayload) {
        output.WriteRawTag(42);
        output.WriteBytes(EncryptedPayload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasSrcClientid) {
        output.WriteRawTag(17);
        output.WriteFixed64(SrcClientid);
      }
      if (HasDstClientid) {
        output.WriteRawTag(25);
        output.WriteFixed64(DstClientid);
      }
      if (HasSecretid) {
        output.WriteRawTag(32);
        output.WriteUInt32(Secretid);
      }
      if (HasEncryptedPayload) {
        output.WriteRawTag(42);
        output.WriteBytes(EncryptedPayload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasSrcClientid) {
        size += 1 + 8;
      }
      if (HasDstClientid) {
        size += 1 + 8;
      }
      if (HasSecretid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Secretid);
      }
      if (HasEncryptedPayload) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncryptedPayload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemoteClient_SteamToSteam_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasSrcClientid) {
        SrcClientid = other.SrcClientid;
      }
      if (other.HasDstClientid) {
        DstClientid = other.DstClientid;
      }
      if (other.HasSecretid) {
        Secretid = other.Secretid;
      }
      if (other.HasEncryptedPayload) {
        EncryptedPayload = other.EncryptedPayload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 17: {
            SrcClientid = input.ReadFixed64();
            break;
          }
          case 25: {
            DstClientid = input.ReadFixed64();
            break;
          }
          case 32: {
            Secretid = input.ReadUInt32();
            break;
          }
          case 42: {
            EncryptedPayload = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 17: {
            SrcClientid = input.ReadFixed64();
            break;
          }
          case 25: {
            DstClientid = input.ReadFixed64();
            break;
          }
          case 32: {
            Secretid = input.ReadUInt32();
            break;
          }
          case 42: {
            EncryptedPayload = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemoteClient_Task : pb::IMessage<CRemoteClient_Task>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemoteClient_Task> _parser = new pb::MessageParser<CRemoteClient_Task>(() => new CRemoteClient_Task());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemoteClient_Task> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceRemoteclientsteamReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_Task() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_Task(CRemoteClient_Task other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      tasid_ = other.tasid_;
      url_ = other.url_;
      fileId_ = other.fileId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_Task Clone() {
      return new CRemoteClient_Task(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tasid" field.</summary>
    public const int TasidFieldNumber = 2;
    private readonly static ulong TasidDefaultValue = 0UL;

    private ulong tasid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Tasid {
      get { if ((_hasBits0 & 2) != 0) { return tasid_; } else { return TasidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tasid_ = value;
      }
    }
    /// <summary>Gets whether the "tasid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTasid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "tasid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTasid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 3;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "file_id" field.</summary>
    public const int FileIdFieldNumber = 4;
    private readonly static long FileIdDefaultValue = 0L;

    private long fileId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FileId {
      get { if ((_hasBits0 & 4) != 0) { return fileId_; } else { return FileIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fileId_ = value;
      }
    }
    /// <summary>Gets whether the "file_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFileId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "file_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFileId() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemoteClient_Task);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemoteClient_Task other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Tasid != other.Tasid) return false;
      if (Url != other.Url) return false;
      if (FileId != other.FileId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasTasid) hash ^= Tasid.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasFileId) hash ^= FileId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasTasid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Tasid);
      }
      if (HasUrl) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      if (HasFileId) {
        output.WriteRawTag(32);
        output.WriteInt64(FileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasTasid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Tasid);
      }
      if (HasUrl) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      if (HasFileId) {
        output.WriteRawTag(32);
        output.WriteInt64(FileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasTasid) {
        size += 1 + 8;
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasFileId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FileId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemoteClient_Task other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasTasid) {
        Tasid = other.Tasid;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasFileId) {
        FileId = other.FileId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 17: {
            Tasid = input.ReadFixed64();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
          case 32: {
            FileId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 17: {
            Tasid = input.ReadFixed64();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
          case 32: {
            FileId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemoteClient_TaskList_Notification : pb::IMessage<CRemoteClient_TaskList_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemoteClient_TaskList_Notification> _parser = new pb::MessageParser<CRemoteClient_TaskList_Notification>(() => new CRemoteClient_TaskList_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemoteClient_TaskList_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceRemoteclientsteamReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_TaskList_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_TaskList_Notification(CRemoteClient_TaskList_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      remoteClientId_ = other.remoteClientId_;
      tasklist_ = other.tasklist_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_TaskList_Notification Clone() {
      return new CRemoteClient_TaskList_Notification(this);
    }

    /// <summary>Field number for the "remote_client_id" field.</summary>
    public const int RemoteClientIdFieldNumber = 1;
    private readonly static ulong RemoteClientIdDefaultValue = 0UL;

    private ulong remoteClientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RemoteClientId {
      get { if ((_hasBits0 & 1) != 0) { return remoteClientId_; } else { return RemoteClientIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        remoteClientId_ = value;
      }
    }
    /// <summary>Gets whether the "remote_client_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRemoteClientId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "remote_client_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRemoteClientId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tasklist" field.</summary>
    public const int TasklistFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_Task> _repeated_tasklist_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_Task.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_Task> tasklist_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_Task>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CRemoteClient_Task> Tasklist {
      get { return tasklist_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemoteClient_TaskList_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemoteClient_TaskList_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RemoteClientId != other.RemoteClientId) return false;
      if(!tasklist_.Equals(other.tasklist_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRemoteClientId) hash ^= RemoteClientId.GetHashCode();
      hash ^= tasklist_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRemoteClientId) {
        output.WriteRawTag(9);
        output.WriteFixed64(RemoteClientId);
      }
      tasklist_.WriteTo(output, _repeated_tasklist_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRemoteClientId) {
        output.WriteRawTag(9);
        output.WriteFixed64(RemoteClientId);
      }
      tasklist_.WriteTo(ref output, _repeated_tasklist_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRemoteClientId) {
        size += 1 + 8;
      }
      size += tasklist_.CalculateSize(_repeated_tasklist_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemoteClient_TaskList_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasRemoteClientId) {
        RemoteClientId = other.RemoteClientId;
      }
      tasklist_.Add(other.tasklist_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            RemoteClientId = input.ReadFixed64();
            break;
          }
          case 18: {
            tasklist_.AddEntriesFrom(input, _repeated_tasklist_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            RemoteClientId = input.ReadFixed64();
            break;
          }
          case 18: {
            tasklist_.AddEntriesFrom(ref input, _repeated_tasklist_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemoteClient_UnregisterStatusUpdate_Notification : pb::IMessage<CRemoteClient_UnregisterStatusUpdate_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemoteClient_UnregisterStatusUpdate_Notification> _parser = new pb::MessageParser<CRemoteClient_UnregisterStatusUpdate_Notification>(() => new CRemoteClient_UnregisterStatusUpdate_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemoteClient_UnregisterStatusUpdate_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceRemoteclientsteamReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_UnregisterStatusUpdate_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_UnregisterStatusUpdate_Notification(CRemoteClient_UnregisterStatusUpdate_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      sessionId_ = other.sessionId_;
      steamid_ = other.steamid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemoteClient_UnregisterStatusUpdate_Notification Clone() {
      return new CRemoteClient_UnregisterStatusUpdate_Notification(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private readonly static ulong SessionIdDefaultValue = 0UL;

    private ulong sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SessionId {
      get { if ((_hasBits0 & 1) != 0) { return sessionId_; } else { return SessionIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sessionId_ = value;
      }
    }
    /// <summary>Gets whether the "session_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "session_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 2;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 2) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemoteClient_UnregisterStatusUpdate_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemoteClient_UnregisterStatusUpdate_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (Steamid != other.Steamid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSessionId) hash ^= SessionId.GetHashCode();
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSessionId) {
        output.WriteRawTag(9);
        output.WriteFixed64(SessionId);
      }
      if (HasSteamid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSessionId) {
        output.WriteRawTag(9);
        output.WriteFixed64(SessionId);
      }
      if (HasSteamid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSessionId) {
        size += 1 + 8;
      }
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemoteClient_UnregisterStatusUpdate_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasSessionId) {
        SessionId = other.SessionId;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SessionId = input.ReadFixed64();
            break;
          }
          case 17: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            SessionId = input.ReadFixed64();
            break;
          }
          case 17: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemotePlayTogether_Notification : pb::IMessage<CRemotePlayTogether_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemotePlayTogether_Notification> _parser = new pb::MessageParser<CRemotePlayTogether_Notification>(() => new CRemotePlayTogether_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemotePlayTogether_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceRemoteclientsteamReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification(CRemotePlayTogether_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      groupUpdated_ = other.groupUpdated_ != null ? other.groupUpdated_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification Clone() {
      return new CRemotePlayTogether_Notification(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "group_updated" field.</summary>
    public const int GroupUpdatedFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_GroupUpdated groupUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_GroupUpdated GroupUpdated {
      get { return groupUpdated_; }
      set {
        groupUpdated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemotePlayTogether_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemotePlayTogether_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (!object.Equals(GroupUpdated, other.GroupUpdated)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (groupUpdated_ != null) hash ^= GroupUpdated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (groupUpdated_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GroupUpdated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (groupUpdated_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GroupUpdated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (groupUpdated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupUpdated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemotePlayTogether_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.groupUpdated_ != null) {
        if (groupUpdated_ == null) {
          GroupUpdated = new global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_GroupUpdated();
        }
        GroupUpdated.MergeFrom(other.GroupUpdated);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            if (groupUpdated_ == null) {
              GroupUpdated = new global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_GroupUpdated();
            }
            input.ReadMessage(GroupUpdated);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            if (groupUpdated_ == null) {
              GroupUpdated = new global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_GroupUpdated();
            }
            input.ReadMessage(GroupUpdated);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemotePlayTogether_Notification_ControllerSlot : pb::IMessage<CRemotePlayTogether_Notification_ControllerSlot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemotePlayTogether_Notification_ControllerSlot> _parser = new pb::MessageParser<CRemotePlayTogether_Notification_ControllerSlot>(() => new CRemotePlayTogether_Notification_ControllerSlot());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemotePlayTogether_Notification_ControllerSlot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceRemoteclientsteamReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification_ControllerSlot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification_ControllerSlot(CRemotePlayTogether_Notification_ControllerSlot other) : this() {
      _hasBits0 = other._hasBits0;
      slotid_ = other.slotid_;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      controllerType_ = other.controllerType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification_ControllerSlot Clone() {
      return new CRemotePlayTogether_Notification_ControllerSlot(this);
    }

    /// <summary>Field number for the "slotid" field.</summary>
    public const int SlotidFieldNumber = 1;
    private readonly static uint SlotidDefaultValue = 0;

    private uint slotid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Slotid {
      get { if ((_hasBits0 & 1) != 0) { return slotid_; } else { return SlotidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        slotid_ = value;
      }
    }
    /// <summary>Gets whether the "slotid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSlotid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "slotid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSlotid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_Player player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_Player Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "controller_type" field.</summary>
    public const int ControllerTypeFieldNumber = 3;
    private readonly static int ControllerTypeDefaultValue = 0;

    private int controllerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ControllerType {
      get { if ((_hasBits0 & 2) != 0) { return controllerType_; } else { return ControllerTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        controllerType_ = value;
      }
    }
    /// <summary>Gets whether the "controller_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasControllerType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "controller_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControllerType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemotePlayTogether_Notification_ControllerSlot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemotePlayTogether_Notification_ControllerSlot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Slotid != other.Slotid) return false;
      if (!object.Equals(Player, other.Player)) return false;
      if (ControllerType != other.ControllerType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSlotid) hash ^= Slotid.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      if (HasControllerType) hash ^= ControllerType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSlotid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Slotid);
      }
      if (player_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Player);
      }
      if (HasControllerType) {
        output.WriteRawTag(24);
        output.WriteInt32(ControllerType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSlotid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Slotid);
      }
      if (player_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Player);
      }
      if (HasControllerType) {
        output.WriteRawTag(24);
        output.WriteInt32(ControllerType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSlotid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Slotid);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (HasControllerType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ControllerType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemotePlayTogether_Notification_ControllerSlot other) {
      if (other == null) {
        return;
      }
      if (other.HasSlotid) {
        Slotid = other.Slotid;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_Player();
        }
        Player.MergeFrom(other.Player);
      }
      if (other.HasControllerType) {
        ControllerType = other.ControllerType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Slotid = input.ReadUInt32();
            break;
          }
          case 18: {
            if (player_ == null) {
              Player = new global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_Player();
            }
            input.ReadMessage(Player);
            break;
          }
          case 24: {
            ControllerType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Slotid = input.ReadUInt32();
            break;
          }
          case 18: {
            if (player_ == null) {
              Player = new global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_Player();
            }
            input.ReadMessage(Player);
            break;
          }
          case 24: {
            ControllerType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemotePlayTogether_Notification_ControllerSlot_obsolete : pb::IMessage<CRemotePlayTogether_Notification_ControllerSlot_obsolete>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemotePlayTogether_Notification_ControllerSlot_obsolete> _parser = new pb::MessageParser<CRemotePlayTogether_Notification_ControllerSlot_obsolete>(() => new CRemotePlayTogether_Notification_ControllerSlot_obsolete());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemotePlayTogether_Notification_ControllerSlot_obsolete> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceRemoteclientsteamReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification_ControllerSlot_obsolete() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification_ControllerSlot_obsolete(CRemotePlayTogether_Notification_ControllerSlot_obsolete other) : this() {
      _hasBits0 = other._hasBits0;
      slotid_ = other.slotid_;
      steamid_ = other.steamid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification_ControllerSlot_obsolete Clone() {
      return new CRemotePlayTogether_Notification_ControllerSlot_obsolete(this);
    }

    /// <summary>Field number for the "slotid" field.</summary>
    public const int SlotidFieldNumber = 1;
    private readonly static uint SlotidDefaultValue = 0;

    private uint slotid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Slotid {
      get { if ((_hasBits0 & 1) != 0) { return slotid_; } else { return SlotidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        slotid_ = value;
      }
    }
    /// <summary>Gets whether the "slotid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSlotid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "slotid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSlotid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 2;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 2) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemotePlayTogether_Notification_ControllerSlot_obsolete);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemotePlayTogether_Notification_ControllerSlot_obsolete other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Slotid != other.Slotid) return false;
      if (Steamid != other.Steamid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSlotid) hash ^= Slotid.GetHashCode();
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSlotid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Slotid);
      }
      if (HasSteamid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSlotid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Slotid);
      }
      if (HasSteamid) {
        output.WriteRawTag(17);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSlotid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Slotid);
      }
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemotePlayTogether_Notification_ControllerSlot_obsolete other) {
      if (other == null) {
        return;
      }
      if (other.HasSlotid) {
        Slotid = other.Slotid;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Slotid = input.ReadUInt32();
            break;
          }
          case 17: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Slotid = input.ReadUInt32();
            break;
          }
          case 17: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemotePlayTogether_Notification_GroupUpdated : pb::IMessage<CRemotePlayTogether_Notification_GroupUpdated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemotePlayTogether_Notification_GroupUpdated> _parser = new pb::MessageParser<CRemotePlayTogether_Notification_GroupUpdated>(() => new CRemotePlayTogether_Notification_GroupUpdated());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemotePlayTogether_Notification_GroupUpdated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceRemoteclientsteamReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification_GroupUpdated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification_GroupUpdated(CRemotePlayTogether_Notification_GroupUpdated other) : this() {
      _hasBits0 = other._hasBits0;
      hostSteamid_ = other.hostSteamid_;
      hostClientid_ = other.hostClientid_;
      playersObsolete_ = other.playersObsolete_.Clone();
      hostGameid_ = other.hostGameid_;
      controllerSlotsObsolete_ = other.controllerSlotsObsolete_.Clone();
      hasNewPlayers_ = other.hasNewPlayers_;
      playerSlots_ = other.playerSlots_.Clone();
      controllerSlots_ = other.controllerSlots_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification_GroupUpdated Clone() {
      return new CRemotePlayTogether_Notification_GroupUpdated(this);
    }

    /// <summary>Field number for the "host_steamid" field.</summary>
    public const int HostSteamidFieldNumber = 1;
    private readonly static ulong HostSteamidDefaultValue = 0UL;

    private ulong hostSteamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong HostSteamid {
      get { if ((_hasBits0 & 1) != 0) { return hostSteamid_; } else { return HostSteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        hostSteamid_ = value;
      }
    }
    /// <summary>Gets whether the "host_steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "host_steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "host_clientid" field.</summary>
    public const int HostClientidFieldNumber = 2;
    private readonly static ulong HostClientidDefaultValue = 0UL;

    private ulong hostClientid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong HostClientid {
      get { if ((_hasBits0 & 2) != 0) { return hostClientid_; } else { return HostClientidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        hostClientid_ = value;
      }
    }
    /// <summary>Gets whether the "host_clientid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostClientid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "host_clientid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostClientid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "players_obsolete" field.</summary>
    public const int PlayersObsoleteFieldNumber = 3;
    private static readonly pb::FieldCodec<ulong> _repeated_playersObsolete_codec
        = pb::FieldCodec.ForFixed64(25);
    private readonly pbc::RepeatedField<ulong> playersObsolete_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> PlayersObsolete {
      get { return playersObsolete_; }
    }

    /// <summary>Field number for the "host_gameid" field.</summary>
    public const int HostGameidFieldNumber = 4;
    private readonly static ulong HostGameidDefaultValue = 0UL;

    private ulong hostGameid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong HostGameid {
      get { if ((_hasBits0 & 4) != 0) { return hostGameid_; } else { return HostGameidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        hostGameid_ = value;
      }
    }
    /// <summary>Gets whether the "host_gameid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHostGameid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "host_gameid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHostGameid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "controller_slots_obsolete" field.</summary>
    public const int ControllerSlotsObsoleteFieldNumber = 5;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot_obsolete> _repeated_controllerSlotsObsolete_codec
        = pb::FieldCodec.ForMessage(42, global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot_obsolete.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot_obsolete> controllerSlotsObsolete_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot_obsolete>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot_obsolete> ControllerSlotsObsolete {
      get { return controllerSlotsObsolete_; }
    }

    /// <summary>Field number for the "has_new_players" field.</summary>
    public const int HasNewPlayersFieldNumber = 6;
    private readonly static bool HasNewPlayersDefaultValue = false;

    private bool hasNewPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewPlayers {
      get { if ((_hasBits0 & 8) != 0) { return hasNewPlayers_; } else { return HasNewPlayersDefaultValue; } }
      set {
        _hasBits0 |= 8;
        hasNewPlayers_ = value;
      }
    }
    /// <summary>Gets whether the "has_new_players" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHasNewPlayers {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "has_new_players" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHasNewPlayers() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "player_slots" field.</summary>
    public const int PlayerSlotsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_Player> _repeated_playerSlots_codec
        = pb::FieldCodec.ForMessage(58, global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_Player.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_Player> playerSlots_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_Player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_Player> PlayerSlots {
      get { return playerSlots_; }
    }

    /// <summary>Field number for the "controller_slots" field.</summary>
    public const int ControllerSlotsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot> _repeated_controllerSlots_codec
        = pb::FieldCodec.ForMessage(66, global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot> controllerSlots_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.WebUI.CRemotePlayTogether_Notification_ControllerSlot> ControllerSlots {
      get { return controllerSlots_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemotePlayTogether_Notification_GroupUpdated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemotePlayTogether_Notification_GroupUpdated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HostSteamid != other.HostSteamid) return false;
      if (HostClientid != other.HostClientid) return false;
      if(!playersObsolete_.Equals(other.playersObsolete_)) return false;
      if (HostGameid != other.HostGameid) return false;
      if(!controllerSlotsObsolete_.Equals(other.controllerSlotsObsolete_)) return false;
      if (HasNewPlayers != other.HasNewPlayers) return false;
      if(!playerSlots_.Equals(other.playerSlots_)) return false;
      if(!controllerSlots_.Equals(other.controllerSlots_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHostSteamid) hash ^= HostSteamid.GetHashCode();
      if (HasHostClientid) hash ^= HostClientid.GetHashCode();
      hash ^= playersObsolete_.GetHashCode();
      if (HasHostGameid) hash ^= HostGameid.GetHashCode();
      hash ^= controllerSlotsObsolete_.GetHashCode();
      if (HasHasNewPlayers) hash ^= HasNewPlayers.GetHashCode();
      hash ^= playerSlots_.GetHashCode();
      hash ^= controllerSlots_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHostSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(HostSteamid);
      }
      if (HasHostClientid) {
        output.WriteRawTag(17);
        output.WriteFixed64(HostClientid);
      }
      playersObsolete_.WriteTo(output, _repeated_playersObsolete_codec);
      if (HasHostGameid) {
        output.WriteRawTag(33);
        output.WriteFixed64(HostGameid);
      }
      controllerSlotsObsolete_.WriteTo(output, _repeated_controllerSlotsObsolete_codec);
      if (HasHasNewPlayers) {
        output.WriteRawTag(48);
        output.WriteBool(HasNewPlayers);
      }
      playerSlots_.WriteTo(output, _repeated_playerSlots_codec);
      controllerSlots_.WriteTo(output, _repeated_controllerSlots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHostSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(HostSteamid);
      }
      if (HasHostClientid) {
        output.WriteRawTag(17);
        output.WriteFixed64(HostClientid);
      }
      playersObsolete_.WriteTo(ref output, _repeated_playersObsolete_codec);
      if (HasHostGameid) {
        output.WriteRawTag(33);
        output.WriteFixed64(HostGameid);
      }
      controllerSlotsObsolete_.WriteTo(ref output, _repeated_controllerSlotsObsolete_codec);
      if (HasHasNewPlayers) {
        output.WriteRawTag(48);
        output.WriteBool(HasNewPlayers);
      }
      playerSlots_.WriteTo(ref output, _repeated_playerSlots_codec);
      controllerSlots_.WriteTo(ref output, _repeated_controllerSlots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHostSteamid) {
        size += 1 + 8;
      }
      if (HasHostClientid) {
        size += 1 + 8;
      }
      size += playersObsolete_.CalculateSize(_repeated_playersObsolete_codec);
      if (HasHostGameid) {
        size += 1 + 8;
      }
      size += controllerSlotsObsolete_.CalculateSize(_repeated_controllerSlotsObsolete_codec);
      if (HasHasNewPlayers) {
        size += 1 + 1;
      }
      size += playerSlots_.CalculateSize(_repeated_playerSlots_codec);
      size += controllerSlots_.CalculateSize(_repeated_controllerSlots_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemotePlayTogether_Notification_GroupUpdated other) {
      if (other == null) {
        return;
      }
      if (other.HasHostSteamid) {
        HostSteamid = other.HostSteamid;
      }
      if (other.HasHostClientid) {
        HostClientid = other.HostClientid;
      }
      playersObsolete_.Add(other.playersObsolete_);
      if (other.HasHostGameid) {
        HostGameid = other.HostGameid;
      }
      controllerSlotsObsolete_.Add(other.controllerSlotsObsolete_);
      if (other.HasHasNewPlayers) {
        HasNewPlayers = other.HasNewPlayers;
      }
      playerSlots_.Add(other.playerSlots_);
      controllerSlots_.Add(other.controllerSlots_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            HostSteamid = input.ReadFixed64();
            break;
          }
          case 17: {
            HostClientid = input.ReadFixed64();
            break;
          }
          case 26:
          case 25: {
            playersObsolete_.AddEntriesFrom(input, _repeated_playersObsolete_codec);
            break;
          }
          case 33: {
            HostGameid = input.ReadFixed64();
            break;
          }
          case 42: {
            controllerSlotsObsolete_.AddEntriesFrom(input, _repeated_controllerSlotsObsolete_codec);
            break;
          }
          case 48: {
            HasNewPlayers = input.ReadBool();
            break;
          }
          case 58: {
            playerSlots_.AddEntriesFrom(input, _repeated_playerSlots_codec);
            break;
          }
          case 66: {
            controllerSlots_.AddEntriesFrom(input, _repeated_controllerSlots_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            HostSteamid = input.ReadFixed64();
            break;
          }
          case 17: {
            HostClientid = input.ReadFixed64();
            break;
          }
          case 26:
          case 25: {
            playersObsolete_.AddEntriesFrom(ref input, _repeated_playersObsolete_codec);
            break;
          }
          case 33: {
            HostGameid = input.ReadFixed64();
            break;
          }
          case 42: {
            controllerSlotsObsolete_.AddEntriesFrom(ref input, _repeated_controllerSlotsObsolete_codec);
            break;
          }
          case 48: {
            HasNewPlayers = input.ReadBool();
            break;
          }
          case 58: {
            playerSlots_.AddEntriesFrom(ref input, _repeated_playerSlots_codec);
            break;
          }
          case 66: {
            controllerSlots_.AddEntriesFrom(ref input, _repeated_controllerSlots_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CRemotePlayTogether_Notification_Player : pb::IMessage<CRemotePlayTogether_Notification_Player>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CRemotePlayTogether_Notification_Player> _parser = new pb::MessageParser<CRemotePlayTogether_Notification_Player>(() => new CRemotePlayTogether_Notification_Player());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CRemotePlayTogether_Notification_Player> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.WebUI.ServiceRemoteclientsteamReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification_Player() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification_Player(CRemotePlayTogether_Notification_Player other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      guestid_ = other.guestid_;
      avatarHash_ = other.avatarHash_;
      keyboardEnabled_ = other.keyboardEnabled_;
      mouseEnabled_ = other.mouseEnabled_;
      controllerEnabled_ = other.controllerEnabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CRemotePlayTogether_Notification_Player Clone() {
      return new CRemotePlayTogether_Notification_Player(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "guestid" field.</summary>
    public const int GuestidFieldNumber = 2;
    private readonly static uint GuestidDefaultValue = 0;

    private uint guestid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guestid {
      get { if ((_hasBits0 & 2) != 0) { return guestid_; } else { return GuestidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        guestid_ = value;
      }
    }
    /// <summary>Gets whether the "guestid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGuestid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "guestid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGuestid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "avatar_hash" field.</summary>
    public const int AvatarHashFieldNumber = 3;
    private readonly static pb::ByteString AvatarHashDefaultValue = pb::ByteString.Empty;

    private pb::ByteString avatarHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AvatarHash {
      get { return avatarHash_ ?? AvatarHashDefaultValue; }
      set {
        avatarHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "avatar_hash" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvatarHash {
      get { return avatarHash_ != null; }
    }
    /// <summary>Clears the value of the "avatar_hash" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvatarHash() {
      avatarHash_ = null;
    }

    /// <summary>Field number for the "keyboard_enabled" field.</summary>
    public const int KeyboardEnabledFieldNumber = 4;
    private readonly static bool KeyboardEnabledDefaultValue = false;

    private bool keyboardEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool KeyboardEnabled {
      get { if ((_hasBits0 & 4) != 0) { return keyboardEnabled_; } else { return KeyboardEnabledDefaultValue; } }
      set {
        _hasBits0 |= 4;
        keyboardEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "keyboard_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKeyboardEnabled {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "keyboard_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKeyboardEnabled() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "mouse_enabled" field.</summary>
    public const int MouseEnabledFieldNumber = 5;
    private readonly static bool MouseEnabledDefaultValue = false;

    private bool mouseEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MouseEnabled {
      get { if ((_hasBits0 & 8) != 0) { return mouseEnabled_; } else { return MouseEnabledDefaultValue; } }
      set {
        _hasBits0 |= 8;
        mouseEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "mouse_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMouseEnabled {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "mouse_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMouseEnabled() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "controller_enabled" field.</summary>
    public const int ControllerEnabledFieldNumber = 6;
    private readonly static bool ControllerEnabledDefaultValue = false;

    private bool controllerEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ControllerEnabled {
      get { if ((_hasBits0 & 16) != 0) { return controllerEnabled_; } else { return ControllerEnabledDefaultValue; } }
      set {
        _hasBits0 |= 16;
        controllerEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "controller_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasControllerEnabled {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "controller_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControllerEnabled() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CRemotePlayTogether_Notification_Player);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CRemotePlayTogether_Notification_Player other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Guestid != other.Guestid) return false;
      if (AvatarHash != other.AvatarHash) return false;
      if (KeyboardEnabled != other.KeyboardEnabled) return false;
      if (MouseEnabled != other.MouseEnabled) return false;
      if (ControllerEnabled != other.ControllerEnabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasGuestid) hash ^= Guestid.GetHashCode();
      if (HasAvatarHash) hash ^= AvatarHash.GetHashCode();
      if (HasKeyboardEnabled) hash ^= KeyboardEnabled.GetHashCode();
      if (HasMouseEnabled) hash ^= MouseEnabled.GetHashCode();
      if (HasControllerEnabled) hash ^= ControllerEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasGuestid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Guestid);
      }
      if (HasAvatarHash) {
        output.WriteRawTag(26);
        output.WriteBytes(AvatarHash);
      }
      if (HasKeyboardEnabled) {
        output.WriteRawTag(32);
        output.WriteBool(KeyboardEnabled);
      }
      if (HasMouseEnabled) {
        output.WriteRawTag(40);
        output.WriteBool(MouseEnabled);
      }
      if (HasControllerEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(ControllerEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasGuestid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Guestid);
      }
      if (HasAvatarHash) {
        output.WriteRawTag(26);
        output.WriteBytes(AvatarHash);
      }
      if (HasKeyboardEnabled) {
        output.WriteRawTag(32);
        output.WriteBool(KeyboardEnabled);
      }
      if (HasMouseEnabled) {
        output.WriteRawTag(40);
        output.WriteBool(MouseEnabled);
      }
      if (HasControllerEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(ControllerEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasGuestid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guestid);
      }
      if (HasAvatarHash) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AvatarHash);
      }
      if (HasKeyboardEnabled) {
        size += 1 + 1;
      }
      if (HasMouseEnabled) {
        size += 1 + 1;
      }
      if (HasControllerEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CRemotePlayTogether_Notification_Player other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasGuestid) {
        Guestid = other.Guestid;
      }
      if (other.HasAvatarHash) {
        AvatarHash = other.AvatarHash;
      }
      if (other.HasKeyboardEnabled) {
        KeyboardEnabled = other.KeyboardEnabled;
      }
      if (other.HasMouseEnabled) {
        MouseEnabled = other.MouseEnabled;
      }
      if (other.HasControllerEnabled) {
        ControllerEnabled = other.ControllerEnabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Guestid = input.ReadUInt32();
            break;
          }
          case 26: {
            AvatarHash = input.ReadBytes();
            break;
          }
          case 32: {
            KeyboardEnabled = input.ReadBool();
            break;
          }
          case 40: {
            MouseEnabled = input.ReadBool();
            break;
          }
          case 48: {
            ControllerEnabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Guestid = input.ReadUInt32();
            break;
          }
          case 26: {
            AvatarHash = input.ReadBytes();
            break;
          }
          case 32: {
            KeyboardEnabled = input.ReadBool();
            break;
          }
          case 40: {
            MouseEnabled = input.ReadBool();
            break;
          }
          case 48: {
            ControllerEnabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_childprocessquery.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf {

  /// <summary>Holder for reflection information generated from steammessages_childprocessquery.proto</summary>
  public static partial class SteammessagesChildprocessqueryReflection {

    #region Descriptor
    /// <summary>File descriptor for steammessages_childprocessquery.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SteammessagesChildprocessqueryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVzdGVhbW1lc3NhZ2VzX2NoaWxkcHJvY2Vzc3F1ZXJ5LnByb3RvGiBnb29n",
            "bGUvcHJvdG9idWYvZGVzY3JpcHRvci5wcm90bxoLZW51bXMucHJvdG8iZgod",
            "Q01zZ0NoaWxkUHJvY2Vzc1F1ZXJ5UmVzcG9uc2USOQoMZ3B1X3RvcG9sb2d5",
            "GAEgASgLMiEuQ01zZ0NoaWxkUHJvY2Vzc1F1ZXJ5R3B1VG9wb2xvZ3lIAEIK",
            "CghyZXNwb25zZSLEAgogQ01zZ0NoaWxkUHJvY2Vzc1F1ZXJ5R3B1VG9wb2xv",
            "Z3kSNwoEZ3B1cxgBIAMoCzIpLkNNc2dDaGlsZFByb2Nlc3NRdWVyeUdwdVRv",
            "cG9sb2d5LkdwdUluZm8SFgoOZGVmYXVsdF9ncHVfaWQYAiABKA0azgEKB0dw",
            "dUluZm8SCgoCaWQYASABKA0SDAoEbmFtZRgCIAEoCRIXCg92cmFtX3NpemVf",
            "Ynl0ZXMYAyABKAQSNgoJZHJpdmVyX2lkGAQgASgOMg0uRUdwdURyaXZlcklk",
            "OhRFR3B1RHJpdmVySWRfSW52YWxpZBIcChRkcml2ZXJfdmVyc2lvbl9tYWpv",
            "chgFIAEoBRIcChRkcml2ZXJfdmVyc2lvbl9taW5vchgGIAEoBRIcChRkcml2",
            "ZXJfdmVyc2lvbl9wYXRjaBgHIAEoBUIfSAGAAQCqAhdPcGVuU3RlYW13b3Jr",
            "cy5Qcm90b2J1Zg=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::OpenSteamworks.Protobuf.EnumsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgChildProcessQueryResponse), global::OpenSteamworks.Protobuf.CMsgChildProcessQueryResponse.Parser, new[]{ "GpuTopology" }, new[]{ "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology), global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology.Parser, new[]{ "Gpus", "DefaultGpuId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology.Types.GpuInfo), global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology.Types.GpuInfo.Parser, new[]{ "Id", "Name", "VramSizeBytes", "DriverId", "DriverVersionMajor", "DriverVersionMinor", "DriverVersionPatch" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgChildProcessQueryResponse : pb::IMessage<CMsgChildProcessQueryResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgChildProcessQueryResponse> _parser = new pb::MessageParser<CMsgChildProcessQueryResponse>(() => new CMsgChildProcessQueryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgChildProcessQueryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesChildprocessqueryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgChildProcessQueryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgChildProcessQueryResponse(CMsgChildProcessQueryResponse other) : this() {
      switch (other.ResponseCase) {
        case ResponseOneofCase.GpuTopology:
          GpuTopology = other.GpuTopology.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgChildProcessQueryResponse Clone() {
      return new CMsgChildProcessQueryResponse(this);
    }

    /// <summary>Field number for the "gpu_topology" field.</summary>
    public const int GpuTopologyFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology GpuTopology {
      get { return responseCase_ == ResponseOneofCase.GpuTopology ? (global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.GpuTopology;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      GpuTopology = 1,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgChildProcessQueryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgChildProcessQueryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GpuTopology, other.GpuTopology)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.GpuTopology) hash ^= GpuTopology.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (responseCase_ == ResponseOneofCase.GpuTopology) {
        output.WriteRawTag(10);
        output.WriteMessage(GpuTopology);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (responseCase_ == ResponseOneofCase.GpuTopology) {
        output.WriteRawTag(10);
        output.WriteMessage(GpuTopology);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.GpuTopology) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpuTopology);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgChildProcessQueryResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.GpuTopology:
          if (GpuTopology == null) {
            GpuTopology = new global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology();
          }
          GpuTopology.MergeFrom(other.GpuTopology);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology subBuilder = new global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology();
            if (responseCase_ == ResponseOneofCase.GpuTopology) {
              subBuilder.MergeFrom(GpuTopology);
            }
            input.ReadMessage(subBuilder);
            GpuTopology = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology subBuilder = new global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology();
            if (responseCase_ == ResponseOneofCase.GpuTopology) {
              subBuilder.MergeFrom(GpuTopology);
            }
            input.ReadMessage(subBuilder);
            GpuTopology = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CMsgChildProcessQueryGpuTopology : pb::IMessage<CMsgChildProcessQueryGpuTopology>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgChildProcessQueryGpuTopology> _parser = new pb::MessageParser<CMsgChildProcessQueryGpuTopology>(() => new CMsgChildProcessQueryGpuTopology());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CMsgChildProcessQueryGpuTopology> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesChildprocessqueryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgChildProcessQueryGpuTopology() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgChildProcessQueryGpuTopology(CMsgChildProcessQueryGpuTopology other) : this() {
      _hasBits0 = other._hasBits0;
      gpus_ = other.gpus_.Clone();
      defaultGpuId_ = other.defaultGpuId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CMsgChildProcessQueryGpuTopology Clone() {
      return new CMsgChildProcessQueryGpuTopology(this);
    }

    /// <summary>Field number for the "gpus" field.</summary>
    public const int GpusFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology.Types.GpuInfo> _repeated_gpus_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology.Types.GpuInfo.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology.Types.GpuInfo> gpus_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology.Types.GpuInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology.Types.GpuInfo> Gpus {
      get { return gpus_; }
    }

    /// <summary>Field number for the "default_gpu_id" field.</summary>
    public const int DefaultGpuIdFieldNumber = 2;
    private readonly static uint DefaultGpuIdDefaultValue = 0;

    private uint defaultGpuId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DefaultGpuId {
      get { if ((_hasBits0 & 1) != 0) { return defaultGpuId_; } else { return DefaultGpuIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        defaultGpuId_ = value;
      }
    }
    /// <summary>Gets whether the "default_gpu_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefaultGpuId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "default_gpu_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefaultGpuId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CMsgChildProcessQueryGpuTopology);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CMsgChildProcessQueryGpuTopology other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gpus_.Equals(other.gpus_)) return false;
      if (DefaultGpuId != other.DefaultGpuId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gpus_.GetHashCode();
      if (HasDefaultGpuId) hash ^= DefaultGpuId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gpus_.WriteTo(output, _repeated_gpus_codec);
      if (HasDefaultGpuId) {
        output.WriteRawTag(16);
        output.WriteUInt32(DefaultGpuId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gpus_.WriteTo(ref output, _repeated_gpus_codec);
      if (HasDefaultGpuId) {
        output.WriteRawTag(16);
        output.WriteUInt32(DefaultGpuId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gpus_.CalculateSize(_repeated_gpus_codec);
      if (HasDefaultGpuId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DefaultGpuId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CMsgChildProcessQueryGpuTopology other) {
      if (other == null) {
        return;
      }
      gpus_.Add(other.gpus_);
      if (other.HasDefaultGpuId) {
        DefaultGpuId = other.DefaultGpuId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gpus_.AddEntriesFrom(input, _repeated_gpus_codec);
            break;
          }
          case 16: {
            DefaultGpuId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gpus_.AddEntriesFrom(ref input, _repeated_gpus_codec);
            break;
          }
          case 16: {
            DefaultGpuId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgChildProcessQueryGpuTopology message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class GpuInfo : pb::IMessage<GpuInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GpuInfo> _parser = new pb::MessageParser<GpuInfo>(() => new GpuInfo());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GpuInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CMsgChildProcessQueryGpuTopology.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GpuInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GpuInfo(GpuInfo other) : this() {
          _hasBits0 = other._hasBits0;
          id_ = other.id_;
          name_ = other.name_;
          vramSizeBytes_ = other.vramSizeBytes_;
          driverId_ = other.driverId_;
          driverVersionMajor_ = other.driverVersionMajor_;
          driverVersionMinor_ = other.driverVersionMinor_;
          driverVersionPatch_ = other.driverVersionPatch_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GpuInfo Clone() {
          return new GpuInfo(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private readonly static uint IdDefaultValue = 0;

        private uint id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Id {
          get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            id_ = value;
          }
        }
        /// <summary>Gets whether the "id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private readonly static string NameDefaultValue = "";

        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "vram_size_bytes" field.</summary>
        public const int VramSizeBytesFieldNumber = 3;
        private readonly static ulong VramSizeBytesDefaultValue = 0UL;

        private ulong vramSizeBytes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong VramSizeBytes {
          get { if ((_hasBits0 & 2) != 0) { return vramSizeBytes_; } else { return VramSizeBytesDefaultValue; } }
          set {
            _hasBits0 |= 2;
            vramSizeBytes_ = value;
          }
        }
        /// <summary>Gets whether the "vram_size_bytes" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasVramSizeBytes {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "vram_size_bytes" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearVramSizeBytes() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "driver_id" field.</summary>
        public const int DriverIdFieldNumber = 4;
        private readonly static global::OpenSteamworks.Protobuf.EGpuDriverId DriverIdDefaultValue = global::OpenSteamworks.Protobuf.EGpuDriverId.Invalid;

        private global::OpenSteamworks.Protobuf.EGpuDriverId driverId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::OpenSteamworks.Protobuf.EGpuDriverId DriverId {
          get { if ((_hasBits0 & 4) != 0) { return driverId_; } else { return DriverIdDefaultValue; } }
          set {
            _hasBits0 |= 4;
            driverId_ = value;
          }
        }
        /// <summary>Gets whether the "driver_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDriverId {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "driver_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDriverId() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "driver_version_major" field.</summary>
        public const int DriverVersionMajorFieldNumber = 5;
        private readonly static int DriverVersionMajorDefaultValue = 0;

        private int driverVersionMajor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int DriverVersionMajor {
          get { if ((_hasBits0 & 8) != 0) { return driverVersionMajor_; } else { return DriverVersionMajorDefaultValue; } }
          set {
            _hasBits0 |= 8;
            driverVersionMajor_ = value;
          }
        }
        /// <summary>Gets whether the "driver_version_major" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDriverVersionMajor {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "driver_version_major" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDriverVersionMajor() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "driver_version_minor" field.</summary>
        public const int DriverVersionMinorFieldNumber = 6;
        private readonly static int DriverVersionMinorDefaultValue = 0;

        private int driverVersionMinor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int DriverVersionMinor {
          get { if ((_hasBits0 & 16) != 0) { return driverVersionMinor_; } else { return DriverVersionMinorDefaultValue; } }
          set {
            _hasBits0 |= 16;
            driverVersionMinor_ = value;
          }
        }
        /// <summary>Gets whether the "driver_version_minor" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDriverVersionMinor {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "driver_version_minor" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDriverVersionMinor() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "driver_version_patch" field.</summary>
        public const int DriverVersionPatchFieldNumber = 7;
        private readonly static int DriverVersionPatchDefaultValue = 0;

        private int driverVersionPatch_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int DriverVersionPatch {
          get { if ((_hasBits0 & 32) != 0) { return driverVersionPatch_; } else { return DriverVersionPatchDefaultValue; } }
          set {
            _hasBits0 |= 32;
            driverVersionPatch_ = value;
          }
        }
        /// <summary>Gets whether the "driver_version_patch" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDriverVersionPatch {
          get { return (_hasBits0 & 32) != 0; }
        }
        /// <summary>Clears the value of the "driver_version_patch" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDriverVersionPatch() {
          _hasBits0 &= ~32;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as GpuInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GpuInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (VramSizeBytes != other.VramSizeBytes) return false;
          if (DriverId != other.DriverId) return false;
          if (DriverVersionMajor != other.DriverVersionMajor) return false;
          if (DriverVersionMinor != other.DriverVersionMinor) return false;
          if (DriverVersionPatch != other.DriverVersionPatch) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasId) hash ^= Id.GetHashCode();
          if (HasName) hash ^= Name.GetHashCode();
          if (HasVramSizeBytes) hash ^= VramSizeBytes.GetHashCode();
          if (HasDriverId) hash ^= DriverId.GetHashCode();
          if (HasDriverVersionMajor) hash ^= DriverVersionMajor.GetHashCode();
          if (HasDriverVersionMinor) hash ^= DriverVersionMinor.GetHashCode();
          if (HasDriverVersionPatch) hash ^= DriverVersionPatch.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasId) {
            output.WriteRawTag(8);
            output.WriteUInt32(Id);
          }
          if (HasName) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (HasVramSizeBytes) {
            output.WriteRawTag(24);
            output.WriteUInt64(VramSizeBytes);
          }
          if (HasDriverId) {
            output.WriteRawTag(32);
            output.WriteEnum((int) DriverId);
          }
          if (HasDriverVersionMajor) {
            output.WriteRawTag(40);
            output.WriteInt32(DriverVersionMajor);
          }
          if (HasDriverVersionMinor) {
            output.WriteRawTag(48);
            output.WriteInt32(DriverVersionMinor);
          }
          if (HasDriverVersionPatch) {
            output.WriteRawTag(56);
            output.WriteInt32(DriverVersionPatch);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasId) {
            output.WriteRawTag(8);
            output.WriteUInt32(Id);
          }
          if (HasName) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (HasVramSizeBytes) {
            output.WriteRawTag(24);
            output.WriteUInt64(VramSizeBytes);
          }
          if (HasDriverId) {
            output.WriteRawTag(32);
            output.WriteEnum((int) DriverId);
          }
          if (HasDriverVersionMajor) {
            output.WriteRawTag(40);
            output.WriteInt32(DriverVersionMajor);
          }
          if (HasDriverVersionMinor) {
            output.WriteRawTag(48);
            output.WriteInt32(DriverVersionMinor);
          }
          if (HasDriverVersionPatch) {
            output.WriteRawTag(56);
            output.WriteInt32(DriverVersionPatch);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
          }
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasVramSizeBytes) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VramSizeBytes);
          }
          if (HasDriverId) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DriverId);
          }
          if (HasDriverVersionMajor) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DriverVersionMajor);
          }
          if (HasDriverVersionMinor) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DriverVersionMinor);
          }
          if (HasDriverVersionPatch) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DriverVersionPatch);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GpuInfo other) {
          if (other == null) {
            return;
          }
          if (other.HasId) {
            Id = other.Id;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasVramSizeBytes) {
            VramSizeBytes = other.VramSizeBytes;
          }
          if (other.HasDriverId) {
            DriverId = other.DriverId;
          }
          if (other.HasDriverVersionMajor) {
            DriverVersionMajor = other.DriverVersionMajor;
          }
          if (other.HasDriverVersionMinor) {
            DriverVersionMinor = other.DriverVersionMinor;
          }
          if (other.HasDriverVersionPatch) {
            DriverVersionPatch = other.DriverVersionPatch;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadUInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                VramSizeBytes = input.ReadUInt64();
                break;
              }
              case 32: {
                DriverId = (global::OpenSteamworks.Protobuf.EGpuDriverId) input.ReadEnum();
                break;
              }
              case 40: {
                DriverVersionMajor = input.ReadInt32();
                break;
              }
              case 48: {
                DriverVersionMinor = input.ReadInt32();
                break;
              }
              case 56: {
                DriverVersionPatch = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Id = input.ReadUInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                VramSizeBytes = input.ReadUInt64();
                break;
              }
              case 32: {
                DriverId = (global::OpenSteamworks.Protobuf.EGpuDriverId) input.ReadEnum();
                break;
              }
              case 40: {
                DriverVersionMajor = input.ReadInt32();
                break;
              }
              case 48: {
                DriverVersionMinor = input.ReadInt32();
                break;
              }
              case 56: {
                DriverVersionPatch = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code

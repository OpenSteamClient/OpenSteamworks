// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_clientmetrics.steamclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf {

  /// <summary>Holder for reflection information generated from steammessages_clientmetrics.steamclient.proto</summary>
  public static partial class SteammessagesClientmetricsSteamclientReflection {

    #region Descriptor
    /// <summary>File descriptor for steammessages_clientmetrics.steamclient.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SteammessagesClientmetricsSteamclientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1zdGVhbW1lc3NhZ2VzX2NsaWVudG1ldHJpY3Muc3RlYW1jbGllbnQucHJv",
            "dG8aIGdvb2dsZS9wcm90b2J1Zi9kZXNjcmlwdG9yLnByb3RvGhhzdGVhbW1l",
            "c3NhZ2VzX2Jhc2UucHJvdG8aLHN0ZWFtbWVzc2FnZXNfdW5pZmllZF9iYXNl",
            "LnN0ZWFtY2xpZW50LnByb3RvGhNjbGllbnRtZXRyaWNzLnByb3RvGgtlbnVt",
            "cy5wcm90byJcCiNDQ2xpZW50TWV0cmljc19BcHBJbnRlcmZhY2VDcmVhdGlv",
            "bhITCgtyYXdfdmVyc2lvbhgBIAEoCRIgChhyZXF1ZXN0ZWRfaW50ZXJmYWNl",
            "X3R5cGUYAiABKAkiagonQ0NsaWVudE1ldHJpY3NfQXBwSW50ZXJmYWNlTWV0",
            "aG9kQ291bnRzEhYKDmludGVyZmFjZV9uYW1lGAEgASgJEhMKC21ldGhvZF9u",
            "YW1lGAIgASgJEhIKCmNhbGxfY291bnQYAyABKA0i5AEKLUNDbGllbnRNZXRy",
            "aWNzX0FwcEludGVyZmFjZVN0YXRzX05vdGlmaWNhdGlvbhIPCgdnYW1lX2lk",
            "GAEgASgEEkAKEmludGVyZmFjZXNfY3JlYXRlZBgCIAMoCzIkLkNDbGllbnRN",
            "ZXRyaWNzX0FwcEludGVyZmFjZUNyZWF0aW9uEkAKDm1ldGhvZHNfY2FsbGVk",
            "GAMgAygLMiguQ0NsaWVudE1ldHJpY3NfQXBwSW50ZXJmYWNlTWV0aG9kQ291",
            "bnRzEh4KFnNlc3Npb25fbGVuZ3RoX3NlY29uZHMYBCABKA0iXQomQ0NsaWVu",
            "dE1ldHJpY3NfSVB2NkNvbm5lY3Rpdml0eV9SZXN1bHQSFwoPcHJvdG9jb2xf",
            "dGVzdGVkGAEgASgNEhoKEmNvbm5lY3Rpdml0eV9zdGF0ZRgCIAEoDSKYAQos",
            "Q0NsaWVudE1ldHJpY3NfSVB2NkNvbm5lY3Rpdml0eV9Ob3RpZmljYXRpb24S",
            "DwoHY2VsbF9pZBgBIAEoDRI4CgdyZXN1bHRzGAIgAygLMicuQ0NsaWVudE1l",
            "dHJpY3NfSVB2NkNvbm5lY3Rpdml0eV9SZXN1bHQSHQoVcHJpdmF0ZV9pcF9p",
            "c19yZmM2NTk4GAMgASgIIvkBCitDQ2xpZW50TWV0cmljc19TdGVhbVBpcGVX",
            "b3JrU3RhdHNfT3BlcmF0aW9uEkcKBHR5cGUYASABKA4yGC5FU3RlYW1QaXBl",
            "T3BlcmF0aW9uVHlwZTofRVN0ZWFtUGlwZU9wZXJhdGlvblR5cGVfSW52YWxp",
            "ZBIPCgdudW1fb3BzGAIgASgNEhEKCW51bV9ieXRlcxgDIAEoBBIUCgxidXN5",
            "X3RpbWVfbXMYBCABKAQSFAoMaWRsZV90aW1lX21zGAUgASgEEhcKD3N1bV9y",
            "dW5fdGltZV9tcxgGIAEoBBIYChBzdW1fd2FpdF90aW1lX21zGAcgASgEIvEB",
            "Ci5DQ2xpZW50TWV0cmljc19TdGVhbVBpcGVXb3JrU3RhdHNfTm90aWZpY2F0",
            "aW9uEg0KBWFwcGlkGAEgASgNEg8KB2RlcG90aWQYAiABKA0SRgoHd29ydHlw",
            "ZRgDIAEoDjITLkVTdGVhbVBpcGVXb3JrVHlwZTogRVN0ZWFtUGlwZUNsaWVu",
            "dFdvcmtUeXBlX0ludmFsaWQSQAoKb3BlcmF0aW9ucxgEIAMoCzIsLkNDbGll",
            "bnRNZXRyaWNzX1N0ZWFtUGlwZVdvcmtTdGF0c19PcGVyYXRpb24SFQoNaGFy",
            "ZHdhcmVfdHlwZRgFIAEoDSLAAwosQ0NsaWVudE1ldHJpY3NfUmVwb3J0UmVh",
            "Y3RVc2FnZV9Ob3RpZmljYXRpb24SDwoHcHJvZHVjdBgBIAEoCRIPCgd2ZXJz",
            "aW9uGAIgASgJEkcKBnJvdXRlcxgDIAMoCzI3LkNDbGllbnRNZXRyaWNzX1Jl",
            "cG9ydFJlYWN0VXNhZ2VfTm90aWZpY2F0aW9uLlJvdXRlRGF0YRJPCgpjb21w",
            "b25lbnRzGAQgAygLMjsuQ0NsaWVudE1ldHJpY3NfUmVwb3J0UmVhY3RVc2Fn",
            "ZV9Ob3RpZmljYXRpb24uQ29tcG9uZW50RGF0YRJJCgdhY3Rpb25zGAUgAygL",
            "MjguQ0NsaWVudE1ldHJpY3NfUmVwb3J0UmVhY3RVc2FnZV9Ob3RpZmljYXRp",
            "b24uQWN0aW9uRGF0YRopCglSb3V0ZURhdGESDQoFcm91dGUYASABKAkSDQoF",
            "Y291bnQYAiABKA0aMQoNQ29tcG9uZW50RGF0YRIRCgljb21wb25lbnQYASAB",
            "KAkSDQoFY291bnQYAiABKA0aKwoKQWN0aW9uRGF0YRIOCgZhY3Rpb24YASAB",
            "KAkSDQoFY291bnQYAiABKA0i5QEKLUNDbGllbnRNZXRyaWNzX1JlcG9ydENs",
            "aWVudEVycm9yX05vdGlmaWNhdGlvbhIPCgdwcm9kdWN0GAEgASgJEg8KB3Zl",
            "cnNpb24YAiABKAkSRAoGZXJyb3JzGAMgAygLMjQuQ0NsaWVudE1ldHJpY3Nf",
            "UmVwb3J0Q2xpZW50RXJyb3JfTm90aWZpY2F0aW9uLkVycm9yGkwKBUVycm9y",
            "EhIKCmlkZW50aWZpZXIYASABKAkSDwoHbWVzc2FnZRgCIAEoCRINCgVjb3Vu",
            "dBgDIAEoDRIPCgdjb250ZXh0GAQgASgJImcKK0NDbGllbnRNZXRyaWNzX0Ns",
            "aWVudEJvb3RzdHJhcF9Ob3RpZmljYXRpb24SOAoHc3VtbWFyeRgBIAEoCzIn",
            "LkNDbGllbnRNZXRyaWNzX0NsaWVudEJvb3RzdHJhcF9TdW1tYXJ5IrcDCilD",
            "Q2xpZW50TWV0cmljc19Eb3dubG9hZFJhdGVzX05vdGlmaWNhdGlvbhIPCgdj",
            "ZWxsX2lkGAEgASgNEkMKBXN0YXRzGAIgAygLMjQuQ0NsaWVudE1ldHJpY3Nf",
            "RG93bmxvYWRSYXRlc19Ob3RpZmljYXRpb24uU3RhdHNJbmZvEhcKD3Rocm90",
            "dGxpbmdfa2JwcxgDIAEoDRIPCgdvc190eXBlGAQgASgNEhMKC2RldmljZV90",
            "eXBlGAUgASgNGvQBCglTdGF0c0luZm8SEwoLc291cmNlX3R5cGUYASABKA0S",
            "EQoJc291cmNlX2lkGAIgASgNEg0KBWJ5dGVzGAMgASgEEhEKCWhvc3RfbmFt",
            "ZRgEIAEoCRIUCgxtaWNyb3NlY29uZHMYBSABKAQSEQoJdXNlZF9pcHY2GAYg",
            "ASgIEg8KB3Byb3hpZWQYByABKAgSEgoKdXNlZF9odHRwMhgIIAEoCBISCgpj",
            "YWNoZV9oaXRzGAkgASgNEhQKDGNhY2hlX21pc3NlcxgKIAEoDRIRCgloaXRf",
            "Ynl0ZXMYCyABKAQSEgoKbWlzc19ieXRlcxgMIAEoBCKeAgotQ0NsaWVudE1l",
            "dHJpY3NfQ29udGVudFZhbGlkYXRpb25fTm90aWZpY2F0aW9uEhkKEXZhbGlk",
            "YXRpb25fcmVzdWx0GAEgASgFEg4KBmFwcF9pZBgCIAEoDRIUCgxzdGFnZWRf",
            "ZmlsZXMYAyABKAgSFgoOdXNlcl9pbml0aWF0ZWQYBCABKAgSEQoJZWFybHlf",
            "b3V0GAUgASgIEhYKDmNodW5rc19zY2FubmVkGAYgASgNEhYKDmNodW5rc19j",
            "b3JydXB0GAcgASgNEhUKDWJ5dGVzX3NjYW5uZWQYCCABKAQSGQoRY2h1bmJ5",
            "dGVzX2NvcnJ1cHQYCSABKAQSHwoXdG90YWxfZmlsZV9zaXplX2NvcnJ1cHQY",
            "CiABKAQi4AQKLUNDbGllbnRNZXRyaWNzX0Nsb3VkQXBwU3luY1N0YXRzX05v",
            "dGlmaWNhdGlvbhIOCgZhcHBfaWQYASABKA0SFQoNcGxhdGZvcm1fdHlwZRgC",
            "IAEoDRIPCgdwcmVsb2FkGAMgASgIEhsKE2Jsb2NraW5nX2FwcF9sYXVuY2gY",
            "BCABKAgSFgoOZmlsZXNfdXBsb2FkZWQYBSABKA0SGAoQZmlsZXNfZG93bmxv",
            "YWRlZBgGIAEoDRIVCg1maWxlc19kZWxldGVkGAcgASgNEhYKDmJ5dGVzX3Vw",
            "bG9hZGVkGAggASgEEhgKEGJ5dGVzX2Rvd25sb2FkZWQYCSABKAQSFgoObWlj",
            "cm9zZWNfdG90YWwYCiABKAQSHAoUbWljcm9zZWNfaW5pdF9jYWNoZXMYCyAB",
            "KAQSHwoXbWljcm9zZWNfdmFsaWRhdGVfc3RhdGUYDCABKAQSGgoSbWljcm9z",
            "ZWNfYWNfbGF1bmNoGA0gASgEEiMKG21pY3Jvc2VjX2FjX3ByZXBfdXNlcl9m",
            "aWxlcxgOIAEoBBIYChBtaWNyb3NlY19hY19leGl0GA8gASgEEiAKGG1pY3Jv",
            "c2VjX2J1aWxkX3N5bmNfbGlzdBgQIAEoBBIdChVtaWNyb3NlY19kZWxldGVf",
            "ZmlsZXMYESABKAQSHwoXbWljcm9zZWNfZG93bmxvYWRfZmlsZXMYEiABKAQS",
            "HQoVbWljcm9zZWNfdXBsb2FkX2ZpbGVzGBMgASgEEhUKDWhhcmR3YXJlX3R5",
            "cGUYFCABKA0SFQoNZmlsZXNfbWFuYWdlZBgVIAEoDSKKAQo6Q0NsaWVudE1l",
            "dHJpY3NfQ29udGVudERvd25sb2FkUmVzcG9uc2VfQ291bnRzX05vdGlmaWNh",
            "dGlvbhIPCgdjZWxsX2lkGAEgASgNEjsKBGRhdGEYAiABKAsyLS5DQ2xpZW50",
            "TWV0cmljc19Db250ZW50RG93bmxvYWRSZXNwb25zZV9Ib3N0cyLoAgosQ0Ns",
            "aWVudE1ldHJpY3NfUmVwb3J0Q2xpZW50QXJnc19Ob3RpZmljYXRpb24SEwoL",
            "Y2xpZW50X2FyZ3MYASADKAkSIwobZ3B1X3dlYnZpZXdfcmVna2V5X2Rpc2Fi",
            "bGVkGAIgASgIEhsKE3N1cHByZXNzX2dwdV9jaHJvbWUYAyABKAgSHQoVYnJv",
            "d3Nlcl9ub3Rfc3VwcG9ydGVkGAQgASgIEiYKHmh3X2FjY2VsX3ZpZGVvX3Jl",
            "Z2tleV9kaXNhYmxlZBgFIAEoCBIZChFtaW5pX21vZGVfZW5hYmxlZBgGIAEo",
            "CBIbChNmcHNfY291bnRlcl9lbmFibGVkGAcgASgIEioKImxpYnJhcnlfbG93",
            "X2JhbmR3aWR0aF9tb2RlX2VuYWJsZWQYCCABKAgSJQodbGlicmFyeV9sb3df",
            "cGVyZl9tb2RlX2VuYWJsZWQYCSABKAgSDwoHZ3JfbW9kZRgKIAEoBSLGAQos",
            "Q0NsaWVudE1ldHJpY3NfUmVwb3J0TGludXhTdGF0c19Ob3RpZmljYXRpb24S",
            "GwoTZ2xpYmNfdmVyc2lvbl9tYWpvchgBIAEoBRIbChNnbGliY192ZXJzaW9u",
            "X21pbm9yGAIgASgFEhQKDGFjY291bnRfdHlwZRgDIAEoBRIVCg1sYXVuY2hl",
            "cl90eXBlGAQgASgFEhkKEWdhbWVfc2VydmVyX2FwcGlkGAUgASgFEhQKDHBy",
            "b2Nlc3NfbmFtZRgGIAEoCSKrAQolQ0NsaWVudE1ldHJpY3NfQ2xpcFNoYXJl",
            "X05vdGlmaWNhdGlvbhISCgdlcmVzdWx0GAEgASgNOgEyEj4KDHNoYXJlX21l",
            "dGhvZBgCIAEoDjIRLkVDbGlwU2hhcmVNZXRob2Q6FUVDbGlwU2hhcmVNZXRo",
            "b2RfQ2hhdBIPCgdzZWNvbmRzGAMgASgCEg0KBWJ5dGVzGAQgASgEEg4KBmdh",
            "bWVpZBgFIAEoBiL9AwolQ0NsaWVudE1ldHJpY3NfQ2xpcFJhbmdlX05vdGlm",
            "aWNhdGlvbhJTChVvcmlnaW5hbF9yYW5nZV9tZXRob2QYASABKA4yES5FQ2xp",
            "cFJhbmdlTWV0aG9kOiFFQ2xpcFJhbmdlTWV0aG9kX0NyZWF0ZUNsaXBCdXR0",
            "b24SRwoFc3RhcnQYAiABKAsyOC5DQ2xpZW50TWV0cmljc19DbGlwUmFuZ2Vf",
            "Tm90aWZpY2F0aW9uLlJlbGF0aXZlUmFuZ2VFZGdlEkUKA2VuZBgDIAEoCzI4",
            "LkNDbGllbnRNZXRyaWNzX0NsaXBSYW5nZV9Ob3RpZmljYXRpb24uUmVsYXRp",
            "dmVSYW5nZUVkZ2USDwoHc2Vjb25kcxgEIAEoAhIOCgZnYW1laWQYBSABKAYa",
            "zQEKEVJlbGF0aXZlUmFuZ2VFZGdlElMKFW9yaWdpbmFsX3JhbmdlX21ldGhv",
            "ZBgBIAEoDjIRLkVDbGlwUmFuZ2VNZXRob2Q6IUVDbGlwUmFuZ2VNZXRob2Rf",
            "Q3JlYXRlQ2xpcEJ1dHRvbhJRChNsYXRlc3RfcmFuZ2VfbWV0aG9kGAIgASgO",
            "MhEuRUNsaXBSYW5nZU1ldGhvZDohRUNsaXBSYW5nZU1ldGhvZF9DcmVhdGVD",
            "bGlwQnV0dG9uEhAKCGRlbHRhX21zGAMgASgFIr0BCixDQ2xpZW50TWV0cmlj",
            "c19FbmRHYW1lUmVjb3JkaW5nX05vdGlmaWNhdGlvbhJHCg5yZWNvcmRpbmdf",
            "dHlwZRgBIAEoDjITLkVHYW1lUmVjb3JkaW5nVHlwZToaRUdhbWVSZWNvcmRp",
            "bmdUeXBlX1Vua25vd24SDwoHc2Vjb25kcxgCIAEoAhINCgVieXRlcxgDIAEo",
            "BBIOCgZnYW1laWQYBCABKAYSFAoMaW5zdGFudF9jbGlwGAUgASgIItgCCitD",
            "Q2xpZW50TWV0cmljc19HYW1lUGVyZm9ybWFuY2VfTm90aWZpY2F0aW9uEk0K",
            "B3JlcG9ydHMYASADKAsyPC5DQ2xpZW50TWV0cmljc19HYW1lUGVyZm9ybWFu",
            "Y2VfTm90aWZpY2F0aW9uLkZyYW1lUmF0ZVJlcG9ydBrZAQoPRnJhbWVSYXRl",
            "UmVwb3J0Eg4KBmdhbWVpZBgBIAEoBhISCgpmcmFtZV9yYXRlGAIgASgNEhQK",
            "DG1hbnVmYWN0dXJlchgDIAEoCRINCgVtb2RlbBgEIAEoCRIVCg1keF92aWRl",
            "b19jYXJkGAUgASgJEhMKC2R4X3ZlbmRvcmlkGAYgASgFEhMKC2R4X2Rldmlj",
            "ZWlkGAcgASgFEg8KB251bV9ncHUYCCABKA0SEgoKc3lzdGVtX3JhbRgJIAEo",
            "BBIXCg9zZXNzaW9uX3NlY29uZHMYCiABKAUqbQoSRVN0ZWFtUGlwZVdvcmtU",
            "eXBlEiQKIEVTdGVhbVBpcGVDbGllbnRXb3JrVHlwZV9JbnZhbGlkEAASMQot",
            "RVN0ZWFtUGlwZUNsaWVudFdvcmtUeXBlX1N0YWdlRnJvbUNodW5rU3RvcmVz",
            "EAEqswEKF0VTdGVhbVBpcGVPcGVyYXRpb25UeXBlEiMKH0VTdGVhbVBpcGVP",
            "cGVyYXRpb25UeXBlX0ludmFsaWQQABImCiJFU3RlYW1QaXBlT3BlcmF0aW9u",
            "VHlwZV9EZWNyeXB0Q1BVEAESJAogRVN0ZWFtUGlwZU9wZXJhdGlvblR5cGVf",
            "RGlza1JlYWQQAhIlCiFFU3RlYW1QaXBlT3BlcmF0aW9uVHlwZV9EaXNrV3Jp",
            "dGUQAyrKAQoQRUNsaXBTaGFyZU1ldGhvZBIZChVFQ2xpcFNoYXJlTWV0aG9k",
            "X0NoYXQQARIeChpFQ2xpcFNoYXJlTWV0aG9kX0NsaXBib2FyZBACEhkKFUVD",
            "bGlwU2hhcmVNZXRob2RfRmlsZRADEh0KGUVDbGlwU2hhcmVNZXRob2RfU2Vu",
            "ZENsaXAQBBIgChxFQ2xpcFNoYXJlTWV0aG9kX1NhdmVUb01lZGlhEAUSHwob",
            "RUNsaXBTaGFyZU1ldGhvZF9DcmVhdGVMaW5rEAYqggIKEEVDbGlwUmFuZ2VN",
            "ZXRob2QSJQohRUNsaXBSYW5nZU1ldGhvZF9DcmVhdGVDbGlwQnV0dG9uEAES",
            "HgoaRUNsaXBSYW5nZU1ldGhvZF9IaWdobGlnaHQQAhIkCiBFQ2xpcFJhbmdl",
            "TWV0aG9kX0JlZ2luRW5kQnV0dG9ucxADEiAKHEVDbGlwUmFuZ2VNZXRob2Rf",
            "Q29udGV4dE1lbnUQBBIZChVFQ2xpcFJhbmdlTWV0aG9kX0RyYWcQBRIfChtF",
            "Q2xpcFJhbmdlTWV0aG9kX0VudGlyZUNsaXAQBhIjCh9FQ2xpcFJhbmdlTWV0",
            "aG9kX1BoYXNlUmVjb3JkaW5nEAcy7QoKDUNsaWVudE1ldHJpY3MSXAodQ2xp",
            "ZW50QXBwSW50ZXJmYWNlU3RhdHNSZXBvcnQSLi5DQ2xpZW50TWV0cmljc19B",
            "cHBJbnRlcmZhY2VTdGF0c19Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNlEloK",
            "HENsaWVudElQdjZDb25uZWN0aXZpdHlSZXBvcnQSLS5DQ2xpZW50TWV0cmlj",
            "c19JUHY2Q29ubmVjdGl2aXR5X05vdGlmaWNhdGlvbhoLLk5vUmVzcG9uc2US",
            "WAoYU3RlYW1QaXBlV29ya1N0YXRzUmVwb3J0Ei8uQ0NsaWVudE1ldHJpY3Nf",
            "U3RlYW1QaXBlV29ya1N0YXRzX05vdGlmaWNhdGlvbhoLLk5vUmVzcG9uc2US",
            "TgoQUmVwb3J0UmVhY3RVc2FnZRItLkNDbGllbnRNZXRyaWNzX1JlcG9ydFJl",
            "YWN0VXNhZ2VfTm90aWZpY2F0aW9uGgsuTm9SZXNwb25zZRJQChFSZXBvcnRD",
            "bGllbnRFcnJvchIuLkNDbGllbnRNZXRyaWNzX1JlcG9ydENsaWVudEVycm9y",
            "X05vdGlmaWNhdGlvbhoLLk5vUmVzcG9uc2USUgoVQ2xpZW50Qm9vdHN0cmFw",
            "UmVwb3J0EiwuQ0NsaWVudE1ldHJpY3NfQ2xpZW50Qm9vdHN0cmFwX05vdGlm",
            "aWNhdGlvbhoLLk5vUmVzcG9uc2USVAoZQ2xpZW50RG93bmxvYWRSYXRlc1Jl",
            "cG9ydBIqLkNDbGllbnRNZXRyaWNzX0Rvd25sb2FkUmF0ZXNfTm90aWZpY2F0",
            "aW9uGgsuTm9SZXNwb25zZRJcCh1DbGllbnRDb250ZW50VmFsaWRhdGlvblJl",
            "cG9ydBIuLkNDbGllbnRNZXRyaWNzX0NvbnRlbnRWYWxpZGF0aW9uX05vdGlm",
            "aWNhdGlvbhoLLk5vUmVzcG9uc2USVgoXQ2xpZW50Q2xvdWRBcHBTeW5jU3Rh",
            "dHMSLi5DQ2xpZW50TWV0cmljc19DbG91ZEFwcFN5bmNTdGF0c19Ob3RpZmlj",
            "YXRpb24aCy5Ob1Jlc3BvbnNlEmwKIENsaWVudERvd25sb2FkUmVzcG9uc2VD",
            "b2RlQ291bnRzEjsuQ0NsaWVudE1ldHJpY3NfQ29udGVudERvd25sb2FkUmVz",
            "cG9uc2VfQ291bnRzX05vdGlmaWNhdGlvbhoLLk5vUmVzcG9uc2USTgoQUmVw",
            "b3J0Q2xpZW50QXJncxItLkNDbGllbnRNZXRyaWNzX1JlcG9ydENsaWVudEFy",
            "Z3NfTm90aWZpY2F0aW9uGgsuTm9SZXNwb25zZRJOChBSZXBvcnRMaW51eFN0",
            "YXRzEi0uQ0NsaWVudE1ldHJpY3NfUmVwb3J0TGludXhTdGF0c19Ob3RpZmlj",
            "YXRpb24aCy5Ob1Jlc3BvbnNlEkYKD1JlcG9ydENsaXBTaGFyZRImLkNDbGll",
            "bnRNZXRyaWNzX0NsaXBTaGFyZV9Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNl",
            "EkYKD1JlcG9ydENsaXBSYW5nZRImLkNDbGllbnRNZXRyaWNzX0NsaXBSYW5n",
            "ZV9Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNlElQKFlJlcG9ydEVuZEdhbWVS",
            "ZWNvcmRpbmcSLS5DQ2xpZW50TWV0cmljc19FbmRHYW1lUmVjb3JkaW5nX05v",
            "dGlmaWNhdGlvbhoLLk5vUmVzcG9uc2USUgoVUmVwb3J0R2FtZVBlcmZvcm1h",
            "bmNlEiwuQ0NsaWVudE1ldHJpY3NfR2FtZVBlcmZvcm1hbmNlX05vdGlmaWNh",
            "dGlvbhoLLk5vUmVzcG9uc2VCHYABAaoCF09wZW5TdGVhbXdvcmtzLlByb3Rv",
            "YnVm"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::OpenSteamworks.Protobuf.SteammessagesBaseReflection.Descriptor, global::OpenSteamworks.Protobuf.SteammessagesUnifiedBaseSteamclientReflection.Descriptor, global::OpenSteamworks.Protobuf.ClientmetricsReflection.Descriptor, global::OpenSteamworks.Protobuf.EnumsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::OpenSteamworks.Protobuf.ESteamPipeWorkType), typeof(global::OpenSteamworks.Protobuf.ESteamPipeOperationType), typeof(global::OpenSteamworks.Protobuf.EClipShareMethod), typeof(global::OpenSteamworks.Protobuf.EClipRangeMethod), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceCreation), global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceCreation.Parser, new[]{ "RawVersion", "RequestedInterfaceType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceMethodCounts), global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceMethodCounts.Parser, new[]{ "InterfaceName", "MethodName", "CallCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceStats_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceStats_Notification.Parser, new[]{ "GameId", "InterfacesCreated", "MethodsCalled", "SessionLengthSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_IPv6Connectivity_Result), global::OpenSteamworks.Protobuf.CClientMetrics_IPv6Connectivity_Result.Parser, new[]{ "ProtocolTested", "ConnectivityState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_IPv6Connectivity_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_IPv6Connectivity_Notification.Parser, new[]{ "CellId", "Results", "PrivateIpIsRfc6598" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_SteamPipeWorkStats_Operation), global::OpenSteamworks.Protobuf.CClientMetrics_SteamPipeWorkStats_Operation.Parser, new[]{ "Type", "NumOps", "NumBytes", "BusyTimeMs", "IdleTimeMs", "SumRunTimeMs", "SumWaitTimeMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_SteamPipeWorkStats_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_SteamPipeWorkStats_Notification.Parser, new[]{ "Appid", "Depotid", "Wortype", "Operations", "HardwareType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Parser, new[]{ "Product", "Version", "Routes", "Components", "Actions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.RouteData), global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.RouteData.Parser, new[]{ "Route", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ComponentData), global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ComponentData.Parser, new[]{ "Component", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ActionData), global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ActionData.Parser, new[]{ "Action", "Count" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ReportClientError_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_ReportClientError_Notification.Parser, new[]{ "Product", "Version", "Errors" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ReportClientError_Notification.Types.Error), global::OpenSteamworks.Protobuf.CClientMetrics_ReportClientError_Notification.Types.Error.Parser, new[]{ "Identifier", "Message", "Count", "Context" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ClientBootstrap_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_ClientBootstrap_Notification.Parser, new[]{ "Summary" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_DownloadRates_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_DownloadRates_Notification.Parser, new[]{ "CellId", "Stats", "ThrottlingKbps", "OsType", "DeviceType" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_DownloadRates_Notification.Types.StatsInfo), global::OpenSteamworks.Protobuf.CClientMetrics_DownloadRates_Notification.Types.StatsInfo.Parser, new[]{ "SourceType", "SourceId", "Bytes", "HostName", "Microseconds", "UsedIpv6", "Proxied", "UsedHttp2", "CacheHits", "CacheMisses", "HitBytes", "MissBytes" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ContentValidation_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_ContentValidation_Notification.Parser, new[]{ "ValidationResult", "AppId", "StagedFiles", "UserInitiated", "EarlyOut", "ChunksScanned", "ChunksCorrupt", "BytesScanned", "ChunbytesCorrupt", "TotalFileSizeCorrupt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_CloudAppSyncStats_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_CloudAppSyncStats_Notification.Parser, new[]{ "AppId", "PlatformType", "Preload", "BlockingAppLaunch", "FilesUploaded", "FilesDownloaded", "FilesDeleted", "BytesUploaded", "BytesDownloaded", "MicrosecTotal", "MicrosecInitCaches", "MicrosecValidateState", "MicrosecAcLaunch", "MicrosecAcPrepUserFiles", "MicrosecAcExit", "MicrosecBuildSyncList", "MicrosecDeleteFiles", "MicrosecDownloadFiles", "MicrosecUploadFiles", "HardwareType", "FilesManaged" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ContentDownloadResponse_Counts_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_ContentDownloadResponse_Counts_Notification.Parser, new[]{ "CellId", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ReportClientArgs_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_ReportClientArgs_Notification.Parser, new[]{ "ClientArgs", "GpuWebviewRegkeyDisabled", "SuppressGpuChrome", "BrowserNotSupported", "HwAccelVideoRegkeyDisabled", "MiniModeEnabled", "FpsCounterEnabled", "LibraryLowBandwidthModeEnabled", "LibraryLowPerfModeEnabled", "GrMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ReportLinuxStats_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_ReportLinuxStats_Notification.Parser, new[]{ "GlibcVersionMajor", "GlibcVersionMinor", "AccountType", "LauncherType", "GameServerAppid", "ProcessName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ClipShare_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_ClipShare_Notification.Parser, new[]{ "Eresult", "ShareMethod", "Seconds", "Bytes", "Gameid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Parser, new[]{ "OriginalRangeMethod", "Start", "End", "Seconds", "Gameid" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Types.RelativeRangeEdge), global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Types.RelativeRangeEdge.Parser, new[]{ "OriginalRangeMethod", "LatestRangeMethod", "DeltaMs" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_EndGameRecording_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_EndGameRecording_Notification.Parser, new[]{ "RecordingType", "Seconds", "Bytes", "Gameid", "InstantClip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_GamePerformance_Notification), global::OpenSteamworks.Protobuf.CClientMetrics_GamePerformance_Notification.Parser, new[]{ "Reports" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CClientMetrics_GamePerformance_Notification.Types.FrameRateReport), global::OpenSteamworks.Protobuf.CClientMetrics_GamePerformance_Notification.Types.FrameRateReport.Parser, new[]{ "Gameid", "FrameRate", "Manufacturer", "Model", "DxVideoCard", "DxVendorid", "DxDeviceid", "NumGpu", "SystemRam", "SessionSeconds" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  public enum ESteamPipeWorkType {
    [pbr::OriginalName("ESteamPipeClientWorkType_Invalid")] EsteamPipeClientWorkTypeInvalid = 0,
    [pbr::OriginalName("ESteamPipeClientWorkType_StageFromChunkStores")] EsteamPipeClientWorkTypeStageFromChunkStores = 1,
  }

  public enum ESteamPipeOperationType {
    [pbr::OriginalName("ESteamPipeOperationType_Invalid")] Invalid = 0,
    [pbr::OriginalName("ESteamPipeOperationType_DecryptCPU")] DecryptCpu = 1,
    [pbr::OriginalName("ESteamPipeOperationType_DiskRead")] DiskRead = 2,
    [pbr::OriginalName("ESteamPipeOperationType_DiskWrite")] DiskWrite = 3,
  }

  public enum EClipShareMethod {
    [pbr::OriginalName("EClipShareMethod_Chat")] Chat = 1,
    [pbr::OriginalName("EClipShareMethod_Clipboard")] Clipboard = 2,
    [pbr::OriginalName("EClipShareMethod_File")] File = 3,
    [pbr::OriginalName("EClipShareMethod_SendClip")] SendClip = 4,
    [pbr::OriginalName("EClipShareMethod_SaveToMedia")] SaveToMedia = 5,
    [pbr::OriginalName("EClipShareMethod_CreateLink")] CreateLink = 6,
  }

  public enum EClipRangeMethod {
    [pbr::OriginalName("EClipRangeMethod_CreateClipButton")] CreateClipButton = 1,
    [pbr::OriginalName("EClipRangeMethod_Highlight")] Highlight = 2,
    [pbr::OriginalName("EClipRangeMethod_BeginEndButtons")] BeginEndButtons = 3,
    [pbr::OriginalName("EClipRangeMethod_ContextMenu")] ContextMenu = 4,
    [pbr::OriginalName("EClipRangeMethod_Drag")] Drag = 5,
    [pbr::OriginalName("EClipRangeMethod_EntireClip")] EntireClip = 6,
    [pbr::OriginalName("EClipRangeMethod_PhaseRecording")] PhaseRecording = 7,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_AppInterfaceCreation : pb::IMessage<CClientMetrics_AppInterfaceCreation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_AppInterfaceCreation> _parser = new pb::MessageParser<CClientMetrics_AppInterfaceCreation>(() => new CClientMetrics_AppInterfaceCreation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_AppInterfaceCreation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_AppInterfaceCreation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_AppInterfaceCreation(CClientMetrics_AppInterfaceCreation other) : this() {
      rawVersion_ = other.rawVersion_;
      requestedInterfaceType_ = other.requestedInterfaceType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_AppInterfaceCreation Clone() {
      return new CClientMetrics_AppInterfaceCreation(this);
    }

    /// <summary>Field number for the "raw_version" field.</summary>
    public const int RawVersionFieldNumber = 1;
    private readonly static string RawVersionDefaultValue = "";

    private string rawVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RawVersion {
      get { return rawVersion_ ?? RawVersionDefaultValue; }
      set {
        rawVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "raw_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRawVersion {
      get { return rawVersion_ != null; }
    }
    /// <summary>Clears the value of the "raw_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRawVersion() {
      rawVersion_ = null;
    }

    /// <summary>Field number for the "requested_interface_type" field.</summary>
    public const int RequestedInterfaceTypeFieldNumber = 2;
    private readonly static string RequestedInterfaceTypeDefaultValue = "";

    private string requestedInterfaceType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestedInterfaceType {
      get { return requestedInterfaceType_ ?? RequestedInterfaceTypeDefaultValue; }
      set {
        requestedInterfaceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "requested_interface_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestedInterfaceType {
      get { return requestedInterfaceType_ != null; }
    }
    /// <summary>Clears the value of the "requested_interface_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestedInterfaceType() {
      requestedInterfaceType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_AppInterfaceCreation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_AppInterfaceCreation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RawVersion != other.RawVersion) return false;
      if (RequestedInterfaceType != other.RequestedInterfaceType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRawVersion) hash ^= RawVersion.GetHashCode();
      if (HasRequestedInterfaceType) hash ^= RequestedInterfaceType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRawVersion) {
        output.WriteRawTag(10);
        output.WriteString(RawVersion);
      }
      if (HasRequestedInterfaceType) {
        output.WriteRawTag(18);
        output.WriteString(RequestedInterfaceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRawVersion) {
        output.WriteRawTag(10);
        output.WriteString(RawVersion);
      }
      if (HasRequestedInterfaceType) {
        output.WriteRawTag(18);
        output.WriteString(RequestedInterfaceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRawVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RawVersion);
      }
      if (HasRequestedInterfaceType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestedInterfaceType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_AppInterfaceCreation other) {
      if (other == null) {
        return;
      }
      if (other.HasRawVersion) {
        RawVersion = other.RawVersion;
      }
      if (other.HasRequestedInterfaceType) {
        RequestedInterfaceType = other.RequestedInterfaceType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RawVersion = input.ReadString();
            break;
          }
          case 18: {
            RequestedInterfaceType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RawVersion = input.ReadString();
            break;
          }
          case 18: {
            RequestedInterfaceType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_AppInterfaceMethodCounts : pb::IMessage<CClientMetrics_AppInterfaceMethodCounts>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_AppInterfaceMethodCounts> _parser = new pb::MessageParser<CClientMetrics_AppInterfaceMethodCounts>(() => new CClientMetrics_AppInterfaceMethodCounts());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_AppInterfaceMethodCounts> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_AppInterfaceMethodCounts() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_AppInterfaceMethodCounts(CClientMetrics_AppInterfaceMethodCounts other) : this() {
      _hasBits0 = other._hasBits0;
      interfaceName_ = other.interfaceName_;
      methodName_ = other.methodName_;
      callCount_ = other.callCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_AppInterfaceMethodCounts Clone() {
      return new CClientMetrics_AppInterfaceMethodCounts(this);
    }

    /// <summary>Field number for the "interface_name" field.</summary>
    public const int InterfaceNameFieldNumber = 1;
    private readonly static string InterfaceNameDefaultValue = "";

    private string interfaceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InterfaceName {
      get { return interfaceName_ ?? InterfaceNameDefaultValue; }
      set {
        interfaceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "interface_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInterfaceName {
      get { return interfaceName_ != null; }
    }
    /// <summary>Clears the value of the "interface_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInterfaceName() {
      interfaceName_ = null;
    }

    /// <summary>Field number for the "method_name" field.</summary>
    public const int MethodNameFieldNumber = 2;
    private readonly static string MethodNameDefaultValue = "";

    private string methodName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MethodName {
      get { return methodName_ ?? MethodNameDefaultValue; }
      set {
        methodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "method_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMethodName {
      get { return methodName_ != null; }
    }
    /// <summary>Clears the value of the "method_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMethodName() {
      methodName_ = null;
    }

    /// <summary>Field number for the "call_count" field.</summary>
    public const int CallCountFieldNumber = 3;
    private readonly static uint CallCountDefaultValue = 0;

    private uint callCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CallCount {
      get { if ((_hasBits0 & 1) != 0) { return callCount_; } else { return CallCountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        callCount_ = value;
      }
    }
    /// <summary>Gets whether the "call_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCallCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "call_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCallCount() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_AppInterfaceMethodCounts);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_AppInterfaceMethodCounts other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InterfaceName != other.InterfaceName) return false;
      if (MethodName != other.MethodName) return false;
      if (CallCount != other.CallCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInterfaceName) hash ^= InterfaceName.GetHashCode();
      if (HasMethodName) hash ^= MethodName.GetHashCode();
      if (HasCallCount) hash ^= CallCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInterfaceName) {
        output.WriteRawTag(10);
        output.WriteString(InterfaceName);
      }
      if (HasMethodName) {
        output.WriteRawTag(18);
        output.WriteString(MethodName);
      }
      if (HasCallCount) {
        output.WriteRawTag(24);
        output.WriteUInt32(CallCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInterfaceName) {
        output.WriteRawTag(10);
        output.WriteString(InterfaceName);
      }
      if (HasMethodName) {
        output.WriteRawTag(18);
        output.WriteString(MethodName);
      }
      if (HasCallCount) {
        output.WriteRawTag(24);
        output.WriteUInt32(CallCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInterfaceName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InterfaceName);
      }
      if (HasMethodName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodName);
      }
      if (HasCallCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CallCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_AppInterfaceMethodCounts other) {
      if (other == null) {
        return;
      }
      if (other.HasInterfaceName) {
        InterfaceName = other.InterfaceName;
      }
      if (other.HasMethodName) {
        MethodName = other.MethodName;
      }
      if (other.HasCallCount) {
        CallCount = other.CallCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InterfaceName = input.ReadString();
            break;
          }
          case 18: {
            MethodName = input.ReadString();
            break;
          }
          case 24: {
            CallCount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            InterfaceName = input.ReadString();
            break;
          }
          case 18: {
            MethodName = input.ReadString();
            break;
          }
          case 24: {
            CallCount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_AppInterfaceStats_Notification : pb::IMessage<CClientMetrics_AppInterfaceStats_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_AppInterfaceStats_Notification> _parser = new pb::MessageParser<CClientMetrics_AppInterfaceStats_Notification>(() => new CClientMetrics_AppInterfaceStats_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_AppInterfaceStats_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_AppInterfaceStats_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_AppInterfaceStats_Notification(CClientMetrics_AppInterfaceStats_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_;
      interfacesCreated_ = other.interfacesCreated_.Clone();
      methodsCalled_ = other.methodsCalled_.Clone();
      sessionLengthSeconds_ = other.sessionLengthSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_AppInterfaceStats_Notification Clone() {
      return new CClientMetrics_AppInterfaceStats_Notification(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private readonly static ulong GameIdDefaultValue = 0UL;

    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { if ((_hasBits0 & 1) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gameId_ = value;
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "interfaces_created" field.</summary>
    public const int InterfacesCreatedFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceCreation> _repeated_interfacesCreated_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceCreation.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceCreation> interfacesCreated_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceCreation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceCreation> InterfacesCreated {
      get { return interfacesCreated_; }
    }

    /// <summary>Field number for the "methods_called" field.</summary>
    public const int MethodsCalledFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceMethodCounts> _repeated_methodsCalled_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceMethodCounts.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceMethodCounts> methodsCalled_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceMethodCounts>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_AppInterfaceMethodCounts> MethodsCalled {
      get { return methodsCalled_; }
    }

    /// <summary>Field number for the "session_length_seconds" field.</summary>
    public const int SessionLengthSecondsFieldNumber = 4;
    private readonly static uint SessionLengthSecondsDefaultValue = 0;

    private uint sessionLengthSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SessionLengthSeconds {
      get { if ((_hasBits0 & 2) != 0) { return sessionLengthSeconds_; } else { return SessionLengthSecondsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sessionLengthSeconds_ = value;
      }
    }
    /// <summary>Gets whether the "session_length_seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionLengthSeconds {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "session_length_seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionLengthSeconds() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_AppInterfaceStats_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_AppInterfaceStats_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if(!interfacesCreated_.Equals(other.interfacesCreated_)) return false;
      if(!methodsCalled_.Equals(other.methodsCalled_)) return false;
      if (SessionLengthSeconds != other.SessionLengthSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameId) hash ^= GameId.GetHashCode();
      hash ^= interfacesCreated_.GetHashCode();
      hash ^= methodsCalled_.GetHashCode();
      if (HasSessionLengthSeconds) hash ^= SessionLengthSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      interfacesCreated_.WriteTo(output, _repeated_interfacesCreated_codec);
      methodsCalled_.WriteTo(output, _repeated_methodsCalled_codec);
      if (HasSessionLengthSeconds) {
        output.WriteRawTag(32);
        output.WriteUInt32(SessionLengthSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGameId) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      interfacesCreated_.WriteTo(ref output, _repeated_interfacesCreated_codec);
      methodsCalled_.WriteTo(ref output, _repeated_methodsCalled_codec);
      if (HasSessionLengthSeconds) {
        output.WriteRawTag(32);
        output.WriteUInt32(SessionLengthSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      size += interfacesCreated_.CalculateSize(_repeated_interfacesCreated_codec);
      size += methodsCalled_.CalculateSize(_repeated_methodsCalled_codec);
      if (HasSessionLengthSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SessionLengthSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_AppInterfaceStats_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      interfacesCreated_.Add(other.interfacesCreated_);
      methodsCalled_.Add(other.methodsCalled_);
      if (other.HasSessionLengthSeconds) {
        SessionLengthSeconds = other.SessionLengthSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 18: {
            interfacesCreated_.AddEntriesFrom(input, _repeated_interfacesCreated_codec);
            break;
          }
          case 26: {
            methodsCalled_.AddEntriesFrom(input, _repeated_methodsCalled_codec);
            break;
          }
          case 32: {
            SessionLengthSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 18: {
            interfacesCreated_.AddEntriesFrom(ref input, _repeated_interfacesCreated_codec);
            break;
          }
          case 26: {
            methodsCalled_.AddEntriesFrom(ref input, _repeated_methodsCalled_codec);
            break;
          }
          case 32: {
            SessionLengthSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_IPv6Connectivity_Result : pb::IMessage<CClientMetrics_IPv6Connectivity_Result>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_IPv6Connectivity_Result> _parser = new pb::MessageParser<CClientMetrics_IPv6Connectivity_Result>(() => new CClientMetrics_IPv6Connectivity_Result());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_IPv6Connectivity_Result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_IPv6Connectivity_Result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_IPv6Connectivity_Result(CClientMetrics_IPv6Connectivity_Result other) : this() {
      _hasBits0 = other._hasBits0;
      protocolTested_ = other.protocolTested_;
      connectivityState_ = other.connectivityState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_IPv6Connectivity_Result Clone() {
      return new CClientMetrics_IPv6Connectivity_Result(this);
    }

    /// <summary>Field number for the "protocol_tested" field.</summary>
    public const int ProtocolTestedFieldNumber = 1;
    private readonly static uint ProtocolTestedDefaultValue = 0;

    private uint protocolTested_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProtocolTested {
      get { if ((_hasBits0 & 1) != 0) { return protocolTested_; } else { return ProtocolTestedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        protocolTested_ = value;
      }
    }
    /// <summary>Gets whether the "protocol_tested" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProtocolTested {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "protocol_tested" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProtocolTested() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "connectivity_state" field.</summary>
    public const int ConnectivityStateFieldNumber = 2;
    private readonly static uint ConnectivityStateDefaultValue = 0;

    private uint connectivityState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConnectivityState {
      get { if ((_hasBits0 & 2) != 0) { return connectivityState_; } else { return ConnectivityStateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        connectivityState_ = value;
      }
    }
    /// <summary>Gets whether the "connectivity_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConnectivityState {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "connectivity_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConnectivityState() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_IPv6Connectivity_Result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_IPv6Connectivity_Result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtocolTested != other.ProtocolTested) return false;
      if (ConnectivityState != other.ConnectivityState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProtocolTested) hash ^= ProtocolTested.GetHashCode();
      if (HasConnectivityState) hash ^= ConnectivityState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProtocolTested) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProtocolTested);
      }
      if (HasConnectivityState) {
        output.WriteRawTag(16);
        output.WriteUInt32(ConnectivityState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProtocolTested) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProtocolTested);
      }
      if (HasConnectivityState) {
        output.WriteRawTag(16);
        output.WriteUInt32(ConnectivityState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProtocolTested) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolTested);
      }
      if (HasConnectivityState) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConnectivityState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_IPv6Connectivity_Result other) {
      if (other == null) {
        return;
      }
      if (other.HasProtocolTested) {
        ProtocolTested = other.ProtocolTested;
      }
      if (other.HasConnectivityState) {
        ConnectivityState = other.ConnectivityState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProtocolTested = input.ReadUInt32();
            break;
          }
          case 16: {
            ConnectivityState = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProtocolTested = input.ReadUInt32();
            break;
          }
          case 16: {
            ConnectivityState = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_IPv6Connectivity_Notification : pb::IMessage<CClientMetrics_IPv6Connectivity_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_IPv6Connectivity_Notification> _parser = new pb::MessageParser<CClientMetrics_IPv6Connectivity_Notification>(() => new CClientMetrics_IPv6Connectivity_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_IPv6Connectivity_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_IPv6Connectivity_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_IPv6Connectivity_Notification(CClientMetrics_IPv6Connectivity_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      cellId_ = other.cellId_;
      results_ = other.results_.Clone();
      privateIpIsRfc6598_ = other.privateIpIsRfc6598_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_IPv6Connectivity_Notification Clone() {
      return new CClientMetrics_IPv6Connectivity_Notification(this);
    }

    /// <summary>Field number for the "cell_id" field.</summary>
    public const int CellIdFieldNumber = 1;
    private readonly static uint CellIdDefaultValue = 0;

    private uint cellId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CellId {
      get { if ((_hasBits0 & 1) != 0) { return cellId_; } else { return CellIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cellId_ = value;
      }
    }
    /// <summary>Gets whether the "cell_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCellId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cell_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCellId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CClientMetrics_IPv6Connectivity_Result> _repeated_results_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.CClientMetrics_IPv6Connectivity_Result.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_IPv6Connectivity_Result> results_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_IPv6Connectivity_Result>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_IPv6Connectivity_Result> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "private_ip_is_rfc6598" field.</summary>
    public const int PrivateIpIsRfc6598FieldNumber = 3;
    private readonly static bool PrivateIpIsRfc6598DefaultValue = false;

    private bool privateIpIsRfc6598_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PrivateIpIsRfc6598 {
      get { if ((_hasBits0 & 2) != 0) { return privateIpIsRfc6598_; } else { return PrivateIpIsRfc6598DefaultValue; } }
      set {
        _hasBits0 |= 2;
        privateIpIsRfc6598_ = value;
      }
    }
    /// <summary>Gets whether the "private_ip_is_rfc6598" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivateIpIsRfc6598 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "private_ip_is_rfc6598" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivateIpIsRfc6598() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_IPv6Connectivity_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_IPv6Connectivity_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CellId != other.CellId) return false;
      if(!results_.Equals(other.results_)) return false;
      if (PrivateIpIsRfc6598 != other.PrivateIpIsRfc6598) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCellId) hash ^= CellId.GetHashCode();
      hash ^= results_.GetHashCode();
      if (HasPrivateIpIsRfc6598) hash ^= PrivateIpIsRfc6598.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCellId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CellId);
      }
      results_.WriteTo(output, _repeated_results_codec);
      if (HasPrivateIpIsRfc6598) {
        output.WriteRawTag(24);
        output.WriteBool(PrivateIpIsRfc6598);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCellId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CellId);
      }
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasPrivateIpIsRfc6598) {
        output.WriteRawTag(24);
        output.WriteBool(PrivateIpIsRfc6598);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCellId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasPrivateIpIsRfc6598) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_IPv6Connectivity_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasCellId) {
        CellId = other.CellId;
      }
      results_.Add(other.results_);
      if (other.HasPrivateIpIsRfc6598) {
        PrivateIpIsRfc6598 = other.PrivateIpIsRfc6598;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CellId = input.ReadUInt32();
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 24: {
            PrivateIpIsRfc6598 = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CellId = input.ReadUInt32();
            break;
          }
          case 18: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 24: {
            PrivateIpIsRfc6598 = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_SteamPipeWorkStats_Operation : pb::IMessage<CClientMetrics_SteamPipeWorkStats_Operation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_SteamPipeWorkStats_Operation> _parser = new pb::MessageParser<CClientMetrics_SteamPipeWorkStats_Operation>(() => new CClientMetrics_SteamPipeWorkStats_Operation());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_SteamPipeWorkStats_Operation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_SteamPipeWorkStats_Operation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_SteamPipeWorkStats_Operation(CClientMetrics_SteamPipeWorkStats_Operation other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      numOps_ = other.numOps_;
      numBytes_ = other.numBytes_;
      busyTimeMs_ = other.busyTimeMs_;
      idleTimeMs_ = other.idleTimeMs_;
      sumRunTimeMs_ = other.sumRunTimeMs_;
      sumWaitTimeMs_ = other.sumWaitTimeMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_SteamPipeWorkStats_Operation Clone() {
      return new CClientMetrics_SteamPipeWorkStats_Operation(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.ESteamPipeOperationType TypeDefaultValue = global::OpenSteamworks.Protobuf.ESteamPipeOperationType.Invalid;

    private global::OpenSteamworks.Protobuf.ESteamPipeOperationType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ESteamPipeOperationType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "num_ops" field.</summary>
    public const int NumOpsFieldNumber = 2;
    private readonly static uint NumOpsDefaultValue = 0;

    private uint numOps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NumOps {
      get { if ((_hasBits0 & 2) != 0) { return numOps_; } else { return NumOpsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        numOps_ = value;
      }
    }
    /// <summary>Gets whether the "num_ops" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumOps {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "num_ops" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumOps() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "num_bytes" field.</summary>
    public const int NumBytesFieldNumber = 3;
    private readonly static ulong NumBytesDefaultValue = 0UL;

    private ulong numBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong NumBytes {
      get { if ((_hasBits0 & 4) != 0) { return numBytes_; } else { return NumBytesDefaultValue; } }
      set {
        _hasBits0 |= 4;
        numBytes_ = value;
      }
    }
    /// <summary>Gets whether the "num_bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumBytes {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "num_bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumBytes() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "busy_time_ms" field.</summary>
    public const int BusyTimeMsFieldNumber = 4;
    private readonly static ulong BusyTimeMsDefaultValue = 0UL;

    private ulong busyTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BusyTimeMs {
      get { if ((_hasBits0 & 8) != 0) { return busyTimeMs_; } else { return BusyTimeMsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        busyTimeMs_ = value;
      }
    }
    /// <summary>Gets whether the "busy_time_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBusyTimeMs {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "busy_time_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBusyTimeMs() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "idle_time_ms" field.</summary>
    public const int IdleTimeMsFieldNumber = 5;
    private readonly static ulong IdleTimeMsDefaultValue = 0UL;

    private ulong idleTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong IdleTimeMs {
      get { if ((_hasBits0 & 16) != 0) { return idleTimeMs_; } else { return IdleTimeMsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        idleTimeMs_ = value;
      }
    }
    /// <summary>Gets whether the "idle_time_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIdleTimeMs {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "idle_time_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdleTimeMs() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "sum_run_time_ms" field.</summary>
    public const int SumRunTimeMsFieldNumber = 6;
    private readonly static ulong SumRunTimeMsDefaultValue = 0UL;

    private ulong sumRunTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SumRunTimeMs {
      get { if ((_hasBits0 & 32) != 0) { return sumRunTimeMs_; } else { return SumRunTimeMsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        sumRunTimeMs_ = value;
      }
    }
    /// <summary>Gets whether the "sum_run_time_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSumRunTimeMs {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "sum_run_time_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSumRunTimeMs() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "sum_wait_time_ms" field.</summary>
    public const int SumWaitTimeMsFieldNumber = 7;
    private readonly static ulong SumWaitTimeMsDefaultValue = 0UL;

    private ulong sumWaitTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SumWaitTimeMs {
      get { if ((_hasBits0 & 64) != 0) { return sumWaitTimeMs_; } else { return SumWaitTimeMsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        sumWaitTimeMs_ = value;
      }
    }
    /// <summary>Gets whether the "sum_wait_time_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSumWaitTimeMs {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "sum_wait_time_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSumWaitTimeMs() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_SteamPipeWorkStats_Operation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_SteamPipeWorkStats_Operation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (NumOps != other.NumOps) return false;
      if (NumBytes != other.NumBytes) return false;
      if (BusyTimeMs != other.BusyTimeMs) return false;
      if (IdleTimeMs != other.IdleTimeMs) return false;
      if (SumRunTimeMs != other.SumRunTimeMs) return false;
      if (SumWaitTimeMs != other.SumWaitTimeMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasNumOps) hash ^= NumOps.GetHashCode();
      if (HasNumBytes) hash ^= NumBytes.GetHashCode();
      if (HasBusyTimeMs) hash ^= BusyTimeMs.GetHashCode();
      if (HasIdleTimeMs) hash ^= IdleTimeMs.GetHashCode();
      if (HasSumRunTimeMs) hash ^= SumRunTimeMs.GetHashCode();
      if (HasSumWaitTimeMs) hash ^= SumWaitTimeMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasNumOps) {
        output.WriteRawTag(16);
        output.WriteUInt32(NumOps);
      }
      if (HasNumBytes) {
        output.WriteRawTag(24);
        output.WriteUInt64(NumBytes);
      }
      if (HasBusyTimeMs) {
        output.WriteRawTag(32);
        output.WriteUInt64(BusyTimeMs);
      }
      if (HasIdleTimeMs) {
        output.WriteRawTag(40);
        output.WriteUInt64(IdleTimeMs);
      }
      if (HasSumRunTimeMs) {
        output.WriteRawTag(48);
        output.WriteUInt64(SumRunTimeMs);
      }
      if (HasSumWaitTimeMs) {
        output.WriteRawTag(56);
        output.WriteUInt64(SumWaitTimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasNumOps) {
        output.WriteRawTag(16);
        output.WriteUInt32(NumOps);
      }
      if (HasNumBytes) {
        output.WriteRawTag(24);
        output.WriteUInt64(NumBytes);
      }
      if (HasBusyTimeMs) {
        output.WriteRawTag(32);
        output.WriteUInt64(BusyTimeMs);
      }
      if (HasIdleTimeMs) {
        output.WriteRawTag(40);
        output.WriteUInt64(IdleTimeMs);
      }
      if (HasSumRunTimeMs) {
        output.WriteRawTag(48);
        output.WriteUInt64(SumRunTimeMs);
      }
      if (HasSumWaitTimeMs) {
        output.WriteRawTag(56);
        output.WriteUInt64(SumWaitTimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasNumOps) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumOps);
      }
      if (HasNumBytes) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NumBytes);
      }
      if (HasBusyTimeMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BusyTimeMs);
      }
      if (HasIdleTimeMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(IdleTimeMs);
      }
      if (HasSumRunTimeMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SumRunTimeMs);
      }
      if (HasSumWaitTimeMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SumWaitTimeMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_SteamPipeWorkStats_Operation other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasNumOps) {
        NumOps = other.NumOps;
      }
      if (other.HasNumBytes) {
        NumBytes = other.NumBytes;
      }
      if (other.HasBusyTimeMs) {
        BusyTimeMs = other.BusyTimeMs;
      }
      if (other.HasIdleTimeMs) {
        IdleTimeMs = other.IdleTimeMs;
      }
      if (other.HasSumRunTimeMs) {
        SumRunTimeMs = other.SumRunTimeMs;
      }
      if (other.HasSumWaitTimeMs) {
        SumWaitTimeMs = other.SumWaitTimeMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::OpenSteamworks.Protobuf.ESteamPipeOperationType) input.ReadEnum();
            break;
          }
          case 16: {
            NumOps = input.ReadUInt32();
            break;
          }
          case 24: {
            NumBytes = input.ReadUInt64();
            break;
          }
          case 32: {
            BusyTimeMs = input.ReadUInt64();
            break;
          }
          case 40: {
            IdleTimeMs = input.ReadUInt64();
            break;
          }
          case 48: {
            SumRunTimeMs = input.ReadUInt64();
            break;
          }
          case 56: {
            SumWaitTimeMs = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::OpenSteamworks.Protobuf.ESteamPipeOperationType) input.ReadEnum();
            break;
          }
          case 16: {
            NumOps = input.ReadUInt32();
            break;
          }
          case 24: {
            NumBytes = input.ReadUInt64();
            break;
          }
          case 32: {
            BusyTimeMs = input.ReadUInt64();
            break;
          }
          case 40: {
            IdleTimeMs = input.ReadUInt64();
            break;
          }
          case 48: {
            SumRunTimeMs = input.ReadUInt64();
            break;
          }
          case 56: {
            SumWaitTimeMs = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_SteamPipeWorkStats_Notification : pb::IMessage<CClientMetrics_SteamPipeWorkStats_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_SteamPipeWorkStats_Notification> _parser = new pb::MessageParser<CClientMetrics_SteamPipeWorkStats_Notification>(() => new CClientMetrics_SteamPipeWorkStats_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_SteamPipeWorkStats_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_SteamPipeWorkStats_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_SteamPipeWorkStats_Notification(CClientMetrics_SteamPipeWorkStats_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      depotid_ = other.depotid_;
      wortype_ = other.wortype_;
      operations_ = other.operations_.Clone();
      hardwareType_ = other.hardwareType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_SteamPipeWorkStats_Notification Clone() {
      return new CClientMetrics_SteamPipeWorkStats_Notification(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "depotid" field.</summary>
    public const int DepotidFieldNumber = 2;
    private readonly static uint DepotidDefaultValue = 0;

    private uint depotid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Depotid {
      get { if ((_hasBits0 & 2) != 0) { return depotid_; } else { return DepotidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        depotid_ = value;
      }
    }
    /// <summary>Gets whether the "depotid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDepotid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "depotid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDepotid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "wortype" field.</summary>
    public const int WortypeFieldNumber = 3;
    private readonly static global::OpenSteamworks.Protobuf.ESteamPipeWorkType WortypeDefaultValue = global::OpenSteamworks.Protobuf.ESteamPipeWorkType.EsteamPipeClientWorkTypeInvalid;

    private global::OpenSteamworks.Protobuf.ESteamPipeWorkType wortype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.ESteamPipeWorkType Wortype {
      get { if ((_hasBits0 & 4) != 0) { return wortype_; } else { return WortypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        wortype_ = value;
      }
    }
    /// <summary>Gets whether the "wortype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWortype {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "wortype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWortype() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "operations" field.</summary>
    public const int OperationsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CClientMetrics_SteamPipeWorkStats_Operation> _repeated_operations_codec
        = pb::FieldCodec.ForMessage(34, global::OpenSteamworks.Protobuf.CClientMetrics_SteamPipeWorkStats_Operation.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_SteamPipeWorkStats_Operation> operations_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_SteamPipeWorkStats_Operation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_SteamPipeWorkStats_Operation> Operations {
      get { return operations_; }
    }

    /// <summary>Field number for the "hardware_type" field.</summary>
    public const int HardwareTypeFieldNumber = 5;
    private readonly static uint HardwareTypeDefaultValue = 0;

    private uint hardwareType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HardwareType {
      get { if ((_hasBits0 & 8) != 0) { return hardwareType_; } else { return HardwareTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        hardwareType_ = value;
      }
    }
    /// <summary>Gets whether the "hardware_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHardwareType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "hardware_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHardwareType() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_SteamPipeWorkStats_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_SteamPipeWorkStats_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (Depotid != other.Depotid) return false;
      if (Wortype != other.Wortype) return false;
      if(!operations_.Equals(other.operations_)) return false;
      if (HardwareType != other.HardwareType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasDepotid) hash ^= Depotid.GetHashCode();
      if (HasWortype) hash ^= Wortype.GetHashCode();
      hash ^= operations_.GetHashCode();
      if (HasHardwareType) hash ^= HardwareType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasDepotid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Depotid);
      }
      if (HasWortype) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Wortype);
      }
      operations_.WriteTo(output, _repeated_operations_codec);
      if (HasHardwareType) {
        output.WriteRawTag(40);
        output.WriteUInt32(HardwareType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasDepotid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Depotid);
      }
      if (HasWortype) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Wortype);
      }
      operations_.WriteTo(ref output, _repeated_operations_codec);
      if (HasHardwareType) {
        output.WriteRawTag(40);
        output.WriteUInt32(HardwareType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasDepotid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Depotid);
      }
      if (HasWortype) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Wortype);
      }
      size += operations_.CalculateSize(_repeated_operations_codec);
      if (HasHardwareType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HardwareType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_SteamPipeWorkStats_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasDepotid) {
        Depotid = other.Depotid;
      }
      if (other.HasWortype) {
        Wortype = other.Wortype;
      }
      operations_.Add(other.operations_);
      if (other.HasHardwareType) {
        HardwareType = other.HardwareType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            Depotid = input.ReadUInt32();
            break;
          }
          case 24: {
            Wortype = (global::OpenSteamworks.Protobuf.ESteamPipeWorkType) input.ReadEnum();
            break;
          }
          case 34: {
            operations_.AddEntriesFrom(input, _repeated_operations_codec);
            break;
          }
          case 40: {
            HardwareType = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            Depotid = input.ReadUInt32();
            break;
          }
          case 24: {
            Wortype = (global::OpenSteamworks.Protobuf.ESteamPipeWorkType) input.ReadEnum();
            break;
          }
          case 34: {
            operations_.AddEntriesFrom(ref input, _repeated_operations_codec);
            break;
          }
          case 40: {
            HardwareType = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_ReportReactUsage_Notification : pb::IMessage<CClientMetrics_ReportReactUsage_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_ReportReactUsage_Notification> _parser = new pb::MessageParser<CClientMetrics_ReportReactUsage_Notification>(() => new CClientMetrics_ReportReactUsage_Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_ReportReactUsage_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ReportReactUsage_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ReportReactUsage_Notification(CClientMetrics_ReportReactUsage_Notification other) : this() {
      product_ = other.product_;
      version_ = other.version_;
      routes_ = other.routes_.Clone();
      components_ = other.components_.Clone();
      actions_ = other.actions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ReportReactUsage_Notification Clone() {
      return new CClientMetrics_ReportReactUsage_Notification(this);
    }

    /// <summary>Field number for the "product" field.</summary>
    public const int ProductFieldNumber = 1;
    private readonly static string ProductDefaultValue = "";

    private string product_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Product {
      get { return product_ ?? ProductDefaultValue; }
      set {
        product_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "product" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProduct {
      get { return product_ != null; }
    }
    /// <summary>Clears the value of the "product" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProduct() {
      product_ = null;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private readonly static string VersionDefaultValue = "";

    private string version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_ ?? VersionDefaultValue; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersion {
      get { return version_ != null; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersion() {
      version_ = null;
    }

    /// <summary>Field number for the "routes" field.</summary>
    public const int RoutesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.RouteData> _repeated_routes_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.RouteData.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.RouteData> routes_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.RouteData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.RouteData> Routes {
      get { return routes_; }
    }

    /// <summary>Field number for the "components" field.</summary>
    public const int ComponentsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ComponentData> _repeated_components_codec
        = pb::FieldCodec.ForMessage(34, global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ComponentData.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ComponentData> components_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ComponentData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ComponentData> Components {
      get { return components_; }
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ActionData> _repeated_actions_codec
        = pb::FieldCodec.ForMessage(42, global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ActionData.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ActionData> actions_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ActionData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Types.ActionData> Actions {
      get { return actions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_ReportReactUsage_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_ReportReactUsage_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Product != other.Product) return false;
      if (Version != other.Version) return false;
      if(!routes_.Equals(other.routes_)) return false;
      if(!components_.Equals(other.components_)) return false;
      if(!actions_.Equals(other.actions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProduct) hash ^= Product.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      hash ^= routes_.GetHashCode();
      hash ^= components_.GetHashCode();
      hash ^= actions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProduct) {
        output.WriteRawTag(10);
        output.WriteString(Product);
      }
      if (HasVersion) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      routes_.WriteTo(output, _repeated_routes_codec);
      components_.WriteTo(output, _repeated_components_codec);
      actions_.WriteTo(output, _repeated_actions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProduct) {
        output.WriteRawTag(10);
        output.WriteString(Product);
      }
      if (HasVersion) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      routes_.WriteTo(ref output, _repeated_routes_codec);
      components_.WriteTo(ref output, _repeated_components_codec);
      actions_.WriteTo(ref output, _repeated_actions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProduct) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Product);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      size += routes_.CalculateSize(_repeated_routes_codec);
      size += components_.CalculateSize(_repeated_components_codec);
      size += actions_.CalculateSize(_repeated_actions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_ReportReactUsage_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasProduct) {
        Product = other.Product;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      routes_.Add(other.routes_);
      components_.Add(other.components_);
      actions_.Add(other.actions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Product = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            routes_.AddEntriesFrom(input, _repeated_routes_codec);
            break;
          }
          case 34: {
            components_.AddEntriesFrom(input, _repeated_components_codec);
            break;
          }
          case 42: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Product = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            routes_.AddEntriesFrom(ref input, _repeated_routes_codec);
            break;
          }
          case 34: {
            components_.AddEntriesFrom(ref input, _repeated_components_codec);
            break;
          }
          case 42: {
            actions_.AddEntriesFrom(ref input, _repeated_actions_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CClientMetrics_ReportReactUsage_Notification message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class RouteData : pb::IMessage<RouteData>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RouteData> _parser = new pb::MessageParser<RouteData>(() => new RouteData());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RouteData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RouteData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RouteData(RouteData other) : this() {
          _hasBits0 = other._hasBits0;
          route_ = other.route_;
          count_ = other.count_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RouteData Clone() {
          return new RouteData(this);
        }

        /// <summary>Field number for the "route" field.</summary>
        public const int RouteFieldNumber = 1;
        private readonly static string RouteDefaultValue = "";

        private string route_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Route {
          get { return route_ ?? RouteDefaultValue; }
          set {
            route_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "route" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRoute {
          get { return route_ != null; }
        }
        /// <summary>Clears the value of the "route" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRoute() {
          route_ = null;
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 2;
        private readonly static uint CountDefaultValue = 0;

        private uint count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Count {
          get { if ((_hasBits0 & 1) != 0) { return count_; } else { return CountDefaultValue; } }
          set {
            _hasBits0 |= 1;
            count_ = value;
          }
        }
        /// <summary>Gets whether the "count" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCount {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "count" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCount() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RouteData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RouteData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Route != other.Route) return false;
          if (Count != other.Count) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasRoute) hash ^= Route.GetHashCode();
          if (HasCount) hash ^= Count.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasRoute) {
            output.WriteRawTag(10);
            output.WriteString(Route);
          }
          if (HasCount) {
            output.WriteRawTag(16);
            output.WriteUInt32(Count);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasRoute) {
            output.WriteRawTag(10);
            output.WriteString(Route);
          }
          if (HasCount) {
            output.WriteRawTag(16);
            output.WriteUInt32(Count);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasRoute) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Route);
          }
          if (HasCount) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RouteData other) {
          if (other == null) {
            return;
          }
          if (other.HasRoute) {
            Route = other.Route;
          }
          if (other.HasCount) {
            Count = other.Count;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Route = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Route = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ComponentData : pb::IMessage<ComponentData>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ComponentData> _parser = new pb::MessageParser<ComponentData>(() => new ComponentData());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ComponentData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ComponentData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ComponentData(ComponentData other) : this() {
          _hasBits0 = other._hasBits0;
          component_ = other.component_;
          count_ = other.count_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ComponentData Clone() {
          return new ComponentData(this);
        }

        /// <summary>Field number for the "component" field.</summary>
        public const int ComponentFieldNumber = 1;
        private readonly static string ComponentDefaultValue = "";

        private string component_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Component {
          get { return component_ ?? ComponentDefaultValue; }
          set {
            component_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "component" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasComponent {
          get { return component_ != null; }
        }
        /// <summary>Clears the value of the "component" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearComponent() {
          component_ = null;
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 2;
        private readonly static uint CountDefaultValue = 0;

        private uint count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Count {
          get { if ((_hasBits0 & 1) != 0) { return count_; } else { return CountDefaultValue; } }
          set {
            _hasBits0 |= 1;
            count_ = value;
          }
        }
        /// <summary>Gets whether the "count" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCount {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "count" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCount() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ComponentData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ComponentData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Component != other.Component) return false;
          if (Count != other.Count) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasComponent) hash ^= Component.GetHashCode();
          if (HasCount) hash ^= Count.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasComponent) {
            output.WriteRawTag(10);
            output.WriteString(Component);
          }
          if (HasCount) {
            output.WriteRawTag(16);
            output.WriteUInt32(Count);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasComponent) {
            output.WriteRawTag(10);
            output.WriteString(Component);
          }
          if (HasCount) {
            output.WriteRawTag(16);
            output.WriteUInt32(Count);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasComponent) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Component);
          }
          if (HasCount) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ComponentData other) {
          if (other == null) {
            return;
          }
          if (other.HasComponent) {
            Component = other.Component;
          }
          if (other.HasCount) {
            Count = other.Count;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Component = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Component = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ActionData : pb::IMessage<ActionData>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ActionData> _parser = new pb::MessageParser<ActionData>(() => new ActionData());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ActionData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CClientMetrics_ReportReactUsage_Notification.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ActionData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ActionData(ActionData other) : this() {
          _hasBits0 = other._hasBits0;
          action_ = other.action_;
          count_ = other.count_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ActionData Clone() {
          return new ActionData(this);
        }

        /// <summary>Field number for the "action" field.</summary>
        public const int ActionFieldNumber = 1;
        private readonly static string ActionDefaultValue = "";

        private string action_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Action {
          get { return action_ ?? ActionDefaultValue; }
          set {
            action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "action" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAction {
          get { return action_ != null; }
        }
        /// <summary>Clears the value of the "action" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAction() {
          action_ = null;
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 2;
        private readonly static uint CountDefaultValue = 0;

        private uint count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Count {
          get { if ((_hasBits0 & 1) != 0) { return count_; } else { return CountDefaultValue; } }
          set {
            _hasBits0 |= 1;
            count_ = value;
          }
        }
        /// <summary>Gets whether the "count" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCount {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "count" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCount() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ActionData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ActionData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Action != other.Action) return false;
          if (Count != other.Count) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAction) hash ^= Action.GetHashCode();
          if (HasCount) hash ^= Count.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAction) {
            output.WriteRawTag(10);
            output.WriteString(Action);
          }
          if (HasCount) {
            output.WriteRawTag(16);
            output.WriteUInt32(Count);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAction) {
            output.WriteRawTag(10);
            output.WriteString(Action);
          }
          if (HasCount) {
            output.WriteRawTag(16);
            output.WriteUInt32(Count);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasAction) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
          }
          if (HasCount) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ActionData other) {
          if (other == null) {
            return;
          }
          if (other.HasAction) {
            Action = other.Action;
          }
          if (other.HasCount) {
            Count = other.Count;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Action = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Action = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_ReportClientError_Notification : pb::IMessage<CClientMetrics_ReportClientError_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_ReportClientError_Notification> _parser = new pb::MessageParser<CClientMetrics_ReportClientError_Notification>(() => new CClientMetrics_ReportClientError_Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_ReportClientError_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ReportClientError_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ReportClientError_Notification(CClientMetrics_ReportClientError_Notification other) : this() {
      product_ = other.product_;
      version_ = other.version_;
      errors_ = other.errors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ReportClientError_Notification Clone() {
      return new CClientMetrics_ReportClientError_Notification(this);
    }

    /// <summary>Field number for the "product" field.</summary>
    public const int ProductFieldNumber = 1;
    private readonly static string ProductDefaultValue = "";

    private string product_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Product {
      get { return product_ ?? ProductDefaultValue; }
      set {
        product_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "product" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProduct {
      get { return product_ != null; }
    }
    /// <summary>Clears the value of the "product" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProduct() {
      product_ = null;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private readonly static string VersionDefaultValue = "";

    private string version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_ ?? VersionDefaultValue; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersion {
      get { return version_ != null; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersion() {
      version_ = null;
    }

    /// <summary>Field number for the "errors" field.</summary>
    public const int ErrorsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CClientMetrics_ReportClientError_Notification.Types.Error> _repeated_errors_codec
        = pb::FieldCodec.ForMessage(26, global::OpenSteamworks.Protobuf.CClientMetrics_ReportClientError_Notification.Types.Error.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_ReportClientError_Notification.Types.Error> errors_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_ReportClientError_Notification.Types.Error>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_ReportClientError_Notification.Types.Error> Errors {
      get { return errors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_ReportClientError_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_ReportClientError_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Product != other.Product) return false;
      if (Version != other.Version) return false;
      if(!errors_.Equals(other.errors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProduct) hash ^= Product.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      hash ^= errors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProduct) {
        output.WriteRawTag(10);
        output.WriteString(Product);
      }
      if (HasVersion) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      errors_.WriteTo(output, _repeated_errors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProduct) {
        output.WriteRawTag(10);
        output.WriteString(Product);
      }
      if (HasVersion) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      errors_.WriteTo(ref output, _repeated_errors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProduct) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Product);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      size += errors_.CalculateSize(_repeated_errors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_ReportClientError_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasProduct) {
        Product = other.Product;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      errors_.Add(other.errors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Product = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            errors_.AddEntriesFrom(input, _repeated_errors_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Product = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            errors_.AddEntriesFrom(ref input, _repeated_errors_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CClientMetrics_ReportClientError_Notification message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Error : pb::IMessage<Error>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Error> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CClientMetrics_ReportClientError_Notification.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Error() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Error(Error other) : this() {
          _hasBits0 = other._hasBits0;
          identifier_ = other.identifier_;
          message_ = other.message_;
          count_ = other.count_;
          context_ = other.context_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Error Clone() {
          return new Error(this);
        }

        /// <summary>Field number for the "identifier" field.</summary>
        public const int IdentifierFieldNumber = 1;
        private readonly static string IdentifierDefaultValue = "";

        private string identifier_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Identifier {
          get { return identifier_ ?? IdentifierDefaultValue; }
          set {
            identifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "identifier" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIdentifier {
          get { return identifier_ != null; }
        }
        /// <summary>Clears the value of the "identifier" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIdentifier() {
          identifier_ = null;
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 2;
        private readonly static string MessageDefaultValue = "";

        private string message_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Message {
          get { return message_ ?? MessageDefaultValue; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "message" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMessage {
          get { return message_ != null; }
        }
        /// <summary>Clears the value of the "message" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMessage() {
          message_ = null;
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 3;
        private readonly static uint CountDefaultValue = 0;

        private uint count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Count {
          get { if ((_hasBits0 & 1) != 0) { return count_; } else { return CountDefaultValue; } }
          set {
            _hasBits0 |= 1;
            count_ = value;
          }
        }
        /// <summary>Gets whether the "count" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCount {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "count" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCount() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "context" field.</summary>
        public const int ContextFieldNumber = 4;
        private readonly static string ContextDefaultValue = "";

        private string context_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Context {
          get { return context_ ?? ContextDefaultValue; }
          set {
            context_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "context" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasContext {
          get { return context_ != null; }
        }
        /// <summary>Clears the value of the "context" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearContext() {
          context_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Error);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Error other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Identifier != other.Identifier) return false;
          if (Message != other.Message) return false;
          if (Count != other.Count) return false;
          if (Context != other.Context) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasIdentifier) hash ^= Identifier.GetHashCode();
          if (HasMessage) hash ^= Message.GetHashCode();
          if (HasCount) hash ^= Count.GetHashCode();
          if (HasContext) hash ^= Context.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasIdentifier) {
            output.WriteRawTag(10);
            output.WriteString(Identifier);
          }
          if (HasMessage) {
            output.WriteRawTag(18);
            output.WriteString(Message);
          }
          if (HasCount) {
            output.WriteRawTag(24);
            output.WriteUInt32(Count);
          }
          if (HasContext) {
            output.WriteRawTag(34);
            output.WriteString(Context);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasIdentifier) {
            output.WriteRawTag(10);
            output.WriteString(Identifier);
          }
          if (HasMessage) {
            output.WriteRawTag(18);
            output.WriteString(Message);
          }
          if (HasCount) {
            output.WriteRawTag(24);
            output.WriteUInt32(Count);
          }
          if (HasContext) {
            output.WriteRawTag(34);
            output.WriteString(Context);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasIdentifier) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Identifier);
          }
          if (HasMessage) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (HasCount) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
          }
          if (HasContext) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Context);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Error other) {
          if (other == null) {
            return;
          }
          if (other.HasIdentifier) {
            Identifier = other.Identifier;
          }
          if (other.HasMessage) {
            Message = other.Message;
          }
          if (other.HasCount) {
            Count = other.Count;
          }
          if (other.HasContext) {
            Context = other.Context;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Identifier = input.ReadString();
                break;
              }
              case 18: {
                Message = input.ReadString();
                break;
              }
              case 24: {
                Count = input.ReadUInt32();
                break;
              }
              case 34: {
                Context = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Identifier = input.ReadString();
                break;
              }
              case 18: {
                Message = input.ReadString();
                break;
              }
              case 24: {
                Count = input.ReadUInt32();
                break;
              }
              case 34: {
                Context = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_ClientBootstrap_Notification : pb::IMessage<CClientMetrics_ClientBootstrap_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_ClientBootstrap_Notification> _parser = new pb::MessageParser<CClientMetrics_ClientBootstrap_Notification>(() => new CClientMetrics_ClientBootstrap_Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_ClientBootstrap_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ClientBootstrap_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ClientBootstrap_Notification(CClientMetrics_ClientBootstrap_Notification other) : this() {
      summary_ = other.summary_ != null ? other.summary_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ClientBootstrap_Notification Clone() {
      return new CClientMetrics_ClientBootstrap_Notification(this);
    }

    /// <summary>Field number for the "summary" field.</summary>
    public const int SummaryFieldNumber = 1;
    private global::OpenSteamworks.Protobuf.CClientMetrics_ClientBootstrap_Summary summary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CClientMetrics_ClientBootstrap_Summary Summary {
      get { return summary_; }
      set {
        summary_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_ClientBootstrap_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_ClientBootstrap_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Summary, other.Summary)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (summary_ != null) hash ^= Summary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (summary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Summary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (summary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Summary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (summary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Summary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_ClientBootstrap_Notification other) {
      if (other == null) {
        return;
      }
      if (other.summary_ != null) {
        if (summary_ == null) {
          Summary = new global::OpenSteamworks.Protobuf.CClientMetrics_ClientBootstrap_Summary();
        }
        Summary.MergeFrom(other.Summary);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (summary_ == null) {
              Summary = new global::OpenSteamworks.Protobuf.CClientMetrics_ClientBootstrap_Summary();
            }
            input.ReadMessage(Summary);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (summary_ == null) {
              Summary = new global::OpenSteamworks.Protobuf.CClientMetrics_ClientBootstrap_Summary();
            }
            input.ReadMessage(Summary);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_DownloadRates_Notification : pb::IMessage<CClientMetrics_DownloadRates_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_DownloadRates_Notification> _parser = new pb::MessageParser<CClientMetrics_DownloadRates_Notification>(() => new CClientMetrics_DownloadRates_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_DownloadRates_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_DownloadRates_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_DownloadRates_Notification(CClientMetrics_DownloadRates_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      cellId_ = other.cellId_;
      stats_ = other.stats_.Clone();
      throttlingKbps_ = other.throttlingKbps_;
      osType_ = other.osType_;
      deviceType_ = other.deviceType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_DownloadRates_Notification Clone() {
      return new CClientMetrics_DownloadRates_Notification(this);
    }

    /// <summary>Field number for the "cell_id" field.</summary>
    public const int CellIdFieldNumber = 1;
    private readonly static uint CellIdDefaultValue = 0;

    private uint cellId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CellId {
      get { if ((_hasBits0 & 1) != 0) { return cellId_; } else { return CellIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cellId_ = value;
      }
    }
    /// <summary>Gets whether the "cell_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCellId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cell_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCellId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CClientMetrics_DownloadRates_Notification.Types.StatsInfo> _repeated_stats_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.CClientMetrics_DownloadRates_Notification.Types.StatsInfo.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_DownloadRates_Notification.Types.StatsInfo> stats_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_DownloadRates_Notification.Types.StatsInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_DownloadRates_Notification.Types.StatsInfo> Stats {
      get { return stats_; }
    }

    /// <summary>Field number for the "throttling_kbps" field.</summary>
    public const int ThrottlingKbpsFieldNumber = 3;
    private readonly static uint ThrottlingKbpsDefaultValue = 0;

    private uint throttlingKbps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ThrottlingKbps {
      get { if ((_hasBits0 & 2) != 0) { return throttlingKbps_; } else { return ThrottlingKbpsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        throttlingKbps_ = value;
      }
    }
    /// <summary>Gets whether the "throttling_kbps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThrottlingKbps {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "throttling_kbps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThrottlingKbps() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "os_type" field.</summary>
    public const int OsTypeFieldNumber = 4;
    private readonly static uint OsTypeDefaultValue = 0;

    private uint osType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OsType {
      get { if ((_hasBits0 & 4) != 0) { return osType_; } else { return OsTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        osType_ = value;
      }
    }
    /// <summary>Gets whether the "os_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOsType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "os_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOsType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "device_type" field.</summary>
    public const int DeviceTypeFieldNumber = 5;
    private readonly static uint DeviceTypeDefaultValue = 0;

    private uint deviceType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DeviceType {
      get { if ((_hasBits0 & 8) != 0) { return deviceType_; } else { return DeviceTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        deviceType_ = value;
      }
    }
    /// <summary>Gets whether the "device_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "device_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceType() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_DownloadRates_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_DownloadRates_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CellId != other.CellId) return false;
      if(!stats_.Equals(other.stats_)) return false;
      if (ThrottlingKbps != other.ThrottlingKbps) return false;
      if (OsType != other.OsType) return false;
      if (DeviceType != other.DeviceType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCellId) hash ^= CellId.GetHashCode();
      hash ^= stats_.GetHashCode();
      if (HasThrottlingKbps) hash ^= ThrottlingKbps.GetHashCode();
      if (HasOsType) hash ^= OsType.GetHashCode();
      if (HasDeviceType) hash ^= DeviceType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCellId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CellId);
      }
      stats_.WriteTo(output, _repeated_stats_codec);
      if (HasThrottlingKbps) {
        output.WriteRawTag(24);
        output.WriteUInt32(ThrottlingKbps);
      }
      if (HasOsType) {
        output.WriteRawTag(32);
        output.WriteUInt32(OsType);
      }
      if (HasDeviceType) {
        output.WriteRawTag(40);
        output.WriteUInt32(DeviceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCellId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CellId);
      }
      stats_.WriteTo(ref output, _repeated_stats_codec);
      if (HasThrottlingKbps) {
        output.WriteRawTag(24);
        output.WriteUInt32(ThrottlingKbps);
      }
      if (HasOsType) {
        output.WriteRawTag(32);
        output.WriteUInt32(OsType);
      }
      if (HasDeviceType) {
        output.WriteRawTag(40);
        output.WriteUInt32(DeviceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCellId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
      }
      size += stats_.CalculateSize(_repeated_stats_codec);
      if (HasThrottlingKbps) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ThrottlingKbps);
      }
      if (HasOsType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OsType);
      }
      if (HasDeviceType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_DownloadRates_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasCellId) {
        CellId = other.CellId;
      }
      stats_.Add(other.stats_);
      if (other.HasThrottlingKbps) {
        ThrottlingKbps = other.ThrottlingKbps;
      }
      if (other.HasOsType) {
        OsType = other.OsType;
      }
      if (other.HasDeviceType) {
        DeviceType = other.DeviceType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CellId = input.ReadUInt32();
            break;
          }
          case 18: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
          case 24: {
            ThrottlingKbps = input.ReadUInt32();
            break;
          }
          case 32: {
            OsType = input.ReadUInt32();
            break;
          }
          case 40: {
            DeviceType = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CellId = input.ReadUInt32();
            break;
          }
          case 18: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
          case 24: {
            ThrottlingKbps = input.ReadUInt32();
            break;
          }
          case 32: {
            OsType = input.ReadUInt32();
            break;
          }
          case 40: {
            DeviceType = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CClientMetrics_DownloadRates_Notification message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class StatsInfo : pb::IMessage<StatsInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<StatsInfo> _parser = new pb::MessageParser<StatsInfo>(() => new StatsInfo());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<StatsInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CClientMetrics_DownloadRates_Notification.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public StatsInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public StatsInfo(StatsInfo other) : this() {
          _hasBits0 = other._hasBits0;
          sourceType_ = other.sourceType_;
          sourceId_ = other.sourceId_;
          bytes_ = other.bytes_;
          hostName_ = other.hostName_;
          microseconds_ = other.microseconds_;
          usedIpv6_ = other.usedIpv6_;
          proxied_ = other.proxied_;
          usedHttp2_ = other.usedHttp2_;
          cacheHits_ = other.cacheHits_;
          cacheMisses_ = other.cacheMisses_;
          hitBytes_ = other.hitBytes_;
          missBytes_ = other.missBytes_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public StatsInfo Clone() {
          return new StatsInfo(this);
        }

        /// <summary>Field number for the "source_type" field.</summary>
        public const int SourceTypeFieldNumber = 1;
        private readonly static uint SourceTypeDefaultValue = 0;

        private uint sourceType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint SourceType {
          get { if ((_hasBits0 & 1) != 0) { return sourceType_; } else { return SourceTypeDefaultValue; } }
          set {
            _hasBits0 |= 1;
            sourceType_ = value;
          }
        }
        /// <summary>Gets whether the "source_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSourceType {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "source_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSourceType() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "source_id" field.</summary>
        public const int SourceIdFieldNumber = 2;
        private readonly static uint SourceIdDefaultValue = 0;

        private uint sourceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint SourceId {
          get { if ((_hasBits0 & 2) != 0) { return sourceId_; } else { return SourceIdDefaultValue; } }
          set {
            _hasBits0 |= 2;
            sourceId_ = value;
          }
        }
        /// <summary>Gets whether the "source_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSourceId {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "source_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSourceId() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "bytes" field.</summary>
        public const int BytesFieldNumber = 3;
        private readonly static ulong BytesDefaultValue = 0UL;

        private ulong bytes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Bytes {
          get { if ((_hasBits0 & 4) != 0) { return bytes_; } else { return BytesDefaultValue; } }
          set {
            _hasBits0 |= 4;
            bytes_ = value;
          }
        }
        /// <summary>Gets whether the "bytes" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBytes {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "bytes" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBytes() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "host_name" field.</summary>
        public const int HostNameFieldNumber = 4;
        private readonly static string HostNameDefaultValue = "";

        private string hostName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HostName {
          get { return hostName_ ?? HostNameDefaultValue; }
          set {
            hostName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "host_name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasHostName {
          get { return hostName_ != null; }
        }
        /// <summary>Clears the value of the "host_name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearHostName() {
          hostName_ = null;
        }

        /// <summary>Field number for the "microseconds" field.</summary>
        public const int MicrosecondsFieldNumber = 5;
        private readonly static ulong MicrosecondsDefaultValue = 0UL;

        private ulong microseconds_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Microseconds {
          get { if ((_hasBits0 & 8) != 0) { return microseconds_; } else { return MicrosecondsDefaultValue; } }
          set {
            _hasBits0 |= 8;
            microseconds_ = value;
          }
        }
        /// <summary>Gets whether the "microseconds" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMicroseconds {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "microseconds" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMicroseconds() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "used_ipv6" field.</summary>
        public const int UsedIpv6FieldNumber = 6;
        private readonly static bool UsedIpv6DefaultValue = false;

        private bool usedIpv6_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool UsedIpv6 {
          get { if ((_hasBits0 & 16) != 0) { return usedIpv6_; } else { return UsedIpv6DefaultValue; } }
          set {
            _hasBits0 |= 16;
            usedIpv6_ = value;
          }
        }
        /// <summary>Gets whether the "used_ipv6" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasUsedIpv6 {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "used_ipv6" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearUsedIpv6() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "proxied" field.</summary>
        public const int ProxiedFieldNumber = 7;
        private readonly static bool ProxiedDefaultValue = false;

        private bool proxied_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Proxied {
          get { if ((_hasBits0 & 32) != 0) { return proxied_; } else { return ProxiedDefaultValue; } }
          set {
            _hasBits0 |= 32;
            proxied_ = value;
          }
        }
        /// <summary>Gets whether the "proxied" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasProxied {
          get { return (_hasBits0 & 32) != 0; }
        }
        /// <summary>Clears the value of the "proxied" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProxied() {
          _hasBits0 &= ~32;
        }

        /// <summary>Field number for the "used_http2" field.</summary>
        public const int UsedHttp2FieldNumber = 8;
        private readonly static bool UsedHttp2DefaultValue = false;

        private bool usedHttp2_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool UsedHttp2 {
          get { if ((_hasBits0 & 64) != 0) { return usedHttp2_; } else { return UsedHttp2DefaultValue; } }
          set {
            _hasBits0 |= 64;
            usedHttp2_ = value;
          }
        }
        /// <summary>Gets whether the "used_http2" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasUsedHttp2 {
          get { return (_hasBits0 & 64) != 0; }
        }
        /// <summary>Clears the value of the "used_http2" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearUsedHttp2() {
          _hasBits0 &= ~64;
        }

        /// <summary>Field number for the "cache_hits" field.</summary>
        public const int CacheHitsFieldNumber = 9;
        private readonly static uint CacheHitsDefaultValue = 0;

        private uint cacheHits_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint CacheHits {
          get { if ((_hasBits0 & 128) != 0) { return cacheHits_; } else { return CacheHitsDefaultValue; } }
          set {
            _hasBits0 |= 128;
            cacheHits_ = value;
          }
        }
        /// <summary>Gets whether the "cache_hits" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCacheHits {
          get { return (_hasBits0 & 128) != 0; }
        }
        /// <summary>Clears the value of the "cache_hits" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCacheHits() {
          _hasBits0 &= ~128;
        }

        /// <summary>Field number for the "cache_misses" field.</summary>
        public const int CacheMissesFieldNumber = 10;
        private readonly static uint CacheMissesDefaultValue = 0;

        private uint cacheMisses_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint CacheMisses {
          get { if ((_hasBits0 & 256) != 0) { return cacheMisses_; } else { return CacheMissesDefaultValue; } }
          set {
            _hasBits0 |= 256;
            cacheMisses_ = value;
          }
        }
        /// <summary>Gets whether the "cache_misses" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCacheMisses {
          get { return (_hasBits0 & 256) != 0; }
        }
        /// <summary>Clears the value of the "cache_misses" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCacheMisses() {
          _hasBits0 &= ~256;
        }

        /// <summary>Field number for the "hit_bytes" field.</summary>
        public const int HitBytesFieldNumber = 11;
        private readonly static ulong HitBytesDefaultValue = 0UL;

        private ulong hitBytes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong HitBytes {
          get { if ((_hasBits0 & 512) != 0) { return hitBytes_; } else { return HitBytesDefaultValue; } }
          set {
            _hasBits0 |= 512;
            hitBytes_ = value;
          }
        }
        /// <summary>Gets whether the "hit_bytes" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasHitBytes {
          get { return (_hasBits0 & 512) != 0; }
        }
        /// <summary>Clears the value of the "hit_bytes" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearHitBytes() {
          _hasBits0 &= ~512;
        }

        /// <summary>Field number for the "miss_bytes" field.</summary>
        public const int MissBytesFieldNumber = 12;
        private readonly static ulong MissBytesDefaultValue = 0UL;

        private ulong missBytes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong MissBytes {
          get { if ((_hasBits0 & 1024) != 0) { return missBytes_; } else { return MissBytesDefaultValue; } }
          set {
            _hasBits0 |= 1024;
            missBytes_ = value;
          }
        }
        /// <summary>Gets whether the "miss_bytes" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMissBytes {
          get { return (_hasBits0 & 1024) != 0; }
        }
        /// <summary>Clears the value of the "miss_bytes" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMissBytes() {
          _hasBits0 &= ~1024;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as StatsInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(StatsInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SourceType != other.SourceType) return false;
          if (SourceId != other.SourceId) return false;
          if (Bytes != other.Bytes) return false;
          if (HostName != other.HostName) return false;
          if (Microseconds != other.Microseconds) return false;
          if (UsedIpv6 != other.UsedIpv6) return false;
          if (Proxied != other.Proxied) return false;
          if (UsedHttp2 != other.UsedHttp2) return false;
          if (CacheHits != other.CacheHits) return false;
          if (CacheMisses != other.CacheMisses) return false;
          if (HitBytes != other.HitBytes) return false;
          if (MissBytes != other.MissBytes) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasSourceType) hash ^= SourceType.GetHashCode();
          if (HasSourceId) hash ^= SourceId.GetHashCode();
          if (HasBytes) hash ^= Bytes.GetHashCode();
          if (HasHostName) hash ^= HostName.GetHashCode();
          if (HasMicroseconds) hash ^= Microseconds.GetHashCode();
          if (HasUsedIpv6) hash ^= UsedIpv6.GetHashCode();
          if (HasProxied) hash ^= Proxied.GetHashCode();
          if (HasUsedHttp2) hash ^= UsedHttp2.GetHashCode();
          if (HasCacheHits) hash ^= CacheHits.GetHashCode();
          if (HasCacheMisses) hash ^= CacheMisses.GetHashCode();
          if (HasHitBytes) hash ^= HitBytes.GetHashCode();
          if (HasMissBytes) hash ^= MissBytes.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasSourceType) {
            output.WriteRawTag(8);
            output.WriteUInt32(SourceType);
          }
          if (HasSourceId) {
            output.WriteRawTag(16);
            output.WriteUInt32(SourceId);
          }
          if (HasBytes) {
            output.WriteRawTag(24);
            output.WriteUInt64(Bytes);
          }
          if (HasHostName) {
            output.WriteRawTag(34);
            output.WriteString(HostName);
          }
          if (HasMicroseconds) {
            output.WriteRawTag(40);
            output.WriteUInt64(Microseconds);
          }
          if (HasUsedIpv6) {
            output.WriteRawTag(48);
            output.WriteBool(UsedIpv6);
          }
          if (HasProxied) {
            output.WriteRawTag(56);
            output.WriteBool(Proxied);
          }
          if (HasUsedHttp2) {
            output.WriteRawTag(64);
            output.WriteBool(UsedHttp2);
          }
          if (HasCacheHits) {
            output.WriteRawTag(72);
            output.WriteUInt32(CacheHits);
          }
          if (HasCacheMisses) {
            output.WriteRawTag(80);
            output.WriteUInt32(CacheMisses);
          }
          if (HasHitBytes) {
            output.WriteRawTag(88);
            output.WriteUInt64(HitBytes);
          }
          if (HasMissBytes) {
            output.WriteRawTag(96);
            output.WriteUInt64(MissBytes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasSourceType) {
            output.WriteRawTag(8);
            output.WriteUInt32(SourceType);
          }
          if (HasSourceId) {
            output.WriteRawTag(16);
            output.WriteUInt32(SourceId);
          }
          if (HasBytes) {
            output.WriteRawTag(24);
            output.WriteUInt64(Bytes);
          }
          if (HasHostName) {
            output.WriteRawTag(34);
            output.WriteString(HostName);
          }
          if (HasMicroseconds) {
            output.WriteRawTag(40);
            output.WriteUInt64(Microseconds);
          }
          if (HasUsedIpv6) {
            output.WriteRawTag(48);
            output.WriteBool(UsedIpv6);
          }
          if (HasProxied) {
            output.WriteRawTag(56);
            output.WriteBool(Proxied);
          }
          if (HasUsedHttp2) {
            output.WriteRawTag(64);
            output.WriteBool(UsedHttp2);
          }
          if (HasCacheHits) {
            output.WriteRawTag(72);
            output.WriteUInt32(CacheHits);
          }
          if (HasCacheMisses) {
            output.WriteRawTag(80);
            output.WriteUInt32(CacheMisses);
          }
          if (HasHitBytes) {
            output.WriteRawTag(88);
            output.WriteUInt64(HitBytes);
          }
          if (HasMissBytes) {
            output.WriteRawTag(96);
            output.WriteUInt64(MissBytes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasSourceType) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SourceType);
          }
          if (HasSourceId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SourceId);
          }
          if (HasBytes) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Bytes);
          }
          if (HasHostName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HostName);
          }
          if (HasMicroseconds) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Microseconds);
          }
          if (HasUsedIpv6) {
            size += 1 + 1;
          }
          if (HasProxied) {
            size += 1 + 1;
          }
          if (HasUsedHttp2) {
            size += 1 + 1;
          }
          if (HasCacheHits) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CacheHits);
          }
          if (HasCacheMisses) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CacheMisses);
          }
          if (HasHitBytes) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(HitBytes);
          }
          if (HasMissBytes) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MissBytes);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(StatsInfo other) {
          if (other == null) {
            return;
          }
          if (other.HasSourceType) {
            SourceType = other.SourceType;
          }
          if (other.HasSourceId) {
            SourceId = other.SourceId;
          }
          if (other.HasBytes) {
            Bytes = other.Bytes;
          }
          if (other.HasHostName) {
            HostName = other.HostName;
          }
          if (other.HasMicroseconds) {
            Microseconds = other.Microseconds;
          }
          if (other.HasUsedIpv6) {
            UsedIpv6 = other.UsedIpv6;
          }
          if (other.HasProxied) {
            Proxied = other.Proxied;
          }
          if (other.HasUsedHttp2) {
            UsedHttp2 = other.UsedHttp2;
          }
          if (other.HasCacheHits) {
            CacheHits = other.CacheHits;
          }
          if (other.HasCacheMisses) {
            CacheMisses = other.CacheMisses;
          }
          if (other.HasHitBytes) {
            HitBytes = other.HitBytes;
          }
          if (other.HasMissBytes) {
            MissBytes = other.MissBytes;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SourceType = input.ReadUInt32();
                break;
              }
              case 16: {
                SourceId = input.ReadUInt32();
                break;
              }
              case 24: {
                Bytes = input.ReadUInt64();
                break;
              }
              case 34: {
                HostName = input.ReadString();
                break;
              }
              case 40: {
                Microseconds = input.ReadUInt64();
                break;
              }
              case 48: {
                UsedIpv6 = input.ReadBool();
                break;
              }
              case 56: {
                Proxied = input.ReadBool();
                break;
              }
              case 64: {
                UsedHttp2 = input.ReadBool();
                break;
              }
              case 72: {
                CacheHits = input.ReadUInt32();
                break;
              }
              case 80: {
                CacheMisses = input.ReadUInt32();
                break;
              }
              case 88: {
                HitBytes = input.ReadUInt64();
                break;
              }
              case 96: {
                MissBytes = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                SourceType = input.ReadUInt32();
                break;
              }
              case 16: {
                SourceId = input.ReadUInt32();
                break;
              }
              case 24: {
                Bytes = input.ReadUInt64();
                break;
              }
              case 34: {
                HostName = input.ReadString();
                break;
              }
              case 40: {
                Microseconds = input.ReadUInt64();
                break;
              }
              case 48: {
                UsedIpv6 = input.ReadBool();
                break;
              }
              case 56: {
                Proxied = input.ReadBool();
                break;
              }
              case 64: {
                UsedHttp2 = input.ReadBool();
                break;
              }
              case 72: {
                CacheHits = input.ReadUInt32();
                break;
              }
              case 80: {
                CacheMisses = input.ReadUInt32();
                break;
              }
              case 88: {
                HitBytes = input.ReadUInt64();
                break;
              }
              case 96: {
                MissBytes = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_ContentValidation_Notification : pb::IMessage<CClientMetrics_ContentValidation_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_ContentValidation_Notification> _parser = new pb::MessageParser<CClientMetrics_ContentValidation_Notification>(() => new CClientMetrics_ContentValidation_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_ContentValidation_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ContentValidation_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ContentValidation_Notification(CClientMetrics_ContentValidation_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      validationResult_ = other.validationResult_;
      appId_ = other.appId_;
      stagedFiles_ = other.stagedFiles_;
      userInitiated_ = other.userInitiated_;
      earlyOut_ = other.earlyOut_;
      chunksScanned_ = other.chunksScanned_;
      chunksCorrupt_ = other.chunksCorrupt_;
      bytesScanned_ = other.bytesScanned_;
      chunbytesCorrupt_ = other.chunbytesCorrupt_;
      totalFileSizeCorrupt_ = other.totalFileSizeCorrupt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ContentValidation_Notification Clone() {
      return new CClientMetrics_ContentValidation_Notification(this);
    }

    /// <summary>Field number for the "validation_result" field.</summary>
    public const int ValidationResultFieldNumber = 1;
    private readonly static int ValidationResultDefaultValue = 0;

    private int validationResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ValidationResult {
      get { if ((_hasBits0 & 1) != 0) { return validationResult_; } else { return ValidationResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        validationResult_ = value;
      }
    }
    /// <summary>Gets whether the "validation_result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValidationResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "validation_result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValidationResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 2;
    private readonly static uint AppIdDefaultValue = 0;

    private uint appId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AppId {
      get { if ((_hasBits0 & 2) != 0) { return appId_; } else { return AppIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        appId_ = value;
      }
    }
    /// <summary>Gets whether the "app_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "app_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "staged_files" field.</summary>
    public const int StagedFilesFieldNumber = 3;
    private readonly static bool StagedFilesDefaultValue = false;

    private bool stagedFiles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool StagedFiles {
      get { if ((_hasBits0 & 4) != 0) { return stagedFiles_; } else { return StagedFilesDefaultValue; } }
      set {
        _hasBits0 |= 4;
        stagedFiles_ = value;
      }
    }
    /// <summary>Gets whether the "staged_files" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStagedFiles {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "staged_files" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStagedFiles() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "user_initiated" field.</summary>
    public const int UserInitiatedFieldNumber = 4;
    private readonly static bool UserInitiatedDefaultValue = false;

    private bool userInitiated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UserInitiated {
      get { if ((_hasBits0 & 8) != 0) { return userInitiated_; } else { return UserInitiatedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        userInitiated_ = value;
      }
    }
    /// <summary>Gets whether the "user_initiated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserInitiated {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "user_initiated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserInitiated() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "early_out" field.</summary>
    public const int EarlyOutFieldNumber = 5;
    private readonly static bool EarlyOutDefaultValue = false;

    private bool earlyOut_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EarlyOut {
      get { if ((_hasBits0 & 16) != 0) { return earlyOut_; } else { return EarlyOutDefaultValue; } }
      set {
        _hasBits0 |= 16;
        earlyOut_ = value;
      }
    }
    /// <summary>Gets whether the "early_out" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEarlyOut {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "early_out" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEarlyOut() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "chunks_scanned" field.</summary>
    public const int ChunksScannedFieldNumber = 6;
    private readonly static uint ChunksScannedDefaultValue = 0;

    private uint chunksScanned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChunksScanned {
      get { if ((_hasBits0 & 32) != 0) { return chunksScanned_; } else { return ChunksScannedDefaultValue; } }
      set {
        _hasBits0 |= 32;
        chunksScanned_ = value;
      }
    }
    /// <summary>Gets whether the "chunks_scanned" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChunksScanned {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "chunks_scanned" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChunksScanned() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "chunks_corrupt" field.</summary>
    public const int ChunksCorruptFieldNumber = 7;
    private readonly static uint ChunksCorruptDefaultValue = 0;

    private uint chunksCorrupt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChunksCorrupt {
      get { if ((_hasBits0 & 64) != 0) { return chunksCorrupt_; } else { return ChunksCorruptDefaultValue; } }
      set {
        _hasBits0 |= 64;
        chunksCorrupt_ = value;
      }
    }
    /// <summary>Gets whether the "chunks_corrupt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChunksCorrupt {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "chunks_corrupt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChunksCorrupt() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "bytes_scanned" field.</summary>
    public const int BytesScannedFieldNumber = 8;
    private readonly static ulong BytesScannedDefaultValue = 0UL;

    private ulong bytesScanned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BytesScanned {
      get { if ((_hasBits0 & 128) != 0) { return bytesScanned_; } else { return BytesScannedDefaultValue; } }
      set {
        _hasBits0 |= 128;
        bytesScanned_ = value;
      }
    }
    /// <summary>Gets whether the "bytes_scanned" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBytesScanned {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "bytes_scanned" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBytesScanned() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "chunbytes_corrupt" field.</summary>
    public const int ChunbytesCorruptFieldNumber = 9;
    private readonly static ulong ChunbytesCorruptDefaultValue = 0UL;

    private ulong chunbytesCorrupt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ChunbytesCorrupt {
      get { if ((_hasBits0 & 256) != 0) { return chunbytesCorrupt_; } else { return ChunbytesCorruptDefaultValue; } }
      set {
        _hasBits0 |= 256;
        chunbytesCorrupt_ = value;
      }
    }
    /// <summary>Gets whether the "chunbytes_corrupt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChunbytesCorrupt {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "chunbytes_corrupt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChunbytesCorrupt() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "total_file_size_corrupt" field.</summary>
    public const int TotalFileSizeCorruptFieldNumber = 10;
    private readonly static ulong TotalFileSizeCorruptDefaultValue = 0UL;

    private ulong totalFileSizeCorrupt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TotalFileSizeCorrupt {
      get { if ((_hasBits0 & 512) != 0) { return totalFileSizeCorrupt_; } else { return TotalFileSizeCorruptDefaultValue; } }
      set {
        _hasBits0 |= 512;
        totalFileSizeCorrupt_ = value;
      }
    }
    /// <summary>Gets whether the "total_file_size_corrupt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalFileSizeCorrupt {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "total_file_size_corrupt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalFileSizeCorrupt() {
      _hasBits0 &= ~512;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_ContentValidation_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_ContentValidation_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ValidationResult != other.ValidationResult) return false;
      if (AppId != other.AppId) return false;
      if (StagedFiles != other.StagedFiles) return false;
      if (UserInitiated != other.UserInitiated) return false;
      if (EarlyOut != other.EarlyOut) return false;
      if (ChunksScanned != other.ChunksScanned) return false;
      if (ChunksCorrupt != other.ChunksCorrupt) return false;
      if (BytesScanned != other.BytesScanned) return false;
      if (ChunbytesCorrupt != other.ChunbytesCorrupt) return false;
      if (TotalFileSizeCorrupt != other.TotalFileSizeCorrupt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasValidationResult) hash ^= ValidationResult.GetHashCode();
      if (HasAppId) hash ^= AppId.GetHashCode();
      if (HasStagedFiles) hash ^= StagedFiles.GetHashCode();
      if (HasUserInitiated) hash ^= UserInitiated.GetHashCode();
      if (HasEarlyOut) hash ^= EarlyOut.GetHashCode();
      if (HasChunksScanned) hash ^= ChunksScanned.GetHashCode();
      if (HasChunksCorrupt) hash ^= ChunksCorrupt.GetHashCode();
      if (HasBytesScanned) hash ^= BytesScanned.GetHashCode();
      if (HasChunbytesCorrupt) hash ^= ChunbytesCorrupt.GetHashCode();
      if (HasTotalFileSizeCorrupt) hash ^= TotalFileSizeCorrupt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasValidationResult) {
        output.WriteRawTag(8);
        output.WriteInt32(ValidationResult);
      }
      if (HasAppId) {
        output.WriteRawTag(16);
        output.WriteUInt32(AppId);
      }
      if (HasStagedFiles) {
        output.WriteRawTag(24);
        output.WriteBool(StagedFiles);
      }
      if (HasUserInitiated) {
        output.WriteRawTag(32);
        output.WriteBool(UserInitiated);
      }
      if (HasEarlyOut) {
        output.WriteRawTag(40);
        output.WriteBool(EarlyOut);
      }
      if (HasChunksScanned) {
        output.WriteRawTag(48);
        output.WriteUInt32(ChunksScanned);
      }
      if (HasChunksCorrupt) {
        output.WriteRawTag(56);
        output.WriteUInt32(ChunksCorrupt);
      }
      if (HasBytesScanned) {
        output.WriteRawTag(64);
        output.WriteUInt64(BytesScanned);
      }
      if (HasChunbytesCorrupt) {
        output.WriteRawTag(72);
        output.WriteUInt64(ChunbytesCorrupt);
      }
      if (HasTotalFileSizeCorrupt) {
        output.WriteRawTag(80);
        output.WriteUInt64(TotalFileSizeCorrupt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasValidationResult) {
        output.WriteRawTag(8);
        output.WriteInt32(ValidationResult);
      }
      if (HasAppId) {
        output.WriteRawTag(16);
        output.WriteUInt32(AppId);
      }
      if (HasStagedFiles) {
        output.WriteRawTag(24);
        output.WriteBool(StagedFiles);
      }
      if (HasUserInitiated) {
        output.WriteRawTag(32);
        output.WriteBool(UserInitiated);
      }
      if (HasEarlyOut) {
        output.WriteRawTag(40);
        output.WriteBool(EarlyOut);
      }
      if (HasChunksScanned) {
        output.WriteRawTag(48);
        output.WriteUInt32(ChunksScanned);
      }
      if (HasChunksCorrupt) {
        output.WriteRawTag(56);
        output.WriteUInt32(ChunksCorrupt);
      }
      if (HasBytesScanned) {
        output.WriteRawTag(64);
        output.WriteUInt64(BytesScanned);
      }
      if (HasChunbytesCorrupt) {
        output.WriteRawTag(72);
        output.WriteUInt64(ChunbytesCorrupt);
      }
      if (HasTotalFileSizeCorrupt) {
        output.WriteRawTag(80);
        output.WriteUInt64(TotalFileSizeCorrupt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasValidationResult) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValidationResult);
      }
      if (HasAppId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
      }
      if (HasStagedFiles) {
        size += 1 + 1;
      }
      if (HasUserInitiated) {
        size += 1 + 1;
      }
      if (HasEarlyOut) {
        size += 1 + 1;
      }
      if (HasChunksScanned) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChunksScanned);
      }
      if (HasChunksCorrupt) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChunksCorrupt);
      }
      if (HasBytesScanned) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BytesScanned);
      }
      if (HasChunbytesCorrupt) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChunbytesCorrupt);
      }
      if (HasTotalFileSizeCorrupt) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalFileSizeCorrupt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_ContentValidation_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasValidationResult) {
        ValidationResult = other.ValidationResult;
      }
      if (other.HasAppId) {
        AppId = other.AppId;
      }
      if (other.HasStagedFiles) {
        StagedFiles = other.StagedFiles;
      }
      if (other.HasUserInitiated) {
        UserInitiated = other.UserInitiated;
      }
      if (other.HasEarlyOut) {
        EarlyOut = other.EarlyOut;
      }
      if (other.HasChunksScanned) {
        ChunksScanned = other.ChunksScanned;
      }
      if (other.HasChunksCorrupt) {
        ChunksCorrupt = other.ChunksCorrupt;
      }
      if (other.HasBytesScanned) {
        BytesScanned = other.BytesScanned;
      }
      if (other.HasChunbytesCorrupt) {
        ChunbytesCorrupt = other.ChunbytesCorrupt;
      }
      if (other.HasTotalFileSizeCorrupt) {
        TotalFileSizeCorrupt = other.TotalFileSizeCorrupt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ValidationResult = input.ReadInt32();
            break;
          }
          case 16: {
            AppId = input.ReadUInt32();
            break;
          }
          case 24: {
            StagedFiles = input.ReadBool();
            break;
          }
          case 32: {
            UserInitiated = input.ReadBool();
            break;
          }
          case 40: {
            EarlyOut = input.ReadBool();
            break;
          }
          case 48: {
            ChunksScanned = input.ReadUInt32();
            break;
          }
          case 56: {
            ChunksCorrupt = input.ReadUInt32();
            break;
          }
          case 64: {
            BytesScanned = input.ReadUInt64();
            break;
          }
          case 72: {
            ChunbytesCorrupt = input.ReadUInt64();
            break;
          }
          case 80: {
            TotalFileSizeCorrupt = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ValidationResult = input.ReadInt32();
            break;
          }
          case 16: {
            AppId = input.ReadUInt32();
            break;
          }
          case 24: {
            StagedFiles = input.ReadBool();
            break;
          }
          case 32: {
            UserInitiated = input.ReadBool();
            break;
          }
          case 40: {
            EarlyOut = input.ReadBool();
            break;
          }
          case 48: {
            ChunksScanned = input.ReadUInt32();
            break;
          }
          case 56: {
            ChunksCorrupt = input.ReadUInt32();
            break;
          }
          case 64: {
            BytesScanned = input.ReadUInt64();
            break;
          }
          case 72: {
            ChunbytesCorrupt = input.ReadUInt64();
            break;
          }
          case 80: {
            TotalFileSizeCorrupt = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_CloudAppSyncStats_Notification : pb::IMessage<CClientMetrics_CloudAppSyncStats_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_CloudAppSyncStats_Notification> _parser = new pb::MessageParser<CClientMetrics_CloudAppSyncStats_Notification>(() => new CClientMetrics_CloudAppSyncStats_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_CloudAppSyncStats_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_CloudAppSyncStats_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_CloudAppSyncStats_Notification(CClientMetrics_CloudAppSyncStats_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      appId_ = other.appId_;
      platformType_ = other.platformType_;
      preload_ = other.preload_;
      blockingAppLaunch_ = other.blockingAppLaunch_;
      filesUploaded_ = other.filesUploaded_;
      filesDownloaded_ = other.filesDownloaded_;
      filesDeleted_ = other.filesDeleted_;
      bytesUploaded_ = other.bytesUploaded_;
      bytesDownloaded_ = other.bytesDownloaded_;
      microsecTotal_ = other.microsecTotal_;
      microsecInitCaches_ = other.microsecInitCaches_;
      microsecValidateState_ = other.microsecValidateState_;
      microsecAcLaunch_ = other.microsecAcLaunch_;
      microsecAcPrepUserFiles_ = other.microsecAcPrepUserFiles_;
      microsecAcExit_ = other.microsecAcExit_;
      microsecBuildSyncList_ = other.microsecBuildSyncList_;
      microsecDeleteFiles_ = other.microsecDeleteFiles_;
      microsecDownloadFiles_ = other.microsecDownloadFiles_;
      microsecUploadFiles_ = other.microsecUploadFiles_;
      hardwareType_ = other.hardwareType_;
      filesManaged_ = other.filesManaged_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_CloudAppSyncStats_Notification Clone() {
      return new CClientMetrics_CloudAppSyncStats_Notification(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private readonly static uint AppIdDefaultValue = 0;

    private uint appId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AppId {
      get { if ((_hasBits0 & 1) != 0) { return appId_; } else { return AppIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appId_ = value;
      }
    }
    /// <summary>Gets whether the "app_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "app_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "platform_type" field.</summary>
    public const int PlatformTypeFieldNumber = 2;
    private readonly static uint PlatformTypeDefaultValue = 0;

    private uint platformType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlatformType {
      get { if ((_hasBits0 & 2) != 0) { return platformType_; } else { return PlatformTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        platformType_ = value;
      }
    }
    /// <summary>Gets whether the "platform_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlatformType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "platform_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlatformType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "preload" field.</summary>
    public const int PreloadFieldNumber = 3;
    private readonly static bool PreloadDefaultValue = false;

    private bool preload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Preload {
      get { if ((_hasBits0 & 4) != 0) { return preload_; } else { return PreloadDefaultValue; } }
      set {
        _hasBits0 |= 4;
        preload_ = value;
      }
    }
    /// <summary>Gets whether the "preload" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPreload {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "preload" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPreload() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "blocking_app_launch" field.</summary>
    public const int BlockingAppLaunchFieldNumber = 4;
    private readonly static bool BlockingAppLaunchDefaultValue = false;

    private bool blockingAppLaunch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BlockingAppLaunch {
      get { if ((_hasBits0 & 8) != 0) { return blockingAppLaunch_; } else { return BlockingAppLaunchDefaultValue; } }
      set {
        _hasBits0 |= 8;
        blockingAppLaunch_ = value;
      }
    }
    /// <summary>Gets whether the "blocking_app_launch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlockingAppLaunch {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "blocking_app_launch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlockingAppLaunch() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "files_uploaded" field.</summary>
    public const int FilesUploadedFieldNumber = 5;
    private readonly static uint FilesUploadedDefaultValue = 0;

    private uint filesUploaded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FilesUploaded {
      get { if ((_hasBits0 & 16) != 0) { return filesUploaded_; } else { return FilesUploadedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        filesUploaded_ = value;
      }
    }
    /// <summary>Gets whether the "files_uploaded" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilesUploaded {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "files_uploaded" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilesUploaded() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "files_downloaded" field.</summary>
    public const int FilesDownloadedFieldNumber = 6;
    private readonly static uint FilesDownloadedDefaultValue = 0;

    private uint filesDownloaded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FilesDownloaded {
      get { if ((_hasBits0 & 32) != 0) { return filesDownloaded_; } else { return FilesDownloadedDefaultValue; } }
      set {
        _hasBits0 |= 32;
        filesDownloaded_ = value;
      }
    }
    /// <summary>Gets whether the "files_downloaded" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilesDownloaded {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "files_downloaded" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilesDownloaded() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "files_deleted" field.</summary>
    public const int FilesDeletedFieldNumber = 7;
    private readonly static uint FilesDeletedDefaultValue = 0;

    private uint filesDeleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FilesDeleted {
      get { if ((_hasBits0 & 64) != 0) { return filesDeleted_; } else { return FilesDeletedDefaultValue; } }
      set {
        _hasBits0 |= 64;
        filesDeleted_ = value;
      }
    }
    /// <summary>Gets whether the "files_deleted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilesDeleted {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "files_deleted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilesDeleted() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "bytes_uploaded" field.</summary>
    public const int BytesUploadedFieldNumber = 8;
    private readonly static ulong BytesUploadedDefaultValue = 0UL;

    private ulong bytesUploaded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BytesUploaded {
      get { if ((_hasBits0 & 128) != 0) { return bytesUploaded_; } else { return BytesUploadedDefaultValue; } }
      set {
        _hasBits0 |= 128;
        bytesUploaded_ = value;
      }
    }
    /// <summary>Gets whether the "bytes_uploaded" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBytesUploaded {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "bytes_uploaded" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBytesUploaded() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "bytes_downloaded" field.</summary>
    public const int BytesDownloadedFieldNumber = 9;
    private readonly static ulong BytesDownloadedDefaultValue = 0UL;

    private ulong bytesDownloaded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BytesDownloaded {
      get { if ((_hasBits0 & 256) != 0) { return bytesDownloaded_; } else { return BytesDownloadedDefaultValue; } }
      set {
        _hasBits0 |= 256;
        bytesDownloaded_ = value;
      }
    }
    /// <summary>Gets whether the "bytes_downloaded" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBytesDownloaded {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "bytes_downloaded" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBytesDownloaded() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "microsec_total" field.</summary>
    public const int MicrosecTotalFieldNumber = 10;
    private readonly static ulong MicrosecTotalDefaultValue = 0UL;

    private ulong microsecTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MicrosecTotal {
      get { if ((_hasBits0 & 512) != 0) { return microsecTotal_; } else { return MicrosecTotalDefaultValue; } }
      set {
        _hasBits0 |= 512;
        microsecTotal_ = value;
      }
    }
    /// <summary>Gets whether the "microsec_total" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicrosecTotal {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "microsec_total" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicrosecTotal() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "microsec_init_caches" field.</summary>
    public const int MicrosecInitCachesFieldNumber = 11;
    private readonly static ulong MicrosecInitCachesDefaultValue = 0UL;

    private ulong microsecInitCaches_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MicrosecInitCaches {
      get { if ((_hasBits0 & 1024) != 0) { return microsecInitCaches_; } else { return MicrosecInitCachesDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        microsecInitCaches_ = value;
      }
    }
    /// <summary>Gets whether the "microsec_init_caches" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicrosecInitCaches {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "microsec_init_caches" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicrosecInitCaches() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "microsec_validate_state" field.</summary>
    public const int MicrosecValidateStateFieldNumber = 12;
    private readonly static ulong MicrosecValidateStateDefaultValue = 0UL;

    private ulong microsecValidateState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MicrosecValidateState {
      get { if ((_hasBits0 & 2048) != 0) { return microsecValidateState_; } else { return MicrosecValidateStateDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        microsecValidateState_ = value;
      }
    }
    /// <summary>Gets whether the "microsec_validate_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicrosecValidateState {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "microsec_validate_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicrosecValidateState() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "microsec_ac_launch" field.</summary>
    public const int MicrosecAcLaunchFieldNumber = 13;
    private readonly static ulong MicrosecAcLaunchDefaultValue = 0UL;

    private ulong microsecAcLaunch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MicrosecAcLaunch {
      get { if ((_hasBits0 & 4096) != 0) { return microsecAcLaunch_; } else { return MicrosecAcLaunchDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        microsecAcLaunch_ = value;
      }
    }
    /// <summary>Gets whether the "microsec_ac_launch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicrosecAcLaunch {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "microsec_ac_launch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicrosecAcLaunch() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "microsec_ac_prep_user_files" field.</summary>
    public const int MicrosecAcPrepUserFilesFieldNumber = 14;
    private readonly static ulong MicrosecAcPrepUserFilesDefaultValue = 0UL;

    private ulong microsecAcPrepUserFiles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MicrosecAcPrepUserFiles {
      get { if ((_hasBits0 & 8192) != 0) { return microsecAcPrepUserFiles_; } else { return MicrosecAcPrepUserFilesDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        microsecAcPrepUserFiles_ = value;
      }
    }
    /// <summary>Gets whether the "microsec_ac_prep_user_files" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicrosecAcPrepUserFiles {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "microsec_ac_prep_user_files" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicrosecAcPrepUserFiles() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "microsec_ac_exit" field.</summary>
    public const int MicrosecAcExitFieldNumber = 15;
    private readonly static ulong MicrosecAcExitDefaultValue = 0UL;

    private ulong microsecAcExit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MicrosecAcExit {
      get { if ((_hasBits0 & 16384) != 0) { return microsecAcExit_; } else { return MicrosecAcExitDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        microsecAcExit_ = value;
      }
    }
    /// <summary>Gets whether the "microsec_ac_exit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicrosecAcExit {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "microsec_ac_exit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicrosecAcExit() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "microsec_build_sync_list" field.</summary>
    public const int MicrosecBuildSyncListFieldNumber = 16;
    private readonly static ulong MicrosecBuildSyncListDefaultValue = 0UL;

    private ulong microsecBuildSyncList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MicrosecBuildSyncList {
      get { if ((_hasBits0 & 32768) != 0) { return microsecBuildSyncList_; } else { return MicrosecBuildSyncListDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        microsecBuildSyncList_ = value;
      }
    }
    /// <summary>Gets whether the "microsec_build_sync_list" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicrosecBuildSyncList {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "microsec_build_sync_list" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicrosecBuildSyncList() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "microsec_delete_files" field.</summary>
    public const int MicrosecDeleteFilesFieldNumber = 17;
    private readonly static ulong MicrosecDeleteFilesDefaultValue = 0UL;

    private ulong microsecDeleteFiles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MicrosecDeleteFiles {
      get { if ((_hasBits0 & 65536) != 0) { return microsecDeleteFiles_; } else { return MicrosecDeleteFilesDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        microsecDeleteFiles_ = value;
      }
    }
    /// <summary>Gets whether the "microsec_delete_files" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicrosecDeleteFiles {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "microsec_delete_files" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicrosecDeleteFiles() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "microsec_download_files" field.</summary>
    public const int MicrosecDownloadFilesFieldNumber = 18;
    private readonly static ulong MicrosecDownloadFilesDefaultValue = 0UL;

    private ulong microsecDownloadFiles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MicrosecDownloadFiles {
      get { if ((_hasBits0 & 131072) != 0) { return microsecDownloadFiles_; } else { return MicrosecDownloadFilesDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        microsecDownloadFiles_ = value;
      }
    }
    /// <summary>Gets whether the "microsec_download_files" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicrosecDownloadFiles {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "microsec_download_files" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicrosecDownloadFiles() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "microsec_upload_files" field.</summary>
    public const int MicrosecUploadFilesFieldNumber = 19;
    private readonly static ulong MicrosecUploadFilesDefaultValue = 0UL;

    private ulong microsecUploadFiles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MicrosecUploadFiles {
      get { if ((_hasBits0 & 262144) != 0) { return microsecUploadFiles_; } else { return MicrosecUploadFilesDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        microsecUploadFiles_ = value;
      }
    }
    /// <summary>Gets whether the "microsec_upload_files" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicrosecUploadFiles {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "microsec_upload_files" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicrosecUploadFiles() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "hardware_type" field.</summary>
    public const int HardwareTypeFieldNumber = 20;
    private readonly static uint HardwareTypeDefaultValue = 0;

    private uint hardwareType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HardwareType {
      get { if ((_hasBits0 & 524288) != 0) { return hardwareType_; } else { return HardwareTypeDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        hardwareType_ = value;
      }
    }
    /// <summary>Gets whether the "hardware_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHardwareType {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "hardware_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHardwareType() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "files_managed" field.</summary>
    public const int FilesManagedFieldNumber = 21;
    private readonly static uint FilesManagedDefaultValue = 0;

    private uint filesManaged_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FilesManaged {
      get { if ((_hasBits0 & 1048576) != 0) { return filesManaged_; } else { return FilesManagedDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        filesManaged_ = value;
      }
    }
    /// <summary>Gets whether the "files_managed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilesManaged {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "files_managed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilesManaged() {
      _hasBits0 &= ~1048576;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_CloudAppSyncStats_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_CloudAppSyncStats_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (PlatformType != other.PlatformType) return false;
      if (Preload != other.Preload) return false;
      if (BlockingAppLaunch != other.BlockingAppLaunch) return false;
      if (FilesUploaded != other.FilesUploaded) return false;
      if (FilesDownloaded != other.FilesDownloaded) return false;
      if (FilesDeleted != other.FilesDeleted) return false;
      if (BytesUploaded != other.BytesUploaded) return false;
      if (BytesDownloaded != other.BytesDownloaded) return false;
      if (MicrosecTotal != other.MicrosecTotal) return false;
      if (MicrosecInitCaches != other.MicrosecInitCaches) return false;
      if (MicrosecValidateState != other.MicrosecValidateState) return false;
      if (MicrosecAcLaunch != other.MicrosecAcLaunch) return false;
      if (MicrosecAcPrepUserFiles != other.MicrosecAcPrepUserFiles) return false;
      if (MicrosecAcExit != other.MicrosecAcExit) return false;
      if (MicrosecBuildSyncList != other.MicrosecBuildSyncList) return false;
      if (MicrosecDeleteFiles != other.MicrosecDeleteFiles) return false;
      if (MicrosecDownloadFiles != other.MicrosecDownloadFiles) return false;
      if (MicrosecUploadFiles != other.MicrosecUploadFiles) return false;
      if (HardwareType != other.HardwareType) return false;
      if (FilesManaged != other.FilesManaged) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppId) hash ^= AppId.GetHashCode();
      if (HasPlatformType) hash ^= PlatformType.GetHashCode();
      if (HasPreload) hash ^= Preload.GetHashCode();
      if (HasBlockingAppLaunch) hash ^= BlockingAppLaunch.GetHashCode();
      if (HasFilesUploaded) hash ^= FilesUploaded.GetHashCode();
      if (HasFilesDownloaded) hash ^= FilesDownloaded.GetHashCode();
      if (HasFilesDeleted) hash ^= FilesDeleted.GetHashCode();
      if (HasBytesUploaded) hash ^= BytesUploaded.GetHashCode();
      if (HasBytesDownloaded) hash ^= BytesDownloaded.GetHashCode();
      if (HasMicrosecTotal) hash ^= MicrosecTotal.GetHashCode();
      if (HasMicrosecInitCaches) hash ^= MicrosecInitCaches.GetHashCode();
      if (HasMicrosecValidateState) hash ^= MicrosecValidateState.GetHashCode();
      if (HasMicrosecAcLaunch) hash ^= MicrosecAcLaunch.GetHashCode();
      if (HasMicrosecAcPrepUserFiles) hash ^= MicrosecAcPrepUserFiles.GetHashCode();
      if (HasMicrosecAcExit) hash ^= MicrosecAcExit.GetHashCode();
      if (HasMicrosecBuildSyncList) hash ^= MicrosecBuildSyncList.GetHashCode();
      if (HasMicrosecDeleteFiles) hash ^= MicrosecDeleteFiles.GetHashCode();
      if (HasMicrosecDownloadFiles) hash ^= MicrosecDownloadFiles.GetHashCode();
      if (HasMicrosecUploadFiles) hash ^= MicrosecUploadFiles.GetHashCode();
      if (HasHardwareType) hash ^= HardwareType.GetHashCode();
      if (HasFilesManaged) hash ^= FilesManaged.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AppId);
      }
      if (HasPlatformType) {
        output.WriteRawTag(16);
        output.WriteUInt32(PlatformType);
      }
      if (HasPreload) {
        output.WriteRawTag(24);
        output.WriteBool(Preload);
      }
      if (HasBlockingAppLaunch) {
        output.WriteRawTag(32);
        output.WriteBool(BlockingAppLaunch);
      }
      if (HasFilesUploaded) {
        output.WriteRawTag(40);
        output.WriteUInt32(FilesUploaded);
      }
      if (HasFilesDownloaded) {
        output.WriteRawTag(48);
        output.WriteUInt32(FilesDownloaded);
      }
      if (HasFilesDeleted) {
        output.WriteRawTag(56);
        output.WriteUInt32(FilesDeleted);
      }
      if (HasBytesUploaded) {
        output.WriteRawTag(64);
        output.WriteUInt64(BytesUploaded);
      }
      if (HasBytesDownloaded) {
        output.WriteRawTag(72);
        output.WriteUInt64(BytesDownloaded);
      }
      if (HasMicrosecTotal) {
        output.WriteRawTag(80);
        output.WriteUInt64(MicrosecTotal);
      }
      if (HasMicrosecInitCaches) {
        output.WriteRawTag(88);
        output.WriteUInt64(MicrosecInitCaches);
      }
      if (HasMicrosecValidateState) {
        output.WriteRawTag(96);
        output.WriteUInt64(MicrosecValidateState);
      }
      if (HasMicrosecAcLaunch) {
        output.WriteRawTag(104);
        output.WriteUInt64(MicrosecAcLaunch);
      }
      if (HasMicrosecAcPrepUserFiles) {
        output.WriteRawTag(112);
        output.WriteUInt64(MicrosecAcPrepUserFiles);
      }
      if (HasMicrosecAcExit) {
        output.WriteRawTag(120);
        output.WriteUInt64(MicrosecAcExit);
      }
      if (HasMicrosecBuildSyncList) {
        output.WriteRawTag(128, 1);
        output.WriteUInt64(MicrosecBuildSyncList);
      }
      if (HasMicrosecDeleteFiles) {
        output.WriteRawTag(136, 1);
        output.WriteUInt64(MicrosecDeleteFiles);
      }
      if (HasMicrosecDownloadFiles) {
        output.WriteRawTag(144, 1);
        output.WriteUInt64(MicrosecDownloadFiles);
      }
      if (HasMicrosecUploadFiles) {
        output.WriteRawTag(152, 1);
        output.WriteUInt64(MicrosecUploadFiles);
      }
      if (HasHardwareType) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(HardwareType);
      }
      if (HasFilesManaged) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(FilesManaged);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AppId);
      }
      if (HasPlatformType) {
        output.WriteRawTag(16);
        output.WriteUInt32(PlatformType);
      }
      if (HasPreload) {
        output.WriteRawTag(24);
        output.WriteBool(Preload);
      }
      if (HasBlockingAppLaunch) {
        output.WriteRawTag(32);
        output.WriteBool(BlockingAppLaunch);
      }
      if (HasFilesUploaded) {
        output.WriteRawTag(40);
        output.WriteUInt32(FilesUploaded);
      }
      if (HasFilesDownloaded) {
        output.WriteRawTag(48);
        output.WriteUInt32(FilesDownloaded);
      }
      if (HasFilesDeleted) {
        output.WriteRawTag(56);
        output.WriteUInt32(FilesDeleted);
      }
      if (HasBytesUploaded) {
        output.WriteRawTag(64);
        output.WriteUInt64(BytesUploaded);
      }
      if (HasBytesDownloaded) {
        output.WriteRawTag(72);
        output.WriteUInt64(BytesDownloaded);
      }
      if (HasMicrosecTotal) {
        output.WriteRawTag(80);
        output.WriteUInt64(MicrosecTotal);
      }
      if (HasMicrosecInitCaches) {
        output.WriteRawTag(88);
        output.WriteUInt64(MicrosecInitCaches);
      }
      if (HasMicrosecValidateState) {
        output.WriteRawTag(96);
        output.WriteUInt64(MicrosecValidateState);
      }
      if (HasMicrosecAcLaunch) {
        output.WriteRawTag(104);
        output.WriteUInt64(MicrosecAcLaunch);
      }
      if (HasMicrosecAcPrepUserFiles) {
        output.WriteRawTag(112);
        output.WriteUInt64(MicrosecAcPrepUserFiles);
      }
      if (HasMicrosecAcExit) {
        output.WriteRawTag(120);
        output.WriteUInt64(MicrosecAcExit);
      }
      if (HasMicrosecBuildSyncList) {
        output.WriteRawTag(128, 1);
        output.WriteUInt64(MicrosecBuildSyncList);
      }
      if (HasMicrosecDeleteFiles) {
        output.WriteRawTag(136, 1);
        output.WriteUInt64(MicrosecDeleteFiles);
      }
      if (HasMicrosecDownloadFiles) {
        output.WriteRawTag(144, 1);
        output.WriteUInt64(MicrosecDownloadFiles);
      }
      if (HasMicrosecUploadFiles) {
        output.WriteRawTag(152, 1);
        output.WriteUInt64(MicrosecUploadFiles);
      }
      if (HasHardwareType) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(HardwareType);
      }
      if (HasFilesManaged) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(FilesManaged);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
      }
      if (HasPlatformType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlatformType);
      }
      if (HasPreload) {
        size += 1 + 1;
      }
      if (HasBlockingAppLaunch) {
        size += 1 + 1;
      }
      if (HasFilesUploaded) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FilesUploaded);
      }
      if (HasFilesDownloaded) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FilesDownloaded);
      }
      if (HasFilesDeleted) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FilesDeleted);
      }
      if (HasBytesUploaded) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BytesUploaded);
      }
      if (HasBytesDownloaded) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BytesDownloaded);
      }
      if (HasMicrosecTotal) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MicrosecTotal);
      }
      if (HasMicrosecInitCaches) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MicrosecInitCaches);
      }
      if (HasMicrosecValidateState) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MicrosecValidateState);
      }
      if (HasMicrosecAcLaunch) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MicrosecAcLaunch);
      }
      if (HasMicrosecAcPrepUserFiles) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MicrosecAcPrepUserFiles);
      }
      if (HasMicrosecAcExit) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MicrosecAcExit);
      }
      if (HasMicrosecBuildSyncList) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(MicrosecBuildSyncList);
      }
      if (HasMicrosecDeleteFiles) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(MicrosecDeleteFiles);
      }
      if (HasMicrosecDownloadFiles) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(MicrosecDownloadFiles);
      }
      if (HasMicrosecUploadFiles) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(MicrosecUploadFiles);
      }
      if (HasHardwareType) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(HardwareType);
      }
      if (HasFilesManaged) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FilesManaged);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_CloudAppSyncStats_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasAppId) {
        AppId = other.AppId;
      }
      if (other.HasPlatformType) {
        PlatformType = other.PlatformType;
      }
      if (other.HasPreload) {
        Preload = other.Preload;
      }
      if (other.HasBlockingAppLaunch) {
        BlockingAppLaunch = other.BlockingAppLaunch;
      }
      if (other.HasFilesUploaded) {
        FilesUploaded = other.FilesUploaded;
      }
      if (other.HasFilesDownloaded) {
        FilesDownloaded = other.FilesDownloaded;
      }
      if (other.HasFilesDeleted) {
        FilesDeleted = other.FilesDeleted;
      }
      if (other.HasBytesUploaded) {
        BytesUploaded = other.BytesUploaded;
      }
      if (other.HasBytesDownloaded) {
        BytesDownloaded = other.BytesDownloaded;
      }
      if (other.HasMicrosecTotal) {
        MicrosecTotal = other.MicrosecTotal;
      }
      if (other.HasMicrosecInitCaches) {
        MicrosecInitCaches = other.MicrosecInitCaches;
      }
      if (other.HasMicrosecValidateState) {
        MicrosecValidateState = other.MicrosecValidateState;
      }
      if (other.HasMicrosecAcLaunch) {
        MicrosecAcLaunch = other.MicrosecAcLaunch;
      }
      if (other.HasMicrosecAcPrepUserFiles) {
        MicrosecAcPrepUserFiles = other.MicrosecAcPrepUserFiles;
      }
      if (other.HasMicrosecAcExit) {
        MicrosecAcExit = other.MicrosecAcExit;
      }
      if (other.HasMicrosecBuildSyncList) {
        MicrosecBuildSyncList = other.MicrosecBuildSyncList;
      }
      if (other.HasMicrosecDeleteFiles) {
        MicrosecDeleteFiles = other.MicrosecDeleteFiles;
      }
      if (other.HasMicrosecDownloadFiles) {
        MicrosecDownloadFiles = other.MicrosecDownloadFiles;
      }
      if (other.HasMicrosecUploadFiles) {
        MicrosecUploadFiles = other.MicrosecUploadFiles;
      }
      if (other.HasHardwareType) {
        HardwareType = other.HardwareType;
      }
      if (other.HasFilesManaged) {
        FilesManaged = other.FilesManaged;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AppId = input.ReadUInt32();
            break;
          }
          case 16: {
            PlatformType = input.ReadUInt32();
            break;
          }
          case 24: {
            Preload = input.ReadBool();
            break;
          }
          case 32: {
            BlockingAppLaunch = input.ReadBool();
            break;
          }
          case 40: {
            FilesUploaded = input.ReadUInt32();
            break;
          }
          case 48: {
            FilesDownloaded = input.ReadUInt32();
            break;
          }
          case 56: {
            FilesDeleted = input.ReadUInt32();
            break;
          }
          case 64: {
            BytesUploaded = input.ReadUInt64();
            break;
          }
          case 72: {
            BytesDownloaded = input.ReadUInt64();
            break;
          }
          case 80: {
            MicrosecTotal = input.ReadUInt64();
            break;
          }
          case 88: {
            MicrosecInitCaches = input.ReadUInt64();
            break;
          }
          case 96: {
            MicrosecValidateState = input.ReadUInt64();
            break;
          }
          case 104: {
            MicrosecAcLaunch = input.ReadUInt64();
            break;
          }
          case 112: {
            MicrosecAcPrepUserFiles = input.ReadUInt64();
            break;
          }
          case 120: {
            MicrosecAcExit = input.ReadUInt64();
            break;
          }
          case 128: {
            MicrosecBuildSyncList = input.ReadUInt64();
            break;
          }
          case 136: {
            MicrosecDeleteFiles = input.ReadUInt64();
            break;
          }
          case 144: {
            MicrosecDownloadFiles = input.ReadUInt64();
            break;
          }
          case 152: {
            MicrosecUploadFiles = input.ReadUInt64();
            break;
          }
          case 160: {
            HardwareType = input.ReadUInt32();
            break;
          }
          case 168: {
            FilesManaged = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AppId = input.ReadUInt32();
            break;
          }
          case 16: {
            PlatformType = input.ReadUInt32();
            break;
          }
          case 24: {
            Preload = input.ReadBool();
            break;
          }
          case 32: {
            BlockingAppLaunch = input.ReadBool();
            break;
          }
          case 40: {
            FilesUploaded = input.ReadUInt32();
            break;
          }
          case 48: {
            FilesDownloaded = input.ReadUInt32();
            break;
          }
          case 56: {
            FilesDeleted = input.ReadUInt32();
            break;
          }
          case 64: {
            BytesUploaded = input.ReadUInt64();
            break;
          }
          case 72: {
            BytesDownloaded = input.ReadUInt64();
            break;
          }
          case 80: {
            MicrosecTotal = input.ReadUInt64();
            break;
          }
          case 88: {
            MicrosecInitCaches = input.ReadUInt64();
            break;
          }
          case 96: {
            MicrosecValidateState = input.ReadUInt64();
            break;
          }
          case 104: {
            MicrosecAcLaunch = input.ReadUInt64();
            break;
          }
          case 112: {
            MicrosecAcPrepUserFiles = input.ReadUInt64();
            break;
          }
          case 120: {
            MicrosecAcExit = input.ReadUInt64();
            break;
          }
          case 128: {
            MicrosecBuildSyncList = input.ReadUInt64();
            break;
          }
          case 136: {
            MicrosecDeleteFiles = input.ReadUInt64();
            break;
          }
          case 144: {
            MicrosecDownloadFiles = input.ReadUInt64();
            break;
          }
          case 152: {
            MicrosecUploadFiles = input.ReadUInt64();
            break;
          }
          case 160: {
            HardwareType = input.ReadUInt32();
            break;
          }
          case 168: {
            FilesManaged = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_ContentDownloadResponse_Counts_Notification : pb::IMessage<CClientMetrics_ContentDownloadResponse_Counts_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_ContentDownloadResponse_Counts_Notification> _parser = new pb::MessageParser<CClientMetrics_ContentDownloadResponse_Counts_Notification>(() => new CClientMetrics_ContentDownloadResponse_Counts_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_ContentDownloadResponse_Counts_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ContentDownloadResponse_Counts_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ContentDownloadResponse_Counts_Notification(CClientMetrics_ContentDownloadResponse_Counts_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      cellId_ = other.cellId_;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ContentDownloadResponse_Counts_Notification Clone() {
      return new CClientMetrics_ContentDownloadResponse_Counts_Notification(this);
    }

    /// <summary>Field number for the "cell_id" field.</summary>
    public const int CellIdFieldNumber = 1;
    private readonly static uint CellIdDefaultValue = 0;

    private uint cellId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CellId {
      get { if ((_hasBits0 & 1) != 0) { return cellId_; } else { return CellIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cellId_ = value;
      }
    }
    /// <summary>Gets whether the "cell_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCellId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cell_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCellId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.CClientMetrics_ContentDownloadResponse_Hosts data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CClientMetrics_ContentDownloadResponse_Hosts Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_ContentDownloadResponse_Counts_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_ContentDownloadResponse_Counts_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CellId != other.CellId) return false;
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCellId) hash ^= CellId.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCellId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CellId);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCellId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CellId);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCellId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_ContentDownloadResponse_Counts_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasCellId) {
        CellId = other.CellId;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::OpenSteamworks.Protobuf.CClientMetrics_ContentDownloadResponse_Hosts();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CellId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (data_ == null) {
              Data = new global::OpenSteamworks.Protobuf.CClientMetrics_ContentDownloadResponse_Hosts();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CellId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (data_ == null) {
              Data = new global::OpenSteamworks.Protobuf.CClientMetrics_ContentDownloadResponse_Hosts();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_ReportClientArgs_Notification : pb::IMessage<CClientMetrics_ReportClientArgs_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_ReportClientArgs_Notification> _parser = new pb::MessageParser<CClientMetrics_ReportClientArgs_Notification>(() => new CClientMetrics_ReportClientArgs_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_ReportClientArgs_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ReportClientArgs_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ReportClientArgs_Notification(CClientMetrics_ReportClientArgs_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      clientArgs_ = other.clientArgs_.Clone();
      gpuWebviewRegkeyDisabled_ = other.gpuWebviewRegkeyDisabled_;
      suppressGpuChrome_ = other.suppressGpuChrome_;
      browserNotSupported_ = other.browserNotSupported_;
      hwAccelVideoRegkeyDisabled_ = other.hwAccelVideoRegkeyDisabled_;
      miniModeEnabled_ = other.miniModeEnabled_;
      fpsCounterEnabled_ = other.fpsCounterEnabled_;
      libraryLowBandwidthModeEnabled_ = other.libraryLowBandwidthModeEnabled_;
      libraryLowPerfModeEnabled_ = other.libraryLowPerfModeEnabled_;
      grMode_ = other.grMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ReportClientArgs_Notification Clone() {
      return new CClientMetrics_ReportClientArgs_Notification(this);
    }

    /// <summary>Field number for the "client_args" field.</summary>
    public const int ClientArgsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_clientArgs_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> clientArgs_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ClientArgs {
      get { return clientArgs_; }
    }

    /// <summary>Field number for the "gpu_webview_regkey_disabled" field.</summary>
    public const int GpuWebviewRegkeyDisabledFieldNumber = 2;
    private readonly static bool GpuWebviewRegkeyDisabledDefaultValue = false;

    private bool gpuWebviewRegkeyDisabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GpuWebviewRegkeyDisabled {
      get { if ((_hasBits0 & 1) != 0) { return gpuWebviewRegkeyDisabled_; } else { return GpuWebviewRegkeyDisabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gpuWebviewRegkeyDisabled_ = value;
      }
    }
    /// <summary>Gets whether the "gpu_webview_regkey_disabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpuWebviewRegkeyDisabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "gpu_webview_regkey_disabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpuWebviewRegkeyDisabled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "suppress_gpu_chrome" field.</summary>
    public const int SuppressGpuChromeFieldNumber = 3;
    private readonly static bool SuppressGpuChromeDefaultValue = false;

    private bool suppressGpuChrome_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SuppressGpuChrome {
      get { if ((_hasBits0 & 2) != 0) { return suppressGpuChrome_; } else { return SuppressGpuChromeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        suppressGpuChrome_ = value;
      }
    }
    /// <summary>Gets whether the "suppress_gpu_chrome" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuppressGpuChrome {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "suppress_gpu_chrome" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuppressGpuChrome() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "browser_not_supported" field.</summary>
    public const int BrowserNotSupportedFieldNumber = 4;
    private readonly static bool BrowserNotSupportedDefaultValue = false;

    private bool browserNotSupported_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BrowserNotSupported {
      get { if ((_hasBits0 & 4) != 0) { return browserNotSupported_; } else { return BrowserNotSupportedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        browserNotSupported_ = value;
      }
    }
    /// <summary>Gets whether the "browser_not_supported" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowserNotSupported {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "browser_not_supported" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowserNotSupported() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "hw_accel_video_regkey_disabled" field.</summary>
    public const int HwAccelVideoRegkeyDisabledFieldNumber = 5;
    private readonly static bool HwAccelVideoRegkeyDisabledDefaultValue = false;

    private bool hwAccelVideoRegkeyDisabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HwAccelVideoRegkeyDisabled {
      get { if ((_hasBits0 & 8) != 0) { return hwAccelVideoRegkeyDisabled_; } else { return HwAccelVideoRegkeyDisabledDefaultValue; } }
      set {
        _hasBits0 |= 8;
        hwAccelVideoRegkeyDisabled_ = value;
      }
    }
    /// <summary>Gets whether the "hw_accel_video_regkey_disabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHwAccelVideoRegkeyDisabled {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "hw_accel_video_regkey_disabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHwAccelVideoRegkeyDisabled() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "mini_mode_enabled" field.</summary>
    public const int MiniModeEnabledFieldNumber = 6;
    private readonly static bool MiniModeEnabledDefaultValue = false;

    private bool miniModeEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MiniModeEnabled {
      get { if ((_hasBits0 & 16) != 0) { return miniModeEnabled_; } else { return MiniModeEnabledDefaultValue; } }
      set {
        _hasBits0 |= 16;
        miniModeEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "mini_mode_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMiniModeEnabled {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "mini_mode_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMiniModeEnabled() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "fps_counter_enabled" field.</summary>
    public const int FpsCounterEnabledFieldNumber = 7;
    private readonly static bool FpsCounterEnabledDefaultValue = false;

    private bool fpsCounterEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FpsCounterEnabled {
      get { if ((_hasBits0 & 32) != 0) { return fpsCounterEnabled_; } else { return FpsCounterEnabledDefaultValue; } }
      set {
        _hasBits0 |= 32;
        fpsCounterEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "fps_counter_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFpsCounterEnabled {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "fps_counter_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFpsCounterEnabled() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "library_low_bandwidth_mode_enabled" field.</summary>
    public const int LibraryLowBandwidthModeEnabledFieldNumber = 8;
    private readonly static bool LibraryLowBandwidthModeEnabledDefaultValue = false;

    private bool libraryLowBandwidthModeEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LibraryLowBandwidthModeEnabled {
      get { if ((_hasBits0 & 64) != 0) { return libraryLowBandwidthModeEnabled_; } else { return LibraryLowBandwidthModeEnabledDefaultValue; } }
      set {
        _hasBits0 |= 64;
        libraryLowBandwidthModeEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "library_low_bandwidth_mode_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLibraryLowBandwidthModeEnabled {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "library_low_bandwidth_mode_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLibraryLowBandwidthModeEnabled() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "library_low_perf_mode_enabled" field.</summary>
    public const int LibraryLowPerfModeEnabledFieldNumber = 9;
    private readonly static bool LibraryLowPerfModeEnabledDefaultValue = false;

    private bool libraryLowPerfModeEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LibraryLowPerfModeEnabled {
      get { if ((_hasBits0 & 128) != 0) { return libraryLowPerfModeEnabled_; } else { return LibraryLowPerfModeEnabledDefaultValue; } }
      set {
        _hasBits0 |= 128;
        libraryLowPerfModeEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "library_low_perf_mode_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLibraryLowPerfModeEnabled {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "library_low_perf_mode_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLibraryLowPerfModeEnabled() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "gr_mode" field.</summary>
    public const int GrModeFieldNumber = 10;
    private readonly static int GrModeDefaultValue = 0;

    private int grMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GrMode {
      get { if ((_hasBits0 & 256) != 0) { return grMode_; } else { return GrModeDefaultValue; } }
      set {
        _hasBits0 |= 256;
        grMode_ = value;
      }
    }
    /// <summary>Gets whether the "gr_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGrMode {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "gr_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGrMode() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_ReportClientArgs_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_ReportClientArgs_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clientArgs_.Equals(other.clientArgs_)) return false;
      if (GpuWebviewRegkeyDisabled != other.GpuWebviewRegkeyDisabled) return false;
      if (SuppressGpuChrome != other.SuppressGpuChrome) return false;
      if (BrowserNotSupported != other.BrowserNotSupported) return false;
      if (HwAccelVideoRegkeyDisabled != other.HwAccelVideoRegkeyDisabled) return false;
      if (MiniModeEnabled != other.MiniModeEnabled) return false;
      if (FpsCounterEnabled != other.FpsCounterEnabled) return false;
      if (LibraryLowBandwidthModeEnabled != other.LibraryLowBandwidthModeEnabled) return false;
      if (LibraryLowPerfModeEnabled != other.LibraryLowPerfModeEnabled) return false;
      if (GrMode != other.GrMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= clientArgs_.GetHashCode();
      if (HasGpuWebviewRegkeyDisabled) hash ^= GpuWebviewRegkeyDisabled.GetHashCode();
      if (HasSuppressGpuChrome) hash ^= SuppressGpuChrome.GetHashCode();
      if (HasBrowserNotSupported) hash ^= BrowserNotSupported.GetHashCode();
      if (HasHwAccelVideoRegkeyDisabled) hash ^= HwAccelVideoRegkeyDisabled.GetHashCode();
      if (HasMiniModeEnabled) hash ^= MiniModeEnabled.GetHashCode();
      if (HasFpsCounterEnabled) hash ^= FpsCounterEnabled.GetHashCode();
      if (HasLibraryLowBandwidthModeEnabled) hash ^= LibraryLowBandwidthModeEnabled.GetHashCode();
      if (HasLibraryLowPerfModeEnabled) hash ^= LibraryLowPerfModeEnabled.GetHashCode();
      if (HasGrMode) hash ^= GrMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      clientArgs_.WriteTo(output, _repeated_clientArgs_codec);
      if (HasGpuWebviewRegkeyDisabled) {
        output.WriteRawTag(16);
        output.WriteBool(GpuWebviewRegkeyDisabled);
      }
      if (HasSuppressGpuChrome) {
        output.WriteRawTag(24);
        output.WriteBool(SuppressGpuChrome);
      }
      if (HasBrowserNotSupported) {
        output.WriteRawTag(32);
        output.WriteBool(BrowserNotSupported);
      }
      if (HasHwAccelVideoRegkeyDisabled) {
        output.WriteRawTag(40);
        output.WriteBool(HwAccelVideoRegkeyDisabled);
      }
      if (HasMiniModeEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(MiniModeEnabled);
      }
      if (HasFpsCounterEnabled) {
        output.WriteRawTag(56);
        output.WriteBool(FpsCounterEnabled);
      }
      if (HasLibraryLowBandwidthModeEnabled) {
        output.WriteRawTag(64);
        output.WriteBool(LibraryLowBandwidthModeEnabled);
      }
      if (HasLibraryLowPerfModeEnabled) {
        output.WriteRawTag(72);
        output.WriteBool(LibraryLowPerfModeEnabled);
      }
      if (HasGrMode) {
        output.WriteRawTag(80);
        output.WriteInt32(GrMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      clientArgs_.WriteTo(ref output, _repeated_clientArgs_codec);
      if (HasGpuWebviewRegkeyDisabled) {
        output.WriteRawTag(16);
        output.WriteBool(GpuWebviewRegkeyDisabled);
      }
      if (HasSuppressGpuChrome) {
        output.WriteRawTag(24);
        output.WriteBool(SuppressGpuChrome);
      }
      if (HasBrowserNotSupported) {
        output.WriteRawTag(32);
        output.WriteBool(BrowserNotSupported);
      }
      if (HasHwAccelVideoRegkeyDisabled) {
        output.WriteRawTag(40);
        output.WriteBool(HwAccelVideoRegkeyDisabled);
      }
      if (HasMiniModeEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(MiniModeEnabled);
      }
      if (HasFpsCounterEnabled) {
        output.WriteRawTag(56);
        output.WriteBool(FpsCounterEnabled);
      }
      if (HasLibraryLowBandwidthModeEnabled) {
        output.WriteRawTag(64);
        output.WriteBool(LibraryLowBandwidthModeEnabled);
      }
      if (HasLibraryLowPerfModeEnabled) {
        output.WriteRawTag(72);
        output.WriteBool(LibraryLowPerfModeEnabled);
      }
      if (HasGrMode) {
        output.WriteRawTag(80);
        output.WriteInt32(GrMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += clientArgs_.CalculateSize(_repeated_clientArgs_codec);
      if (HasGpuWebviewRegkeyDisabled) {
        size += 1 + 1;
      }
      if (HasSuppressGpuChrome) {
        size += 1 + 1;
      }
      if (HasBrowserNotSupported) {
        size += 1 + 1;
      }
      if (HasHwAccelVideoRegkeyDisabled) {
        size += 1 + 1;
      }
      if (HasMiniModeEnabled) {
        size += 1 + 1;
      }
      if (HasFpsCounterEnabled) {
        size += 1 + 1;
      }
      if (HasLibraryLowBandwidthModeEnabled) {
        size += 1 + 1;
      }
      if (HasLibraryLowPerfModeEnabled) {
        size += 1 + 1;
      }
      if (HasGrMode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GrMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_ReportClientArgs_Notification other) {
      if (other == null) {
        return;
      }
      clientArgs_.Add(other.clientArgs_);
      if (other.HasGpuWebviewRegkeyDisabled) {
        GpuWebviewRegkeyDisabled = other.GpuWebviewRegkeyDisabled;
      }
      if (other.HasSuppressGpuChrome) {
        SuppressGpuChrome = other.SuppressGpuChrome;
      }
      if (other.HasBrowserNotSupported) {
        BrowserNotSupported = other.BrowserNotSupported;
      }
      if (other.HasHwAccelVideoRegkeyDisabled) {
        HwAccelVideoRegkeyDisabled = other.HwAccelVideoRegkeyDisabled;
      }
      if (other.HasMiniModeEnabled) {
        MiniModeEnabled = other.MiniModeEnabled;
      }
      if (other.HasFpsCounterEnabled) {
        FpsCounterEnabled = other.FpsCounterEnabled;
      }
      if (other.HasLibraryLowBandwidthModeEnabled) {
        LibraryLowBandwidthModeEnabled = other.LibraryLowBandwidthModeEnabled;
      }
      if (other.HasLibraryLowPerfModeEnabled) {
        LibraryLowPerfModeEnabled = other.LibraryLowPerfModeEnabled;
      }
      if (other.HasGrMode) {
        GrMode = other.GrMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            clientArgs_.AddEntriesFrom(input, _repeated_clientArgs_codec);
            break;
          }
          case 16: {
            GpuWebviewRegkeyDisabled = input.ReadBool();
            break;
          }
          case 24: {
            SuppressGpuChrome = input.ReadBool();
            break;
          }
          case 32: {
            BrowserNotSupported = input.ReadBool();
            break;
          }
          case 40: {
            HwAccelVideoRegkeyDisabled = input.ReadBool();
            break;
          }
          case 48: {
            MiniModeEnabled = input.ReadBool();
            break;
          }
          case 56: {
            FpsCounterEnabled = input.ReadBool();
            break;
          }
          case 64: {
            LibraryLowBandwidthModeEnabled = input.ReadBool();
            break;
          }
          case 72: {
            LibraryLowPerfModeEnabled = input.ReadBool();
            break;
          }
          case 80: {
            GrMode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            clientArgs_.AddEntriesFrom(ref input, _repeated_clientArgs_codec);
            break;
          }
          case 16: {
            GpuWebviewRegkeyDisabled = input.ReadBool();
            break;
          }
          case 24: {
            SuppressGpuChrome = input.ReadBool();
            break;
          }
          case 32: {
            BrowserNotSupported = input.ReadBool();
            break;
          }
          case 40: {
            HwAccelVideoRegkeyDisabled = input.ReadBool();
            break;
          }
          case 48: {
            MiniModeEnabled = input.ReadBool();
            break;
          }
          case 56: {
            FpsCounterEnabled = input.ReadBool();
            break;
          }
          case 64: {
            LibraryLowBandwidthModeEnabled = input.ReadBool();
            break;
          }
          case 72: {
            LibraryLowPerfModeEnabled = input.ReadBool();
            break;
          }
          case 80: {
            GrMode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_ReportLinuxStats_Notification : pb::IMessage<CClientMetrics_ReportLinuxStats_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_ReportLinuxStats_Notification> _parser = new pb::MessageParser<CClientMetrics_ReportLinuxStats_Notification>(() => new CClientMetrics_ReportLinuxStats_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_ReportLinuxStats_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ReportLinuxStats_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ReportLinuxStats_Notification(CClientMetrics_ReportLinuxStats_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      glibcVersionMajor_ = other.glibcVersionMajor_;
      glibcVersionMinor_ = other.glibcVersionMinor_;
      accountType_ = other.accountType_;
      launcherType_ = other.launcherType_;
      gameServerAppid_ = other.gameServerAppid_;
      processName_ = other.processName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ReportLinuxStats_Notification Clone() {
      return new CClientMetrics_ReportLinuxStats_Notification(this);
    }

    /// <summary>Field number for the "glibc_version_major" field.</summary>
    public const int GlibcVersionMajorFieldNumber = 1;
    private readonly static int GlibcVersionMajorDefaultValue = 0;

    private int glibcVersionMajor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GlibcVersionMajor {
      get { if ((_hasBits0 & 1) != 0) { return glibcVersionMajor_; } else { return GlibcVersionMajorDefaultValue; } }
      set {
        _hasBits0 |= 1;
        glibcVersionMajor_ = value;
      }
    }
    /// <summary>Gets whether the "glibc_version_major" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGlibcVersionMajor {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "glibc_version_major" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGlibcVersionMajor() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "glibc_version_minor" field.</summary>
    public const int GlibcVersionMinorFieldNumber = 2;
    private readonly static int GlibcVersionMinorDefaultValue = 0;

    private int glibcVersionMinor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GlibcVersionMinor {
      get { if ((_hasBits0 & 2) != 0) { return glibcVersionMinor_; } else { return GlibcVersionMinorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        glibcVersionMinor_ = value;
      }
    }
    /// <summary>Gets whether the "glibc_version_minor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGlibcVersionMinor {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "glibc_version_minor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGlibcVersionMinor() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "account_type" field.</summary>
    public const int AccountTypeFieldNumber = 3;
    private readonly static int AccountTypeDefaultValue = 0;

    private int accountType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AccountType {
      get { if ((_hasBits0 & 4) != 0) { return accountType_; } else { return AccountTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        accountType_ = value;
      }
    }
    /// <summary>Gets whether the "account_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "account_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "launcher_type" field.</summary>
    public const int LauncherTypeFieldNumber = 4;
    private readonly static int LauncherTypeDefaultValue = 0;

    private int launcherType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LauncherType {
      get { if ((_hasBits0 & 8) != 0) { return launcherType_; } else { return LauncherTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        launcherType_ = value;
      }
    }
    /// <summary>Gets whether the "launcher_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLauncherType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "launcher_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLauncherType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "game_server_appid" field.</summary>
    public const int GameServerAppidFieldNumber = 5;
    private readonly static int GameServerAppidDefaultValue = 0;

    private int gameServerAppid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameServerAppid {
      get { if ((_hasBits0 & 16) != 0) { return gameServerAppid_; } else { return GameServerAppidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        gameServerAppid_ = value;
      }
    }
    /// <summary>Gets whether the "game_server_appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameServerAppid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "game_server_appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameServerAppid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "process_name" field.</summary>
    public const int ProcessNameFieldNumber = 6;
    private readonly static string ProcessNameDefaultValue = "";

    private string processName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProcessName {
      get { return processName_ ?? ProcessNameDefaultValue; }
      set {
        processName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "process_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProcessName {
      get { return processName_ != null; }
    }
    /// <summary>Clears the value of the "process_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProcessName() {
      processName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_ReportLinuxStats_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_ReportLinuxStats_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GlibcVersionMajor != other.GlibcVersionMajor) return false;
      if (GlibcVersionMinor != other.GlibcVersionMinor) return false;
      if (AccountType != other.AccountType) return false;
      if (LauncherType != other.LauncherType) return false;
      if (GameServerAppid != other.GameServerAppid) return false;
      if (ProcessName != other.ProcessName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGlibcVersionMajor) hash ^= GlibcVersionMajor.GetHashCode();
      if (HasGlibcVersionMinor) hash ^= GlibcVersionMinor.GetHashCode();
      if (HasAccountType) hash ^= AccountType.GetHashCode();
      if (HasLauncherType) hash ^= LauncherType.GetHashCode();
      if (HasGameServerAppid) hash ^= GameServerAppid.GetHashCode();
      if (HasProcessName) hash ^= ProcessName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGlibcVersionMajor) {
        output.WriteRawTag(8);
        output.WriteInt32(GlibcVersionMajor);
      }
      if (HasGlibcVersionMinor) {
        output.WriteRawTag(16);
        output.WriteInt32(GlibcVersionMinor);
      }
      if (HasAccountType) {
        output.WriteRawTag(24);
        output.WriteInt32(AccountType);
      }
      if (HasLauncherType) {
        output.WriteRawTag(32);
        output.WriteInt32(LauncherType);
      }
      if (HasGameServerAppid) {
        output.WriteRawTag(40);
        output.WriteInt32(GameServerAppid);
      }
      if (HasProcessName) {
        output.WriteRawTag(50);
        output.WriteString(ProcessName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGlibcVersionMajor) {
        output.WriteRawTag(8);
        output.WriteInt32(GlibcVersionMajor);
      }
      if (HasGlibcVersionMinor) {
        output.WriteRawTag(16);
        output.WriteInt32(GlibcVersionMinor);
      }
      if (HasAccountType) {
        output.WriteRawTag(24);
        output.WriteInt32(AccountType);
      }
      if (HasLauncherType) {
        output.WriteRawTag(32);
        output.WriteInt32(LauncherType);
      }
      if (HasGameServerAppid) {
        output.WriteRawTag(40);
        output.WriteInt32(GameServerAppid);
      }
      if (HasProcessName) {
        output.WriteRawTag(50);
        output.WriteString(ProcessName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGlibcVersionMajor) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GlibcVersionMajor);
      }
      if (HasGlibcVersionMinor) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GlibcVersionMinor);
      }
      if (HasAccountType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccountType);
      }
      if (HasLauncherType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LauncherType);
      }
      if (HasGameServerAppid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameServerAppid);
      }
      if (HasProcessName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProcessName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_ReportLinuxStats_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasGlibcVersionMajor) {
        GlibcVersionMajor = other.GlibcVersionMajor;
      }
      if (other.HasGlibcVersionMinor) {
        GlibcVersionMinor = other.GlibcVersionMinor;
      }
      if (other.HasAccountType) {
        AccountType = other.AccountType;
      }
      if (other.HasLauncherType) {
        LauncherType = other.LauncherType;
      }
      if (other.HasGameServerAppid) {
        GameServerAppid = other.GameServerAppid;
      }
      if (other.HasProcessName) {
        ProcessName = other.ProcessName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GlibcVersionMajor = input.ReadInt32();
            break;
          }
          case 16: {
            GlibcVersionMinor = input.ReadInt32();
            break;
          }
          case 24: {
            AccountType = input.ReadInt32();
            break;
          }
          case 32: {
            LauncherType = input.ReadInt32();
            break;
          }
          case 40: {
            GameServerAppid = input.ReadInt32();
            break;
          }
          case 50: {
            ProcessName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GlibcVersionMajor = input.ReadInt32();
            break;
          }
          case 16: {
            GlibcVersionMinor = input.ReadInt32();
            break;
          }
          case 24: {
            AccountType = input.ReadInt32();
            break;
          }
          case 32: {
            LauncherType = input.ReadInt32();
            break;
          }
          case 40: {
            GameServerAppid = input.ReadInt32();
            break;
          }
          case 50: {
            ProcessName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_ClipShare_Notification : pb::IMessage<CClientMetrics_ClipShare_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_ClipShare_Notification> _parser = new pb::MessageParser<CClientMetrics_ClipShare_Notification>(() => new CClientMetrics_ClipShare_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_ClipShare_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ClipShare_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ClipShare_Notification(CClientMetrics_ClipShare_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      eresult_ = other.eresult_;
      shareMethod_ = other.shareMethod_;
      seconds_ = other.seconds_;
      bytes_ = other.bytes_;
      gameid_ = other.gameid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ClipShare_Notification Clone() {
      return new CClientMetrics_ClipShare_Notification(this);
    }

    /// <summary>Field number for the "eresult" field.</summary>
    public const int EresultFieldNumber = 1;
    private readonly static uint EresultDefaultValue = 2;

    private uint eresult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Eresult {
      get { if ((_hasBits0 & 1) != 0) { return eresult_; } else { return EresultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        eresult_ = value;
      }
    }
    /// <summary>Gets whether the "eresult" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEresult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "eresult" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEresult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "share_method" field.</summary>
    public const int ShareMethodFieldNumber = 2;
    private readonly static global::OpenSteamworks.Protobuf.EClipShareMethod ShareMethodDefaultValue = global::OpenSteamworks.Protobuf.EClipShareMethod.Chat;

    private global::OpenSteamworks.Protobuf.EClipShareMethod shareMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EClipShareMethod ShareMethod {
      get { if ((_hasBits0 & 2) != 0) { return shareMethod_; } else { return ShareMethodDefaultValue; } }
      set {
        _hasBits0 |= 2;
        shareMethod_ = value;
      }
    }
    /// <summary>Gets whether the "share_method" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShareMethod {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "share_method" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShareMethod() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "seconds" field.</summary>
    public const int SecondsFieldNumber = 3;
    private readonly static float SecondsDefaultValue = 0F;

    private float seconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Seconds {
      get { if ((_hasBits0 & 4) != 0) { return seconds_; } else { return SecondsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        seconds_ = value;
      }
    }
    /// <summary>Gets whether the "seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeconds {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeconds() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 4;
    private readonly static ulong BytesDefaultValue = 0UL;

    private ulong bytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Bytes {
      get { if ((_hasBits0 & 8) != 0) { return bytes_; } else { return BytesDefaultValue; } }
      set {
        _hasBits0 |= 8;
        bytes_ = value;
      }
    }
    /// <summary>Gets whether the "bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBytes {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBytes() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "gameid" field.</summary>
    public const int GameidFieldNumber = 5;
    private readonly static ulong GameidDefaultValue = 0UL;

    private ulong gameid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Gameid {
      get { if ((_hasBits0 & 16) != 0) { return gameid_; } else { return GameidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        gameid_ = value;
      }
    }
    /// <summary>Gets whether the "gameid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "gameid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameid() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_ClipShare_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_ClipShare_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Eresult != other.Eresult) return false;
      if (ShareMethod != other.ShareMethod) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Seconds, other.Seconds)) return false;
      if (Bytes != other.Bytes) return false;
      if (Gameid != other.Gameid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEresult) hash ^= Eresult.GetHashCode();
      if (HasShareMethod) hash ^= ShareMethod.GetHashCode();
      if (HasSeconds) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Seconds);
      if (HasBytes) hash ^= Bytes.GetHashCode();
      if (HasGameid) hash ^= Gameid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEresult) {
        output.WriteRawTag(8);
        output.WriteUInt32(Eresult);
      }
      if (HasShareMethod) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ShareMethod);
      }
      if (HasSeconds) {
        output.WriteRawTag(29);
        output.WriteFloat(Seconds);
      }
      if (HasBytes) {
        output.WriteRawTag(32);
        output.WriteUInt64(Bytes);
      }
      if (HasGameid) {
        output.WriteRawTag(41);
        output.WriteFixed64(Gameid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEresult) {
        output.WriteRawTag(8);
        output.WriteUInt32(Eresult);
      }
      if (HasShareMethod) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ShareMethod);
      }
      if (HasSeconds) {
        output.WriteRawTag(29);
        output.WriteFloat(Seconds);
      }
      if (HasBytes) {
        output.WriteRawTag(32);
        output.WriteUInt64(Bytes);
      }
      if (HasGameid) {
        output.WriteRawTag(41);
        output.WriteFixed64(Gameid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEresult) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Eresult);
      }
      if (HasShareMethod) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShareMethod);
      }
      if (HasSeconds) {
        size += 1 + 4;
      }
      if (HasBytes) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Bytes);
      }
      if (HasGameid) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_ClipShare_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      if (other.HasShareMethod) {
        ShareMethod = other.ShareMethod;
      }
      if (other.HasSeconds) {
        Seconds = other.Seconds;
      }
      if (other.HasBytes) {
        Bytes = other.Bytes;
      }
      if (other.HasGameid) {
        Gameid = other.Gameid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Eresult = input.ReadUInt32();
            break;
          }
          case 16: {
            ShareMethod = (global::OpenSteamworks.Protobuf.EClipShareMethod) input.ReadEnum();
            break;
          }
          case 29: {
            Seconds = input.ReadFloat();
            break;
          }
          case 32: {
            Bytes = input.ReadUInt64();
            break;
          }
          case 41: {
            Gameid = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Eresult = input.ReadUInt32();
            break;
          }
          case 16: {
            ShareMethod = (global::OpenSteamworks.Protobuf.EClipShareMethod) input.ReadEnum();
            break;
          }
          case 29: {
            Seconds = input.ReadFloat();
            break;
          }
          case 32: {
            Bytes = input.ReadUInt64();
            break;
          }
          case 41: {
            Gameid = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_ClipRange_Notification : pb::IMessage<CClientMetrics_ClipRange_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_ClipRange_Notification> _parser = new pb::MessageParser<CClientMetrics_ClipRange_Notification>(() => new CClientMetrics_ClipRange_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_ClipRange_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ClipRange_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ClipRange_Notification(CClientMetrics_ClipRange_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      originalRangeMethod_ = other.originalRangeMethod_;
      start_ = other.start_ != null ? other.start_.Clone() : null;
      end_ = other.end_ != null ? other.end_.Clone() : null;
      seconds_ = other.seconds_;
      gameid_ = other.gameid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_ClipRange_Notification Clone() {
      return new CClientMetrics_ClipRange_Notification(this);
    }

    /// <summary>Field number for the "original_range_method" field.</summary>
    public const int OriginalRangeMethodFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EClipRangeMethod OriginalRangeMethodDefaultValue = global::OpenSteamworks.Protobuf.EClipRangeMethod.CreateClipButton;

    private global::OpenSteamworks.Protobuf.EClipRangeMethod originalRangeMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EClipRangeMethod OriginalRangeMethod {
      get { if ((_hasBits0 & 1) != 0) { return originalRangeMethod_; } else { return OriginalRangeMethodDefaultValue; } }
      set {
        _hasBits0 |= 1;
        originalRangeMethod_ = value;
      }
    }
    /// <summary>Gets whether the "original_range_method" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOriginalRangeMethod {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "original_range_method" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOriginalRangeMethod() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 2;
    private global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Types.RelativeRangeEdge start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Types.RelativeRangeEdge Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Types.RelativeRangeEdge end_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Types.RelativeRangeEdge End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    /// <summary>Field number for the "seconds" field.</summary>
    public const int SecondsFieldNumber = 4;
    private readonly static float SecondsDefaultValue = 0F;

    private float seconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Seconds {
      get { if ((_hasBits0 & 2) != 0) { return seconds_; } else { return SecondsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seconds_ = value;
      }
    }
    /// <summary>Gets whether the "seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeconds {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeconds() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gameid" field.</summary>
    public const int GameidFieldNumber = 5;
    private readonly static ulong GameidDefaultValue = 0UL;

    private ulong gameid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Gameid {
      get { if ((_hasBits0 & 4) != 0) { return gameid_; } else { return GameidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gameid_ = value;
      }
    }
    /// <summary>Gets whether the "gameid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gameid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_ClipRange_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_ClipRange_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OriginalRangeMethod != other.OriginalRangeMethod) return false;
      if (!object.Equals(Start, other.Start)) return false;
      if (!object.Equals(End, other.End)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Seconds, other.Seconds)) return false;
      if (Gameid != other.Gameid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOriginalRangeMethod) hash ^= OriginalRangeMethod.GetHashCode();
      if (start_ != null) hash ^= Start.GetHashCode();
      if (end_ != null) hash ^= End.GetHashCode();
      if (HasSeconds) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Seconds);
      if (HasGameid) hash ^= Gameid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOriginalRangeMethod) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OriginalRangeMethod);
      }
      if (start_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(End);
      }
      if (HasSeconds) {
        output.WriteRawTag(37);
        output.WriteFloat(Seconds);
      }
      if (HasGameid) {
        output.WriteRawTag(41);
        output.WriteFixed64(Gameid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOriginalRangeMethod) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OriginalRangeMethod);
      }
      if (start_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(End);
      }
      if (HasSeconds) {
        output.WriteRawTag(37);
        output.WriteFloat(Seconds);
      }
      if (HasGameid) {
        output.WriteRawTag(41);
        output.WriteFixed64(Gameid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasOriginalRangeMethod) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OriginalRangeMethod);
      }
      if (start_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
      }
      if (end_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
      }
      if (HasSeconds) {
        size += 1 + 4;
      }
      if (HasGameid) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_ClipRange_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasOriginalRangeMethod) {
        OriginalRangeMethod = other.OriginalRangeMethod;
      }
      if (other.start_ != null) {
        if (start_ == null) {
          Start = new global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Types.RelativeRangeEdge();
        }
        Start.MergeFrom(other.Start);
      }
      if (other.end_ != null) {
        if (end_ == null) {
          End = new global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Types.RelativeRangeEdge();
        }
        End.MergeFrom(other.End);
      }
      if (other.HasSeconds) {
        Seconds = other.Seconds;
      }
      if (other.HasGameid) {
        Gameid = other.Gameid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OriginalRangeMethod = (global::OpenSteamworks.Protobuf.EClipRangeMethod) input.ReadEnum();
            break;
          }
          case 18: {
            if (start_ == null) {
              Start = new global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Types.RelativeRangeEdge();
            }
            input.ReadMessage(Start);
            break;
          }
          case 26: {
            if (end_ == null) {
              End = new global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Types.RelativeRangeEdge();
            }
            input.ReadMessage(End);
            break;
          }
          case 37: {
            Seconds = input.ReadFloat();
            break;
          }
          case 41: {
            Gameid = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OriginalRangeMethod = (global::OpenSteamworks.Protobuf.EClipRangeMethod) input.ReadEnum();
            break;
          }
          case 18: {
            if (start_ == null) {
              Start = new global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Types.RelativeRangeEdge();
            }
            input.ReadMessage(Start);
            break;
          }
          case 26: {
            if (end_ == null) {
              End = new global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Types.RelativeRangeEdge();
            }
            input.ReadMessage(End);
            break;
          }
          case 37: {
            Seconds = input.ReadFloat();
            break;
          }
          case 41: {
            Gameid = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CClientMetrics_ClipRange_Notification message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class RelativeRangeEdge : pb::IMessage<RelativeRangeEdge>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RelativeRangeEdge> _parser = new pb::MessageParser<RelativeRangeEdge>(() => new RelativeRangeEdge());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RelativeRangeEdge> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CClientMetrics_ClipRange_Notification.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RelativeRangeEdge() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RelativeRangeEdge(RelativeRangeEdge other) : this() {
          _hasBits0 = other._hasBits0;
          originalRangeMethod_ = other.originalRangeMethod_;
          latestRangeMethod_ = other.latestRangeMethod_;
          deltaMs_ = other.deltaMs_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RelativeRangeEdge Clone() {
          return new RelativeRangeEdge(this);
        }

        /// <summary>Field number for the "original_range_method" field.</summary>
        public const int OriginalRangeMethodFieldNumber = 1;
        private readonly static global::OpenSteamworks.Protobuf.EClipRangeMethod OriginalRangeMethodDefaultValue = global::OpenSteamworks.Protobuf.EClipRangeMethod.CreateClipButton;

        private global::OpenSteamworks.Protobuf.EClipRangeMethod originalRangeMethod_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::OpenSteamworks.Protobuf.EClipRangeMethod OriginalRangeMethod {
          get { if ((_hasBits0 & 1) != 0) { return originalRangeMethod_; } else { return OriginalRangeMethodDefaultValue; } }
          set {
            _hasBits0 |= 1;
            originalRangeMethod_ = value;
          }
        }
        /// <summary>Gets whether the "original_range_method" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasOriginalRangeMethod {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "original_range_method" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearOriginalRangeMethod() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "latest_range_method" field.</summary>
        public const int LatestRangeMethodFieldNumber = 2;
        private readonly static global::OpenSteamworks.Protobuf.EClipRangeMethod LatestRangeMethodDefaultValue = global::OpenSteamworks.Protobuf.EClipRangeMethod.CreateClipButton;

        private global::OpenSteamworks.Protobuf.EClipRangeMethod latestRangeMethod_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::OpenSteamworks.Protobuf.EClipRangeMethod LatestRangeMethod {
          get { if ((_hasBits0 & 2) != 0) { return latestRangeMethod_; } else { return LatestRangeMethodDefaultValue; } }
          set {
            _hasBits0 |= 2;
            latestRangeMethod_ = value;
          }
        }
        /// <summary>Gets whether the "latest_range_method" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLatestRangeMethod {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "latest_range_method" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLatestRangeMethod() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "delta_ms" field.</summary>
        public const int DeltaMsFieldNumber = 3;
        private readonly static int DeltaMsDefaultValue = 0;

        private int deltaMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int DeltaMs {
          get { if ((_hasBits0 & 4) != 0) { return deltaMs_; } else { return DeltaMsDefaultValue; } }
          set {
            _hasBits0 |= 4;
            deltaMs_ = value;
          }
        }
        /// <summary>Gets whether the "delta_ms" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDeltaMs {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "delta_ms" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDeltaMs() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RelativeRangeEdge);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RelativeRangeEdge other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OriginalRangeMethod != other.OriginalRangeMethod) return false;
          if (LatestRangeMethod != other.LatestRangeMethod) return false;
          if (DeltaMs != other.DeltaMs) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasOriginalRangeMethod) hash ^= OriginalRangeMethod.GetHashCode();
          if (HasLatestRangeMethod) hash ^= LatestRangeMethod.GetHashCode();
          if (HasDeltaMs) hash ^= DeltaMs.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasOriginalRangeMethod) {
            output.WriteRawTag(8);
            output.WriteEnum((int) OriginalRangeMethod);
          }
          if (HasLatestRangeMethod) {
            output.WriteRawTag(16);
            output.WriteEnum((int) LatestRangeMethod);
          }
          if (HasDeltaMs) {
            output.WriteRawTag(24);
            output.WriteInt32(DeltaMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasOriginalRangeMethod) {
            output.WriteRawTag(8);
            output.WriteEnum((int) OriginalRangeMethod);
          }
          if (HasLatestRangeMethod) {
            output.WriteRawTag(16);
            output.WriteEnum((int) LatestRangeMethod);
          }
          if (HasDeltaMs) {
            output.WriteRawTag(24);
            output.WriteInt32(DeltaMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasOriginalRangeMethod) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OriginalRangeMethod);
          }
          if (HasLatestRangeMethod) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LatestRangeMethod);
          }
          if (HasDeltaMs) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeltaMs);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RelativeRangeEdge other) {
          if (other == null) {
            return;
          }
          if (other.HasOriginalRangeMethod) {
            OriginalRangeMethod = other.OriginalRangeMethod;
          }
          if (other.HasLatestRangeMethod) {
            LatestRangeMethod = other.LatestRangeMethod;
          }
          if (other.HasDeltaMs) {
            DeltaMs = other.DeltaMs;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OriginalRangeMethod = (global::OpenSteamworks.Protobuf.EClipRangeMethod) input.ReadEnum();
                break;
              }
              case 16: {
                LatestRangeMethod = (global::OpenSteamworks.Protobuf.EClipRangeMethod) input.ReadEnum();
                break;
              }
              case 24: {
                DeltaMs = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                OriginalRangeMethod = (global::OpenSteamworks.Protobuf.EClipRangeMethod) input.ReadEnum();
                break;
              }
              case 16: {
                LatestRangeMethod = (global::OpenSteamworks.Protobuf.EClipRangeMethod) input.ReadEnum();
                break;
              }
              case 24: {
                DeltaMs = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_EndGameRecording_Notification : pb::IMessage<CClientMetrics_EndGameRecording_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_EndGameRecording_Notification> _parser = new pb::MessageParser<CClientMetrics_EndGameRecording_Notification>(() => new CClientMetrics_EndGameRecording_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_EndGameRecording_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_EndGameRecording_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_EndGameRecording_Notification(CClientMetrics_EndGameRecording_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      recordingType_ = other.recordingType_;
      seconds_ = other.seconds_;
      bytes_ = other.bytes_;
      gameid_ = other.gameid_;
      instantClip_ = other.instantClip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_EndGameRecording_Notification Clone() {
      return new CClientMetrics_EndGameRecording_Notification(this);
    }

    /// <summary>Field number for the "recording_type" field.</summary>
    public const int RecordingTypeFieldNumber = 1;
    private readonly static global::OpenSteamworks.Protobuf.EGameRecordingType RecordingTypeDefaultValue = global::OpenSteamworks.Protobuf.EGameRecordingType.Unknown;

    private global::OpenSteamworks.Protobuf.EGameRecordingType recordingType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.EGameRecordingType RecordingType {
      get { if ((_hasBits0 & 1) != 0) { return recordingType_; } else { return RecordingTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        recordingType_ = value;
      }
    }
    /// <summary>Gets whether the "recording_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecordingType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "recording_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecordingType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seconds" field.</summary>
    public const int SecondsFieldNumber = 2;
    private readonly static float SecondsDefaultValue = 0F;

    private float seconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Seconds {
      get { if ((_hasBits0 & 2) != 0) { return seconds_; } else { return SecondsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seconds_ = value;
      }
    }
    /// <summary>Gets whether the "seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeconds {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeconds() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 3;
    private readonly static ulong BytesDefaultValue = 0UL;

    private ulong bytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Bytes {
      get { if ((_hasBits0 & 4) != 0) { return bytes_; } else { return BytesDefaultValue; } }
      set {
        _hasBits0 |= 4;
        bytes_ = value;
      }
    }
    /// <summary>Gets whether the "bytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBytes {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBytes() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gameid" field.</summary>
    public const int GameidFieldNumber = 4;
    private readonly static ulong GameidDefaultValue = 0UL;

    private ulong gameid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Gameid {
      get { if ((_hasBits0 & 8) != 0) { return gameid_; } else { return GameidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gameid_ = value;
      }
    }
    /// <summary>Gets whether the "gameid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gameid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "instant_clip" field.</summary>
    public const int InstantClipFieldNumber = 5;
    private readonly static bool InstantClipDefaultValue = false;

    private bool instantClip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InstantClip {
      get { if ((_hasBits0 & 16) != 0) { return instantClip_; } else { return InstantClipDefaultValue; } }
      set {
        _hasBits0 |= 16;
        instantClip_ = value;
      }
    }
    /// <summary>Gets whether the "instant_clip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstantClip {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "instant_clip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstantClip() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_EndGameRecording_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_EndGameRecording_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RecordingType != other.RecordingType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Seconds, other.Seconds)) return false;
      if (Bytes != other.Bytes) return false;
      if (Gameid != other.Gameid) return false;
      if (InstantClip != other.InstantClip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRecordingType) hash ^= RecordingType.GetHashCode();
      if (HasSeconds) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Seconds);
      if (HasBytes) hash ^= Bytes.GetHashCode();
      if (HasGameid) hash ^= Gameid.GetHashCode();
      if (HasInstantClip) hash ^= InstantClip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRecordingType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RecordingType);
      }
      if (HasSeconds) {
        output.WriteRawTag(21);
        output.WriteFloat(Seconds);
      }
      if (HasBytes) {
        output.WriteRawTag(24);
        output.WriteUInt64(Bytes);
      }
      if (HasGameid) {
        output.WriteRawTag(33);
        output.WriteFixed64(Gameid);
      }
      if (HasInstantClip) {
        output.WriteRawTag(40);
        output.WriteBool(InstantClip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRecordingType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RecordingType);
      }
      if (HasSeconds) {
        output.WriteRawTag(21);
        output.WriteFloat(Seconds);
      }
      if (HasBytes) {
        output.WriteRawTag(24);
        output.WriteUInt64(Bytes);
      }
      if (HasGameid) {
        output.WriteRawTag(33);
        output.WriteFixed64(Gameid);
      }
      if (HasInstantClip) {
        output.WriteRawTag(40);
        output.WriteBool(InstantClip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRecordingType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RecordingType);
      }
      if (HasSeconds) {
        size += 1 + 4;
      }
      if (HasBytes) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Bytes);
      }
      if (HasGameid) {
        size += 1 + 8;
      }
      if (HasInstantClip) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_EndGameRecording_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasRecordingType) {
        RecordingType = other.RecordingType;
      }
      if (other.HasSeconds) {
        Seconds = other.Seconds;
      }
      if (other.HasBytes) {
        Bytes = other.Bytes;
      }
      if (other.HasGameid) {
        Gameid = other.Gameid;
      }
      if (other.HasInstantClip) {
        InstantClip = other.InstantClip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RecordingType = (global::OpenSteamworks.Protobuf.EGameRecordingType) input.ReadEnum();
            break;
          }
          case 21: {
            Seconds = input.ReadFloat();
            break;
          }
          case 24: {
            Bytes = input.ReadUInt64();
            break;
          }
          case 33: {
            Gameid = input.ReadFixed64();
            break;
          }
          case 40: {
            InstantClip = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RecordingType = (global::OpenSteamworks.Protobuf.EGameRecordingType) input.ReadEnum();
            break;
          }
          case 21: {
            Seconds = input.ReadFloat();
            break;
          }
          case 24: {
            Bytes = input.ReadUInt64();
            break;
          }
          case 33: {
            Gameid = input.ReadFixed64();
            break;
          }
          case 40: {
            InstantClip = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CClientMetrics_GamePerformance_Notification : pb::IMessage<CClientMetrics_GamePerformance_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CClientMetrics_GamePerformance_Notification> _parser = new pb::MessageParser<CClientMetrics_GamePerformance_Notification>(() => new CClientMetrics_GamePerformance_Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CClientMetrics_GamePerformance_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesClientmetricsSteamclientReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_GamePerformance_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_GamePerformance_Notification(CClientMetrics_GamePerformance_Notification other) : this() {
      reports_ = other.reports_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CClientMetrics_GamePerformance_Notification Clone() {
      return new CClientMetrics_GamePerformance_Notification(this);
    }

    /// <summary>Field number for the "reports" field.</summary>
    public const int ReportsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CClientMetrics_GamePerformance_Notification.Types.FrameRateReport> _repeated_reports_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CClientMetrics_GamePerformance_Notification.Types.FrameRateReport.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_GamePerformance_Notification.Types.FrameRateReport> reports_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_GamePerformance_Notification.Types.FrameRateReport>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CClientMetrics_GamePerformance_Notification.Types.FrameRateReport> Reports {
      get { return reports_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CClientMetrics_GamePerformance_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CClientMetrics_GamePerformance_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reports_.Equals(other.reports_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reports_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      reports_.WriteTo(output, _repeated_reports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      reports_.WriteTo(ref output, _repeated_reports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += reports_.CalculateSize(_repeated_reports_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CClientMetrics_GamePerformance_Notification other) {
      if (other == null) {
        return;
      }
      reports_.Add(other.reports_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            reports_.AddEntriesFrom(input, _repeated_reports_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            reports_.AddEntriesFrom(ref input, _repeated_reports_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CClientMetrics_GamePerformance_Notification message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class FrameRateReport : pb::IMessage<FrameRateReport>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FrameRateReport> _parser = new pb::MessageParser<FrameRateReport>(() => new FrameRateReport());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<FrameRateReport> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CClientMetrics_GamePerformance_Notification.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FrameRateReport() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FrameRateReport(FrameRateReport other) : this() {
          _hasBits0 = other._hasBits0;
          gameid_ = other.gameid_;
          frameRate_ = other.frameRate_;
          manufacturer_ = other.manufacturer_;
          model_ = other.model_;
          dxVideoCard_ = other.dxVideoCard_;
          dxVendorid_ = other.dxVendorid_;
          dxDeviceid_ = other.dxDeviceid_;
          numGpu_ = other.numGpu_;
          systemRam_ = other.systemRam_;
          sessionSeconds_ = other.sessionSeconds_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FrameRateReport Clone() {
          return new FrameRateReport(this);
        }

        /// <summary>Field number for the "gameid" field.</summary>
        public const int GameidFieldNumber = 1;
        private readonly static ulong GameidDefaultValue = 0UL;

        private ulong gameid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Gameid {
          get { if ((_hasBits0 & 1) != 0) { return gameid_; } else { return GameidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            gameid_ = value;
          }
        }
        /// <summary>Gets whether the "gameid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasGameid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "gameid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearGameid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "frame_rate" field.</summary>
        public const int FrameRateFieldNumber = 2;
        private readonly static uint FrameRateDefaultValue = 0;

        private uint frameRate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint FrameRate {
          get { if ((_hasBits0 & 2) != 0) { return frameRate_; } else { return FrameRateDefaultValue; } }
          set {
            _hasBits0 |= 2;
            frameRate_ = value;
          }
        }
        /// <summary>Gets whether the "frame_rate" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasFrameRate {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "frame_rate" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearFrameRate() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "manufacturer" field.</summary>
        public const int ManufacturerFieldNumber = 3;
        private readonly static string ManufacturerDefaultValue = "";

        private string manufacturer_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Manufacturer {
          get { return manufacturer_ ?? ManufacturerDefaultValue; }
          set {
            manufacturer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "manufacturer" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasManufacturer {
          get { return manufacturer_ != null; }
        }
        /// <summary>Clears the value of the "manufacturer" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearManufacturer() {
          manufacturer_ = null;
        }

        /// <summary>Field number for the "model" field.</summary>
        public const int ModelFieldNumber = 4;
        private readonly static string ModelDefaultValue = "";

        private string model_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Model {
          get { return model_ ?? ModelDefaultValue; }
          set {
            model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "model" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasModel {
          get { return model_ != null; }
        }
        /// <summary>Clears the value of the "model" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearModel() {
          model_ = null;
        }

        /// <summary>Field number for the "dx_video_card" field.</summary>
        public const int DxVideoCardFieldNumber = 5;
        private readonly static string DxVideoCardDefaultValue = "";

        private string dxVideoCard_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DxVideoCard {
          get { return dxVideoCard_ ?? DxVideoCardDefaultValue; }
          set {
            dxVideoCard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "dx_video_card" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDxVideoCard {
          get { return dxVideoCard_ != null; }
        }
        /// <summary>Clears the value of the "dx_video_card" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDxVideoCard() {
          dxVideoCard_ = null;
        }

        /// <summary>Field number for the "dx_vendorid" field.</summary>
        public const int DxVendoridFieldNumber = 6;
        private readonly static int DxVendoridDefaultValue = 0;

        private int dxVendorid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int DxVendorid {
          get { if ((_hasBits0 & 4) != 0) { return dxVendorid_; } else { return DxVendoridDefaultValue; } }
          set {
            _hasBits0 |= 4;
            dxVendorid_ = value;
          }
        }
        /// <summary>Gets whether the "dx_vendorid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDxVendorid {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "dx_vendorid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDxVendorid() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "dx_deviceid" field.</summary>
        public const int DxDeviceidFieldNumber = 7;
        private readonly static int DxDeviceidDefaultValue = 0;

        private int dxDeviceid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int DxDeviceid {
          get { if ((_hasBits0 & 8) != 0) { return dxDeviceid_; } else { return DxDeviceidDefaultValue; } }
          set {
            _hasBits0 |= 8;
            dxDeviceid_ = value;
          }
        }
        /// <summary>Gets whether the "dx_deviceid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDxDeviceid {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "dx_deviceid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDxDeviceid() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "num_gpu" field.</summary>
        public const int NumGpuFieldNumber = 8;
        private readonly static uint NumGpuDefaultValue = 0;

        private uint numGpu_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint NumGpu {
          get { if ((_hasBits0 & 16) != 0) { return numGpu_; } else { return NumGpuDefaultValue; } }
          set {
            _hasBits0 |= 16;
            numGpu_ = value;
          }
        }
        /// <summary>Gets whether the "num_gpu" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasNumGpu {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "num_gpu" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearNumGpu() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "system_ram" field.</summary>
        public const int SystemRamFieldNumber = 9;
        private readonly static ulong SystemRamDefaultValue = 0UL;

        private ulong systemRam_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong SystemRam {
          get { if ((_hasBits0 & 32) != 0) { return systemRam_; } else { return SystemRamDefaultValue; } }
          set {
            _hasBits0 |= 32;
            systemRam_ = value;
          }
        }
        /// <summary>Gets whether the "system_ram" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSystemRam {
          get { return (_hasBits0 & 32) != 0; }
        }
        /// <summary>Clears the value of the "system_ram" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSystemRam() {
          _hasBits0 &= ~32;
        }

        /// <summary>Field number for the "session_seconds" field.</summary>
        public const int SessionSecondsFieldNumber = 10;
        private readonly static int SessionSecondsDefaultValue = 0;

        private int sessionSeconds_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int SessionSeconds {
          get { if ((_hasBits0 & 64) != 0) { return sessionSeconds_; } else { return SessionSecondsDefaultValue; } }
          set {
            _hasBits0 |= 64;
            sessionSeconds_ = value;
          }
        }
        /// <summary>Gets whether the "session_seconds" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSessionSeconds {
          get { return (_hasBits0 & 64) != 0; }
        }
        /// <summary>Clears the value of the "session_seconds" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSessionSeconds() {
          _hasBits0 &= ~64;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as FrameRateReport);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(FrameRateReport other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Gameid != other.Gameid) return false;
          if (FrameRate != other.FrameRate) return false;
          if (Manufacturer != other.Manufacturer) return false;
          if (Model != other.Model) return false;
          if (DxVideoCard != other.DxVideoCard) return false;
          if (DxVendorid != other.DxVendorid) return false;
          if (DxDeviceid != other.DxDeviceid) return false;
          if (NumGpu != other.NumGpu) return false;
          if (SystemRam != other.SystemRam) return false;
          if (SessionSeconds != other.SessionSeconds) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasGameid) hash ^= Gameid.GetHashCode();
          if (HasFrameRate) hash ^= FrameRate.GetHashCode();
          if (HasManufacturer) hash ^= Manufacturer.GetHashCode();
          if (HasModel) hash ^= Model.GetHashCode();
          if (HasDxVideoCard) hash ^= DxVideoCard.GetHashCode();
          if (HasDxVendorid) hash ^= DxVendorid.GetHashCode();
          if (HasDxDeviceid) hash ^= DxDeviceid.GetHashCode();
          if (HasNumGpu) hash ^= NumGpu.GetHashCode();
          if (HasSystemRam) hash ^= SystemRam.GetHashCode();
          if (HasSessionSeconds) hash ^= SessionSeconds.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasGameid) {
            output.WriteRawTag(9);
            output.WriteFixed64(Gameid);
          }
          if (HasFrameRate) {
            output.WriteRawTag(16);
            output.WriteUInt32(FrameRate);
          }
          if (HasManufacturer) {
            output.WriteRawTag(26);
            output.WriteString(Manufacturer);
          }
          if (HasModel) {
            output.WriteRawTag(34);
            output.WriteString(Model);
          }
          if (HasDxVideoCard) {
            output.WriteRawTag(42);
            output.WriteString(DxVideoCard);
          }
          if (HasDxVendorid) {
            output.WriteRawTag(48);
            output.WriteInt32(DxVendorid);
          }
          if (HasDxDeviceid) {
            output.WriteRawTag(56);
            output.WriteInt32(DxDeviceid);
          }
          if (HasNumGpu) {
            output.WriteRawTag(64);
            output.WriteUInt32(NumGpu);
          }
          if (HasSystemRam) {
            output.WriteRawTag(72);
            output.WriteUInt64(SystemRam);
          }
          if (HasSessionSeconds) {
            output.WriteRawTag(80);
            output.WriteInt32(SessionSeconds);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasGameid) {
            output.WriteRawTag(9);
            output.WriteFixed64(Gameid);
          }
          if (HasFrameRate) {
            output.WriteRawTag(16);
            output.WriteUInt32(FrameRate);
          }
          if (HasManufacturer) {
            output.WriteRawTag(26);
            output.WriteString(Manufacturer);
          }
          if (HasModel) {
            output.WriteRawTag(34);
            output.WriteString(Model);
          }
          if (HasDxVideoCard) {
            output.WriteRawTag(42);
            output.WriteString(DxVideoCard);
          }
          if (HasDxVendorid) {
            output.WriteRawTag(48);
            output.WriteInt32(DxVendorid);
          }
          if (HasDxDeviceid) {
            output.WriteRawTag(56);
            output.WriteInt32(DxDeviceid);
          }
          if (HasNumGpu) {
            output.WriteRawTag(64);
            output.WriteUInt32(NumGpu);
          }
          if (HasSystemRam) {
            output.WriteRawTag(72);
            output.WriteUInt64(SystemRam);
          }
          if (HasSessionSeconds) {
            output.WriteRawTag(80);
            output.WriteInt32(SessionSeconds);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasGameid) {
            size += 1 + 8;
          }
          if (HasFrameRate) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FrameRate);
          }
          if (HasManufacturer) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Manufacturer);
          }
          if (HasModel) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
          }
          if (HasDxVideoCard) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DxVideoCard);
          }
          if (HasDxVendorid) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DxVendorid);
          }
          if (HasDxDeviceid) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DxDeviceid);
          }
          if (HasNumGpu) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumGpu);
          }
          if (HasSystemRam) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SystemRam);
          }
          if (HasSessionSeconds) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionSeconds);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(FrameRateReport other) {
          if (other == null) {
            return;
          }
          if (other.HasGameid) {
            Gameid = other.Gameid;
          }
          if (other.HasFrameRate) {
            FrameRate = other.FrameRate;
          }
          if (other.HasManufacturer) {
            Manufacturer = other.Manufacturer;
          }
          if (other.HasModel) {
            Model = other.Model;
          }
          if (other.HasDxVideoCard) {
            DxVideoCard = other.DxVideoCard;
          }
          if (other.HasDxVendorid) {
            DxVendorid = other.DxVendorid;
          }
          if (other.HasDxDeviceid) {
            DxDeviceid = other.DxDeviceid;
          }
          if (other.HasNumGpu) {
            NumGpu = other.NumGpu;
          }
          if (other.HasSystemRam) {
            SystemRam = other.SystemRam;
          }
          if (other.HasSessionSeconds) {
            SessionSeconds = other.SessionSeconds;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                Gameid = input.ReadFixed64();
                break;
              }
              case 16: {
                FrameRate = input.ReadUInt32();
                break;
              }
              case 26: {
                Manufacturer = input.ReadString();
                break;
              }
              case 34: {
                Model = input.ReadString();
                break;
              }
              case 42: {
                DxVideoCard = input.ReadString();
                break;
              }
              case 48: {
                DxVendorid = input.ReadInt32();
                break;
              }
              case 56: {
                DxDeviceid = input.ReadInt32();
                break;
              }
              case 64: {
                NumGpu = input.ReadUInt32();
                break;
              }
              case 72: {
                SystemRam = input.ReadUInt64();
                break;
              }
              case 80: {
                SessionSeconds = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 9: {
                Gameid = input.ReadFixed64();
                break;
              }
              case 16: {
                FrameRate = input.ReadUInt32();
                break;
              }
              case 26: {
                Manufacturer = input.ReadString();
                break;
              }
              case 34: {
                Model = input.ReadString();
                break;
              }
              case 42: {
                DxVideoCard = input.ReadString();
                break;
              }
              case 48: {
                DxVendorid = input.ReadInt32();
                break;
              }
              case 56: {
                DxDeviceid = input.ReadInt32();
                break;
              }
              case 64: {
                NumGpu = input.ReadUInt32();
                break;
              }
              case 72: {
                SystemRam = input.ReadUInt64();
                break;
              }
              case 80: {
                SessionSeconds = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code

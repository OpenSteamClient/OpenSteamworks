name: .NET Build

# Trigger the workflow on push or pull request
on:
  push:
    branches: ["master"]
    paths:
      - ".github/workflows/dotnet.yaml"
      - "Directory.Build.props"

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
      name: Download repo
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Build and pack release
      run: ./package-osw.sh

    - name: Set version envs
      run: |
        cd OpenSteamworks.Data 
        echo "BuiltVersion_OSWData=$(dotnet msbuild -getproperty:Version)" >> $GITHUB_ENV
        cd ../OpenSteamworks 
        echo "BuiltVersion_OSW=$(dotnet msbuild -getproperty:Version)" >> $GITHUB_ENV
        cd ../OpenSteamworks.Messaging
        echo "BuiltVersion_OSWMessaging=$(dotnet msbuild -getproperty:Version)" >> $GITHUB_ENV
        cd ../OpenSteamworks.Protobuf
        echo "BuiltVersion_OSWProtobuf=$(dotnet msbuild -getproperty:Version)" >> $GITHUB_ENV

    - name: Upload to NuGet.org
      run: |
        dotnet nuget push ${{ github.workspace }}/artifacts/package/release/OpenSteamworks.${{ env.BuiltVersion_OSW }}.nupkg --api-key ${{secrets.NUGET_TOKEN}} --source https://api.nuget.org/v3/index.json
        dotnet nuget push ${{ github.workspace }}/artifacts/package/release/OpenSteamworks.Data.${{ env.BuiltVersion_OSWData }}.nupkg --api-key ${{secrets.NUGET_TOKEN}} --source https://api.nuget.org/v3/index.json
        dotnet nuget push ${{ github.workspace }}/artifacts/package/release/OpenSteamworks.Messaging.${{ env.BuiltVersion_OSWMessaging }}.nupkg --api-key ${{secrets.NUGET_TOKEN}} --source https://api.nuget.org/v3/index.json
        dotnet nuget push ${{ github.workspace }}/artifacts/package/release/OpenSteamworks.Protobuf.${{ env.BuiltVersion_OSWProtobuf }}.nupkg --api-key ${{secrets.NUGET_TOKEN}} --source https://api.nuget.org/v3/index.json
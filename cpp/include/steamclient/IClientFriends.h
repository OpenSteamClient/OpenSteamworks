//==========================  AUTO-GENERATED FILE  ================================
//
// This file is partially auto-generated.
// If functions are removed, your changes to that function will be lost.
// Parameter types and names however are preserved if the function stays unchanged.
// Feel free to change parameters to be more accurate. 
//
//=============================================================================

#pragma once

#include "clienttypes.h"

class IClientFriends
{
public:
    virtual const char *GetPersonaName() = 0; //argc: -1, index 1
    virtual SteamAPICall_t SetPersonaName(const char *pchPersonaName) = 0; //argc: -1, index 2
    virtual unknown SetPersonaNameSDK() = 0; //argc: -1, index 3
    virtual bool IsPersonaNameSet() = 0; //argc: -1, index 4
    virtual EPersonaState GetPersonaState() = 0; //argc: -1, index 5
    virtual void SetPersonaState(EPersonaState eNewState) = 0; //argc: -1, index 6
    virtual bool NotifyUIOfMenuChange(bool,bool,bool,bool) = 0; //argc: -1, index 7
    virtual int GetFriendCount(EFriendFlags eFriendFlags) = 0; //argc: -1, index 8
    virtual unknown GetFriendArray() = 0; //argc: -1, index 9
    virtual unknown GetFriendArrayInGame() = 0; //argc: -1, index 10
    virtual CSteamID GetFriendByIndex(int iFriend, EFriendFlags eFriendFlags) = 0; //argc: -1, index 11
    virtual int GetOnlineFriendCount() = 0; //argc: -1, index 12
    virtual EFriendRelationship GetFriendRelationship(CSteamID steamIDFriend) = 0; //argc: -1, index 13
    virtual EPersonaState GetFriendPersonaState(CSteamID steamIDFriend) = 0; //argc: -1, index 14
    virtual const char *GetFriendPersonaName(CSteamID steamIDFriend) = 0; //argc: -1, index 15
    virtual int GetSmallFriendAvatar(CSteamID steamIDFriend) = 0; //argc: -1, index 16
    virtual int GetMediumFriendAvatar(CSteamID steamIDFriend) = 0; //argc: -1, index 17
    virtual int GetLargeFriendAvatar(CSteamID steamIDFriend) = 0; //argc: -1, index 18
    virtual bool BGetFriendAvatarURL(char *pAvatar, int cubAvatar, CSteamID steamIDFriend, int unk) = 0; //argc: -1, index 19
    virtual bool GetFriendAvatarHash(char *pHash, int cubHash, CSteamID steamIDFriend) = 0; //argc: -1, index 20
    virtual void SetFriendRegValue(CSteamID steamIDFriend, const char *pchKey, const char *pchValue) = 0; //argc: -1, index 21
    virtual const char *GetFriendRegValue(CSteamID steamIDFriend, const char *pchKey) = 0; //argc: -1, index 22
    virtual bool DeleteFriendRegValue(CSteamID steamIDFriend, const char *pchKey) = 0; //argc: -1, index 23
    virtual bool GetFriendGamePlayed(CSteamID steamIDFriend, FriendGameInfo_t *pFriendGameInfo) = 0; //argc: -1, index 24
    virtual const char *GetFriendGamePlayedExtraInfo(CSteamID steamIDFriend) = 0; //argc: -1, index 25
    virtual CSteamID GetFriendGameServer(CSteamID steamIDFriend) = 0; //argc: -1, index 26
    virtual EPersonaStateFlag GetFriendPersonaStateFlags(CSteamID steamIDFriend) = 0; //argc: -1, index 27
    virtual uint64 GetFriendBroadcastID(CSteamID steamIDFriend) = 0; //argc: -1, index 28
    virtual const char *GetFriendPersonaNameHistory(CSteamID steamIDFriend, int iPersonaName) = 0; //argc: -1, index 29
    virtual SteamAPICall_t RequestPersonaNameHistory(CSteamID steamIDFriend) = 0; //argc: -1, index 30
    virtual const char *GetFriendPersonaNameHistoryAndDate(CSteamID steamIDFriend, int iPersonaName, RTime32 *pTime) = 0; //argc: -1, index 31
    virtual bool AddFriend(CSteamID steamIDFriend) = 0; //argc: -1, index 32
    virtual bool RemoveFriend(CSteamID steamIDFriend) = 0; //argc: -1, index 33
    virtual bool HasFriend(CSteamID steamIDFriend, EFriendFlags eFriendFlags) = 0; //argc: -1, index 34
    virtual bool RequestUserInformation(CSteamID steamIDUser, bool bRequireNameOnly) = 0; //argc: -1, index 35
    virtual bool SetIgnoreFriend(CSteamID steamIDFriend, bool blocked) = 0; //argc: -1, index 36
    virtual bool ReportChatDeclined(CSteamID steamIDFriend) = 0; //argc: -1, index 37
    virtual bool CreateFriendsGroup(const char *pchGroupName) = 0; //argc: -1, index 38
    virtual bool DeleteFriendsGroup(FriendsGroupID_t friendsGroupID) = 0; //argc: -1, index 39
    virtual bool RenameFriendsGroup(const char *pchNewGroupName, FriendsGroupID_t friendsGroupID) = 0; //argc: -1, index 40
    virtual bool AddFriendToGroup(CSteamID steamIDFriend, FriendsGroupID_t friendsGroupID) = 0; //argc: -1, index 41
    virtual bool RemoveFriendFromGroup(CSteamID steamIDFriend, FriendsGroupID_t friendsGroupID) = 0; //argc: -1, index 42
    virtual bool IsFriendMemberOfFriendsGroup(CSteamID steamIDFriend, FriendsGroupID_t friendsGroupID) = 0; //argc: -1, index 43
    virtual int GetFriendsGroupCount() = 0; //argc: -1, index 44
    virtual FriendsGroupID_t GetFriendsGroupIDByIndex(int iFG) = 0; //argc: -1, index 45
    virtual const char *GetFriendsGroupName(FriendsGroupID_t friendsGroupID) = 0; //argc: -1, index 46
    virtual int GetFriendsGroupMembershipCount(FriendsGroupID_t friendsGroupID) = 0; //argc: -1, index 47
    virtual CSteamID GetFirstFriendsGroupMember(FriendsGroupID_t friendsGroupID) = 0; //argc: -1, index 48
    virtual CSteamID GetNextFriendsGroupMember(FriendsGroupID_t friendsGroupID) = 0; //argc: -1, index 49
    virtual unknown GetGroupFriendsMembershipCount() = 0; //argc: -1, index 50
    virtual unknown GetFirstGroupFriendsMember() = 0; //argc: -1, index 51
    virtual unknown GetNextGroupFriendsMember() = 0; //argc: -1, index 52
    virtual const char *GetPlayerNickname(CSteamID steamIDFriend) = 0; //argc: -1, index 53
    virtual bool SetPlayerNickname(CSteamID steamIDFriend, const char *pchNewNickname) = 0; //argc: -1, index 54
    virtual int GetFriendSteamLevel(CSteamID steamIDFriend) = 0; //argc: -1, index 55
    virtual int GetChatMessagesCount(CSteamID steamIDFriend) = 0; //argc: -1, index 56
    virtual int GetChatMessage(CSteamID steamIDFriend, int iMsg, void *pMsg, int cubMsg, EChatEntryType *pMsgType, CSteamID *pUser, RTime32 *pTime) = 0; //argc: -1, index 57
    virtual bool SendMsgToFriend(CSteamID steamIDFriend, EChatEntryType eFriendMsgType, const char *pchMsg) = 0; //argc: -1, index 58
    virtual void ClearChatHistory(CSteamID steamIDFriend) = 0; //argc: -1, index 59
    virtual int GetKnownClanCount() = 0; //argc: -1, index 60
    virtual CSteamID GetKnownClanByIndex(int iClan) = 0; //argc: -1, index 61
    virtual int GetClanCount() = 0; //argc: -1, index 62
    virtual CSteamID GetClanByIndex(int iClan) = 0; //argc: -1, index 63
    virtual const char *GetClanName(CSteamID steamIDClan) = 0; //argc: -1, index 64
    virtual const char *GetClanTag(CSteamID steamIDClan) = 0; //argc: -1, index 65
    virtual bool GetFriendActivityCounts(int *pnOnline, int *pnInGame, bool bExcludeTaggedFriends) = 0; //argc: -1, index 66
    virtual bool GetClanActivityCounts(CSteamID steamIDClan, int *pnOnline, int *pnInGame, int *pnChatting) = 0; //argc: -1, index 67
    virtual SteamAPICall_t DownloadClanActivityCounts(CSteamID *psteamIDClans, int cClansToRequest) = 0; //argc: -1, index 68
    virtual bool GetFriendsGroupActivityCounts(FriendsGroupID_t friendsGroupID, int *pnOnline, int *pnInGame) = 0; //argc: -1, index 69
    virtual bool IsClanPublic(CSteamID steamIDClan) = 0; //argc: -1, index 70
    virtual bool IsClanOfficialGameGroup(CSteamID steamIDClan) = 0; //argc: -1, index 71
    virtual SteamAPICall_t JoinClanChatRoom(CSteamID steamIDClanChat) = 0; //argc: -1, index 72
    virtual bool LeaveClanChatRoom(CSteamID steamIDClanChat) = 0; //argc: -1, index 73
    virtual int GetClanChatMemberCount(CSteamID steamIDClanChat) = 0; //argc: -1, index 74
    virtual CSteamID GetChatMemberByIndex(CSteamID steamIDClanChat, int iUser) = 0; //argc: -1, index 75
    virtual bool SendClanChatMessage(CSteamID steamIDClanChat, const char *pchText) = 0; //argc: -1, index 76
    virtual int GetClanChatMessage(CSteamID steamIDClanChat, int iMessage, void *prgchText, int cchTextMax, EChatEntryType *peChatEntryType, CSteamID *psteamidChatter) = 0; //argc: -1, index 77
    virtual bool IsClanChatAdmin(CSteamID steamIDClanChat, CSteamID steamIDUser) = 0; //argc: -1, index 78
    virtual bool IsClanChatWindowOpenInSteam(CSteamID steamIDClanChat) = 0; //argc: -1, index 79
    virtual bool OpenClanChatWindowInSteam(CSteamID steamIDClanChat) = 0; //argc: -1, index 80
    virtual bool CloseClanChatWindowInSteam(CSteamID steamIDClanChat) = 0; //argc: -1, index 81
    virtual bool SetListenForFriendsMessages(bool bInterceptEnabled) = 0; //argc: -1, index 82
    virtual bool ReplyToFriendMessage(CSteamID steamIDFriend, const char *pchMsgToSend) = 0; //argc: -1, index 83
    virtual int GetFriendMessage(CSteamID steamIDFriend, int iMessageID, void *pvData, int cubData, EChatEntryType *peChatEntryType) = 0; //argc: -1, index 84
    virtual bool InviteFriendToClan(CSteamID steamIDFriend, CSteamID steamIDClan) = 0; //argc: -1, index 85
    virtual bool AcknowledgeInviteToClan(CSteamID steamIDfriend, bool bAccept) = 0; //argc: -1, index 86
    virtual int GetFriendCountFromSource(CSteamID steamIDSource) = 0; //argc: -1, index 87
    virtual CSteamID GetFriendFromSourceByIndex(CSteamID steamIDSource, int iFriend) = 0; //argc: -1, index 88
    virtual bool IsUserInSource(CSteamID steamIDUser, CSteamID steamIDSource) = 0; //argc: -1, index 89
    virtual int GetCoplayFriendCount() = 0; //argc: -1, index 90
    virtual CSteamID GetCoplayFriend(int iCoplayFriend) = 0; //argc: -1, index 91
    virtual int GetFriendCoplayTime(CSteamID steamIDFriend) = 0; //argc: -1, index 92
    virtual AppId_t GetFriendCoplayGame(CSteamID steamIDFriend) = 0; //argc: -1, index 93
    virtual bool SetRichPresence(AppId_t nAppID, const char *pchKey, const char *pchValue) = 0; //argc: -1, index 94
    virtual void ClearRichPresence(AppId_t nAppID) = 0; //argc: -1, index 95
    virtual const char *GetFriendRichPresence(AppId_t nAppId, CSteamID steamIDUser, const char *pchKey) = 0; //argc: -1, index 96
    virtual int GetFriendRichPresenceKeyCount(AppId_t nAppId, CSteamID steamIDUser) = 0; //argc: -1, index 97
    virtual const char *GetFriendRichPresenceKeyByIndex(AppId_t nAppId, CSteamID steamIDUser, int iKey) = 0; //argc: -1, index 98
    virtual void RequestFriendRichPresence(AppId_t nAppId, CSteamID steamIDUser) = 0; //argc: -1, index 99
    virtual bool JoinChatRoom(CSteamID steamIDChat) = 0; //argc: -1, index 100
    virtual void LeaveChatRoom(CSteamID steamIDChat) = 0; //argc: -1, index 101
    virtual bool InviteUserToChatRoom(CSteamID steamIDChat, CSteamID steamIDUser) = 0; //argc: -1, index 102
    virtual bool SendChatMsg(CSteamID steamIDChat, EChatEntryType eMsg, const char *pchMsg) = 0; //argc: -1, index 103
    virtual unknown GetChatRoomMessagesCount() = 0; //argc: -1, index 104
    virtual unknown GetChatRoomEntry() = 0; //argc: -1, index 105
    virtual unknown ClearChatRoomHistory() = 0; //argc: -1, index 106
    virtual unknown SerializeChatRoomDlg() = 0; //argc: -1, index 107
    virtual unknown GetSizeOfSerializedChatRoomDlg() = 0; //argc: -1, index 108
    virtual unknown GetSerializedChatRoomDlg() = 0; //argc: -1, index 109
    virtual unknown ClearSerializedChatRoomDlg() = 0; //argc: -1, index 110
    virtual unknown KickChatMember() = 0; //argc: -1, index 111
    virtual unknown BanChatMember() = 0; //argc: -1, index 112
    virtual unknown UnBanChatMember() = 0; //argc: -1, index 113
    virtual unknown SetChatRoomType() = 0; //argc: -1, index 114
    virtual unknown GetChatRoomLockState() = 0; //argc: -1, index 115
    virtual unknown GetChatRoomPermissions() = 0; //argc: -1, index 116
    virtual unknown SetChatRoomModerated() = 0; //argc: -1, index 117
    virtual unknown BChatRoomModerated() = 0; //argc: -1, index 118
    virtual unknown NotifyChatRoomDlgsOfUIChange() = 0; //argc: -1, index 119
    virtual unknown TerminateChatRoom() = 0; //argc: -1, index 120
    virtual unknown GetChatRoomCount() = 0; //argc: -1, index 121
    virtual unknown GetChatRoomByIndex() = 0; //argc: -1, index 122
    virtual unknown GetChatRoomName() = 0; //argc: -1, index 123
    virtual unknown BGetChatRoomMemberDetails() = 0; //argc: -1, index 124
    virtual unknown CreateChatRoom() = 0; //argc: -1, index 125
    virtual unknown JoinChatRoomGroup() = 0; //argc: -1, index 126
    virtual unknown ShowChatRoomGroupInvite() = 0; //argc: -1, index 127
    virtual unknown VoiceCallNew() = 0; //argc: -1, index 128
    virtual unknown VoiceCall() = 0; //argc: -1, index 129
    virtual unknown VoiceHangUp() = 0; //argc: -1, index 130
    virtual unknown SetVoiceSpeakerVolume() = 0; //argc: -1, index 131
    virtual unknown SetVoiceMicrophoneVolume() = 0; //argc: -1, index 132
    virtual unknown SetAutoAnswer() = 0; //argc: -1, index 133
    virtual unknown VoiceAnswer() = 0; //argc: -1, index 134
    virtual unknown AcceptVoiceCall() = 0; //argc: -1, index 135
    virtual unknown VoicePutOnHold() = 0; //argc: -1, index 136
    virtual unknown BVoiceIsLocalOnHold() = 0; //argc: -1, index 137
    virtual unknown BVoiceIsRemoteOnHold() = 0; //argc: -1, index 138
    virtual unknown SetDoNotDisturb() = 0; //argc: -1, index 139
    virtual unknown EnableVoiceNotificationSounds() = 0; //argc: -1, index 140
    virtual unknown SetPushToTalkEnabled() = 0; //argc: -1, index 141
    virtual unknown IsPushToTalkEnabled() = 0; //argc: -1, index 142
    virtual unknown IsPushToMuteEnabled() = 0; //argc: -1, index 143
    virtual unknown SetPushToTalkKey() = 0; //argc: -1, index 144
    virtual unknown GetPushToTalkKey() = 0; //argc: -1, index 145
    virtual unknown IsPushToTalkKeyDown() = 0; //argc: -1, index 146
    virtual unknown EnableVoiceCalibration() = 0; //argc: -1, index 147
    virtual unknown IsVoiceCalibrating() = 0; //argc: -1, index 148
    virtual unknown GetVoiceCalibrationSamplePeak() = 0; //argc: -1, index 149
    virtual unknown SetMicBoost() = 0; //argc: -1, index 150
    virtual unknown GetMicBoost() = 0; //argc: -1, index 151
    virtual unknown HasHardwareMicBoost() = 0; //argc: -1, index 152
    virtual unknown GetMicDeviceName() = 0; //argc: -1, index 153
    virtual unknown StartTalking() = 0; //argc: -1, index 154
    virtual unknown EndTalking() = 0; //argc: -1, index 155
    virtual unknown VoiceIsValid() = 0; //argc: -1, index 156
    virtual unknown SetAutoReflectVoice() = 0; //argc: -1, index 157
    virtual unknown GetCallState() = 0; //argc: -1, index 158
    virtual unknown GetVoiceMicrophoneVolume() = 0; //argc: -1, index 159
    virtual unknown GetVoiceSpeakerVolume() = 0; //argc: -1, index 160
    virtual unknown TimeSinceLastVoiceDataReceived() = 0; //argc: -1, index 161
    virtual unknown TimeSinceLastVoiceDataSend() = 0; //argc: -1, index 162
    virtual unknown BCanSend() = 0; //argc: -1, index 163
    virtual unknown BCanReceive() = 0; //argc: -1, index 164
    virtual unknown GetEstimatedBitsPerSecond() = 0; //argc: -1, index 165
    virtual unknown GetPeakSample() = 0; //argc: -1, index 166
    virtual unknown SendResumeRequest() = 0; //argc: -1, index 167
    virtual unknown OpenFriendsDialog() = 0; //argc: -1, index 168
    virtual unknown OpenChatDialog() = 0; //argc: -1, index 169
    virtual unknown OpenInviteToTradeDialog() = 0; //argc: -1, index 170
    virtual unknown StartChatRoomVoiceSpeaking() = 0; //argc: -1, index 171
    virtual unknown EndChatRoomVoiceSpeaking() = 0; //argc: -1, index 172
    virtual unknown GetFriendLastLogonTime() = 0; //argc: -1, index 173
    virtual unknown GetFriendLastLogoffTime() = 0; //argc: -1, index 174
    virtual unknown GetChatRoomVoiceTotalSlotCount() = 0; //argc: -1, index 175
    virtual unknown GetChatRoomVoiceUsedSlotCount() = 0; //argc: -1, index 176
    virtual unknown GetChatRoomVoiceUsedSlot() = 0; //argc: -1, index 177
    virtual unknown GetChatRoomVoiceStatus() = 0; //argc: -1, index 178
    virtual unknown BChatRoomHasAvailableVoiceSlots() = 0; //argc: -1, index 179
    virtual unknown BIsChatRoomVoiceSpeaking() = 0; //argc: -1, index 180
    virtual unknown GetChatRoomPeakSample() = 0; //argc: -1, index 181
    virtual unknown ChatRoomVoiceRetryConnections() = 0; //argc: -1, index 182
    virtual unknown SetPortTypes() = 0; //argc: -1, index 183
    virtual unknown ReinitAudio() = 0; //argc: -1, index 184
    virtual void SetInGameVoiceSpeaking(CSteamID steamIDUser, bool bSpeaking) = 0; //argc: -1, index 185
    virtual bool IsInGameVoiceSpeaking() = 0; //argc: -1, index 186
    virtual void ActivateGameOverlay(const char *pchDialog) = 0; //argc: -1, index 187
    virtual void ActivateGameOverlayToUser(const char *pchDialog, CSteamID steamID) = 0; //argc: -1, index 188
    virtual void ActivateGameOverlayToWebPage(const char *pchURL, EActivateGameOverlayToWebPageMode eMode) = 0; //argc: -1, index 189
    virtual void ActivateGameOverlayToStore(AppId_t nAppID, EOverlayToStoreFlag eFlag) = 0; //argc: -1, index 190
    virtual void ActivateGameOverlayInviteDialog(CSteamID steamIDLobby) = 0; //argc: -1, index 191
    virtual void ActivateGameOverlayRemotePlayTogetherInviteDialog(CSteamID steamIDLobby) = 0; //argc: -1, index 192
    virtual void ActivateGameOverlayInviteDialogConnectString(const char *pchConnectString) = 0; //argc: -1, index 193
    virtual unknown ProcessActivateGameOverlayInMainUI() = 0; //argc: -1, index 194
    virtual unknown NotifyGameOverlayStateChanged() = 0; //argc: -1, index 195
    virtual unknown NotifyGameServerChangeRequested() = 0; //argc: -1, index 196
    virtual unknown NotifyLobbyJoinRequested() = 0; //argc: -1, index 197
    virtual unknown NotifyRichPresenceJoinRequested() = 0; //argc: -1, index 198
    virtual unknown GetClanRelationship() = 0; //argc: -1, index 199
    virtual unknown GetClanInviteCount() = 0; //argc: -1, index 200
    virtual unknown GetFriendClanRank() = 0; //argc: -1, index 201
    virtual unknown VoiceIsAvailable() = 0; //argc: -1, index 202
    virtual unknown TestVoiceDisconnect() = 0; //argc: -1, index 203
    virtual unknown TestChatRoomPeerDisconnect() = 0; //argc: -1, index 204
    virtual unknown TestVoicePacketLoss() = 0; //argc: -1, index 205
    virtual unknown FindFriendVoiceChatHandle() = 0; //argc: -1, index 206
    virtual unknown RequestFriendsWhoPlayGame() = 0; //argc: -1, index 207
    virtual unknown GetCountFriendsWhoPlayGame() = 0; //argc: -1, index 208
    virtual unknown GetFriendWhoPlaysGame() = 0; //argc: -1, index 209
    virtual unknown GetCountFriendsInGame() = 0; //argc: -1, index 210
    virtual void SetPlayedWith(CSteamID steamIDUserPlayedWith) = 0; //argc: -1, index 211
    virtual SteamAPICall_t RequestClanOfficerList(CSteamID steamIDClan) = 0; //argc: -1, index 212
    virtual CSteamID GetClanOwner(CSteamID steamIDClan) = 0; //argc: -1, index 213
    virtual int GetClanOfficerCount(CSteamID steamIDClan) = 0; //argc: -1, index 214
    virtual CSteamID GetClanOfficerByIndex(CSteamID steamIDClan, int iOfficer) = 0; //argc: -1, index 215
    virtual unknown RequestFriendProfileInfo() = 0; //argc: -1, index 216
    virtual unknown GetFriendProfileInfo() = 0; //argc: -1, index 217
    virtual bool InviteUserToGame(AppId_t nAppId, CSteamID steamIDUser, const char *pchConnectString) = 0; //argc: -1, index 218
    virtual unknown RequestTrade() = 0; //argc: -1, index 219
    virtual unknown TradeResponse() = 0; //argc: -1, index 220
    virtual unknown CancelTradeRequest() = 0; //argc: -1, index 221
    virtual unknown HideFriend() = 0; //argc: -1, index 222
    virtual SteamAPICall_t GetFollowerCount(CSteamID steamID) = 0; //argc: -1, index 223
    virtual SteamAPICall_t IsFollowing(CSteamID steamID) = 0; //argc: -1, index 224
    virtual SteamAPICall_t EnumerateFollowingList(uint32 unStartIndex) = 0; //argc: -1, index 225
    virtual unknown RequestFriendMessageHistory() = 0; //argc: -1, index 226
    virtual unknown RequestFriendMessageHistoryForOfflineMessages() = 0; //argc: -1, index 227
    virtual unknown GetCountFriendsWithOfflineMessages() = 0; //argc: -1, index 228
    virtual unknown GetFriendWithOfflineMessage() = 0; //argc: -1, index 229
    virtual unknown ClearFriendHasOfflineMessage() = 0; //argc: -1, index 230
    virtual unknown RequestEmoticonList() = 0; //argc: -1, index 231
    virtual unknown GetEmoticonCount() = 0; //argc: -1, index 232
    virtual unknown GetEmoticonName() = 0; //argc: -1, index 233
    virtual unknown ClientLinkFilterInit() = 0; //argc: -1, index 234
    virtual unknown LinkDisposition() = 0; //argc: -1, index 235
    virtual const char *GetFriendPersonaName_Public(CSteamID steamIDFriend) = 0; //argc: -1, index 236
    virtual const char *GetPlayerNickname_Public(CSteamID steamIDFriend) = 0; //argc: -1, index 237
    virtual unknown SetFriendsUIActiveClanChatList() = 0; //argc: -1, index 238
    virtual int GetNumChatsWithUnreadPriorityMessages() = 0; //argc: -1, index 239
    virtual void SetNumChatsWithUnreadPriorityMessages(int iNumChatsWithUnreadPriorityMessages) = 0; //argc: -1, index 240
    virtual bool RegisterProtocolInOverlayBrowser(const char *pchProtocol) = 0; //argc: -1, index 241
    virtual bool HandleProtocolForOverlayBrowser(AppId_t appid, const char *urlToForward) = 0; //argc: -1, index 242
    virtual SteamAPICall_t RequestEquippedProfileItems(CSteamID steamID) = 0; //argc: -1, index 243
    virtual bool BHasEquippedProfileItem(CSteamID steamID, ECommunityProfileItemType itemType) = 0; //argc: -1, index 244
    virtual const char *GetProfileItemPropertyString(CSteamID steamID, ECommunityProfileItemType itemType, ECommunityProfileItemProperty prop) = 0; //argc: -1, index 245
    virtual uint32 GetProfileItemPropertyUint(CSteamID steamID, ECommunityProfileItemType itemType, ECommunityProfileItemProperty prop) = 0; //argc: -1, index 246
    virtual SteamAPICall_t DownloadCommunityItemAsset(CSteamID steamID, const char*, const char*) = 0; //argc: -1, index 247
    virtual const char *GetMultiplayerSessionShareURL(AppId_t nAppID) = 0; //argc: -1, index 248
};
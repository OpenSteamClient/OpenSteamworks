import fs from 'fs';
import { ClientManifest } from '../manifest';
import { ClientInterface } from '../dump';
export class InterfaceConsts {
    static CreateInterfaceConstsFileFromManifest(path: string, interfaces: ClientInterface[]): void {
        var functionNames: string[] = [];
        var fullText = "";
        fullText += "// DO NOT EDIT; AUTOGENERATED FILE BY OSWUPDATER\n"
        fullText += "namespace OpenSteamworks.IPCClient.Interfaces;\n"
        fullText += "\n";
        fullText += "public static class InterfaceConsts {\n"
        for (let index = 0; index < interfaces.length; index++) {
            const iface = interfaces[index];
            var hasinterfaceid: boolean = false;
            for (let funcindex = 0; funcindex < iface.functions.length; funcindex++) {
                const func = iface.functions[funcindex];
                if (func.interfaceid != "0" && !hasinterfaceid) {
                    fullText += `   public const byte ${iface.name}_InterfaceID = ${func.interfaceid};\n`
                    hasinterfaceid = true;
                }
                
                var functionFullName = `${iface.name}_${func.name}_A${func.serializedargs.length}_R${func.serializedreturns.length}`;
                var existingLen = functionNames.filter((f) => f == functionFullName).length;
                functionNames.push(functionFullName);
                if (existingLen != 0) {
                    functionFullName += "_DUP_" + existingLen;
                }
                
                fullText += `   public const uint ${functionFullName}_FunctionID = ${func.functionid};\n`
                fullText += `   public const uint ${functionFullName}_Fencepost = ${func.fencepost};\n`
            }
        }
        fullText += "}\n"
        fs.writeFileSync(path, fullText);
    }
}